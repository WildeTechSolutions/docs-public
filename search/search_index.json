{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ThomasWildeTech","text":"<p>Welcome to my website which documents how to develop and deploy great web and mobile applications.</p>"},{"location":"tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"tags/#2fa","title":"2FA","text":"<ul> <li>Sudo Two-Factor Authentication</li> </ul>"},{"location":"tags/#entitylisteners","title":"@EntityListeners","text":"<ul> <li>Listening to events in SpringBoot</li> </ul>"},{"location":"tags/#repositoryeventhandler","title":"@RepositoryEventHandler","text":"<ul> <li>Listening to events in SpringBoot</li> </ul>"},{"location":"tags/#angular","title":"Angular","text":"<ul> <li>Communicating between components</li> <li>Environment Configuration</li> <li>Project Structure</li> <li>Setup</li> <li>Alerts</li> <li>Communication</li> <li>Chart.js</li> <li>Table</li> <li>Table</li> <li>Ng matero</li> <li>Overview</li> <li>Dockerizing an application</li> </ul>"},{"location":"tags/#artifact-repository","title":"Artifact Repository","text":"<ul> <li>Sonatype Nexus</li> </ul>"},{"location":"tags/#aspects","title":"Aspects","text":"<ul> <li>Listening to events in SpringBoot</li> </ul>"},{"location":"tags/#auditing","title":"Auditing","text":"<ul> <li>Listening to events in SpringBoot</li> </ul>"},{"location":"tags/#authentication","title":"Authentication","text":"<ul> <li>How to use a FireBase as a Auth provider (untested)</li> </ul>"},{"location":"tags/#authorization","title":"Authorization","text":"<ul> <li>Authorization</li> </ul>"},{"location":"tags/#cicd","title":"CI/CD","text":"<ul> <li>Deploy to GitHub Pages</li> </ul>"},{"location":"tags/#caddy","title":"Caddy","text":"<ul> <li>Hosting local https app</li> <li>Hosting local https with trusted cert from Cloudflare with Caddy</li> </ul>"},{"location":"tags/#casaos","title":"CasaOS","text":"<ul> <li>Using Ubuntu Snap Store</li> <li>Using Umbrel</li> <li>What is Immich?</li> </ul>"},{"location":"tags/#cloudflare","title":"CloudFlare","text":"<ul> <li>What is Immich?</li> </ul>"},{"location":"tags/#cloudflare_1","title":"Cloudflare","text":"<ul> <li>CloudFlare Tunnel</li> </ul>"},{"location":"tags/#cloudron","title":"Cloudron","text":"<ul> <li>What is Immich?</li> </ul>"},{"location":"tags/#component-communication","title":"Component Communication","text":"<ul> <li>Communicating between components</li> <li>Communication</li> </ul>"},{"location":"tags/#components","title":"Components","text":"<ul> <li>Communicating between components</li> <li>Communication</li> </ul>"},{"location":"tags/#configuration","title":"Configuration","text":"<ul> <li>Environment Configuration</li> </ul>"},{"location":"tags/#database","title":"Database","text":"<ul> <li>Dockerizing an application</li> </ul>"},{"location":"tags/#datbase","title":"Datbase","text":"<ul> <li>Serverless Relational Databases</li> </ul>"},{"location":"tags/#docker","title":"Docker","text":"<ul> <li>Setting up your own private Docker Hub Repository</li> <li>What is Immich?</li> <li>Docker</li> <li>Dockerizing an application</li> </ul>"},{"location":"tags/#elk","title":"ELK","text":"<ul> <li>ELK Stack</li> </ul>"},{"location":"tags/#entites","title":"Entites","text":"<ul> <li>Entity Properties</li> </ul>"},{"location":"tags/#entity-graph","title":"Entity Graph","text":"<ul> <li>Entity graph</li> </ul>"},{"location":"tags/#file-download","title":"File Download","text":"<ul> <li>File upload download</li> <li>Files</li> </ul>"},{"location":"tags/#file-upload","title":"File Upload","text":"<ul> <li>File upload download</li> <li>Files</li> </ul>"},{"location":"tags/#files","title":"Files","text":"<ul> <li>File upload download</li> <li>Files</li> </ul>"},{"location":"tags/#firebase","title":"Firebase","text":"<ul> <li>How to use a FireBase as a Auth provider (untested)</li> </ul>"},{"location":"tags/#flutter","title":"Flutter","text":"<ul> <li>2024 07 27 Flutter</li> <li>Flutter Docs Android</li> <li>Flutter Firebase Tutorial</li> <li>Fireship.io tutorial</li> </ul>"},{"location":"tags/#github","title":"Github","text":"<ul> <li>Deploy to GitHub Pages</li> </ul>"},{"location":"tags/#github-actions","title":"Github Actions","text":"<ul> <li>Deploy to GitHub Pages</li> </ul>"},{"location":"tags/#github-pages","title":"Github Pages","text":"<ul> <li>Deploy to GitHub Pages</li> </ul>"},{"location":"tags/#goaccess","title":"GoAccess","text":"<ul> <li>Using GoAccess with Nginx Proxy Manager (NPM) to visuallize logs.</li> </ul>"},{"location":"tags/#gradle","title":"Gradle","text":"<ul> <li>Organizing different repositories and environmental variables</li> <li>Understanding the Structure of a Spring Boot Application</li> </ul>"},{"location":"tags/#home-server","title":"Home Server","text":"<ul> <li>Sonatype Nexus</li> </ul>"},{"location":"tags/#honojs","title":"Hono.js","text":"<ul> <li>Stripe Fireship Demo</li> </ul>"},{"location":"tags/#immich","title":"Immich","text":"<ul> <li>Setting up a Free, Self Hosted, Photo Storage Alternative</li> <li>Using Umbrel</li> <li>What is Immich?</li> <li>Hosting local https app</li> <li>Hosting local https with trusted cert from Cloudflare with NPM</li> <li>Hosting local https with trusted cert from Cloudflare with Caddy</li> <li>Using Kopia to setup snapshot backups</li> <li>Immich</li> </ul>"},{"location":"tags/#intellij","title":"IntelliJ","text":"<ul> <li>Intellij</li> </ul>"},{"location":"tags/#jpro","title":"JPro","text":"<ul> <li>Creating a working JavaFX demo in the web</li> </ul>"},{"location":"tags/#java","title":"Java","text":"<ul> <li>Organizing different repositories and environmental variables</li> <li>Understanding the Structure of a Spring Boot Application</li> <li>Log4j2 config</li> </ul>"},{"location":"tags/#javafx","title":"JavaFX","text":"<ul> <li>Creating a working JavaFX demo in the web</li> <li>Vs code</li> </ul>"},{"location":"tags/#jsonidentityinfo","title":"JsonIdentityInfo","text":"<ul> <li>Entity back references</li> </ul>"},{"location":"tags/#jsonignoreproperties","title":"JsonIgnoreProperties","text":"<ul> <li>Entity back references</li> </ul>"},{"location":"tags/#kibana","title":"Kibana","text":"<ul> <li>ELK Stack</li> </ul>"},{"location":"tags/#kopia","title":"Kopia","text":"<ul> <li>Using Kopia to setup snapshot backups</li> </ul>"},{"location":"tags/#lets-encrypt","title":"Let's Encrypt","text":"<ul> <li>Nginx Web Server</li> </ul>"},{"location":"tags/#linux","title":"Linux","text":"<ul> <li>Sudo Two-Factor Authentication</li> <li>Hosting local https app</li> <li>Hosting local https with trusted cert from Cloudflare with NPM</li> <li>Hosting local https with trusted cert from Cloudflare with Caddy</li> <li>Using GoAccess with Nginx Proxy Manager (NPM) to visuallize logs.</li> <li>Using Kopia to setup snapshot backups</li> </ul>"},{"location":"tags/#linux-desktop","title":"Linux Desktop","text":"<ul> <li>Installing Office 2013 with Wine</li> </ul>"},{"location":"tags/#linux-mint","title":"Linux Mint","text":"<ul> <li>Installing Office 2013 with Wine</li> </ul>"},{"location":"tags/#live-templates","title":"Live Templates","text":"<ul> <li>Vs code</li> <li>Intellij</li> </ul>"},{"location":"tags/#log4j2","title":"Log4j2","text":"<ul> <li>Log4j2 config</li> </ul>"},{"location":"tags/#logs","title":"Logs","text":"<ul> <li>Using GoAccess with Nginx Proxy Manager (NPM) to visuallize logs.</li> </ul>"},{"location":"tags/#logstash","title":"Logstash","text":"<ul> <li>ELK Stack</li> </ul>"},{"location":"tags/#mfa","title":"MFA","text":"<ul> <li>Sudo Two-Factor Authentication</li> </ul>"},{"location":"tags/#mssql","title":"MSSQL","text":"<ul> <li>MS SQL Installation</li> </ul>"},{"location":"tags/#material","title":"Material","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#mkdocs","title":"MkDocs","text":"<ul> <li>Deploy to GitHub Pages</li> </ul>"},{"location":"tags/#nextcloud","title":"NextCloud","text":"<ul> <li>NextCloud</li> </ul>"},{"location":"tags/#nexus","title":"Nexus","text":"<ul> <li>Setting up your own private Docker Hub Repository</li> </ul>"},{"location":"tags/#nginx","title":"Nginx","text":"<ul> <li>Nginx Web Server</li> </ul>"},{"location":"tags/#nginx-proxy-manager","title":"Nginx Proxy Manager","text":"<ul> <li>Hosting local https with trusted cert from Cloudflare with NPM</li> <li>Using GoAccess with Nginx Proxy Manager (NPM) to visuallize logs.</li> </ul>"},{"location":"tags/#no-ip","title":"No-IP","text":"<ul> <li>DDNS</li> </ul>"},{"location":"tags/#photo-storage-solution","title":"Photo Storage Solution","text":"<ul> <li>Setting up a Free, Self Hosted, Photo Storage Alternative</li> </ul>"},{"location":"tags/#portainer","title":"Portainer","text":"<ul> <li>What is Immich?</li> <li>Portainer</li> </ul>"},{"location":"tags/#project-structure","title":"Project Structure","text":"<ul> <li>Project Structure</li> <li>Project Structure</li> </ul>"},{"location":"tags/#raid","title":"RAID","text":"<ul> <li>Setting up RAID 1 on my Ubuntu Desktop</li> </ul>"},{"location":"tags/#record","title":"Record","text":"<ul> <li>2023 10 08 ESPN Fantasy Football SpringBoot</li> </ul>"},{"location":"tags/#remote-desktop","title":"Remote Desktop","text":"<ul> <li>Remote Desktop</li> </ul>"},{"location":"tags/#repository","title":"Repository","text":"<ul> <li>Entity graph</li> </ul>"},{"location":"tags/#roster","title":"Roster","text":"<ul> <li>2023 10 07 ESPN Fantasy Football SpringBoot</li> </ul>"},{"location":"tags/#sql","title":"SQL","text":"<ul> <li>MS SQL Installation</li> </ul>"},{"location":"tags/#ssh","title":"SSH","text":"<ul> <li>SSH</li> </ul>"},{"location":"tags/#ssl","title":"SSL","text":"<ul> <li>Nginx Web Server</li> </ul>"},{"location":"tags/#seafile","title":"Seafile","text":"<ul> <li>Seafile</li> </ul>"},{"location":"tags/#self-host","title":"Self Host","text":"<ul> <li>Setting up your own private Docker Hub Repository</li> </ul>"},{"location":"tags/#self-hosted","title":"Self Hosted","text":"<ul> <li>Using Ubuntu Snap Store</li> <li>Using Umbrel</li> <li>Using Umbrel</li> <li>What is Immich?</li> </ul>"},{"location":"tags/#software-templates","title":"Software Templates","text":"<ul> <li>Overview</li> </ul>"},{"location":"tags/#sonatype-nexus","title":"Sonatype Nexus","text":"<ul> <li>Organizing different repositories and environmental variables</li> <li>Sonatype Nexus</li> </ul>"},{"location":"tags/#spring-boot","title":"Spring Boot","text":"<ul> <li>2023 10 07 ESPN Fantasy Football SpringBoot</li> <li>2023 10 08 ESPN Fantasy Football SpringBoot</li> <li>Understanding the Structure of a Spring Boot Application</li> <li>2024 08 26 ESPN Fantasy Football SpringBoot</li> <li>2024 10 06 ESPN Fantasy Football SpringBoot</li> <li>How to use a FireBase as a Auth provider (untested)</li> <li>Listening to events in SpringBoot</li> <li>Dockerizing an application</li> <li>Authorization</li> <li>Entity Properties</li> <li>Entity back references</li> <li>Entity graph</li> <li>File upload download</li> <li>Files</li> <li>Project Structure</li> <li>Intellij</li> </ul>"},{"location":"tags/#stripe","title":"Stripe","text":"<ul> <li>Stripe Fireship Demo</li> </ul>"},{"location":"tags/#supabase","title":"Supabase","text":"<ul> <li>Stripe Fireship Demo</li> </ul>"},{"location":"tags/#ubuntu","title":"Ubuntu","text":"<ul> <li>DDNS</li> <li>Docker</li> <li>ELK Stack</li> <li>Immich</li> <li>Mapped Network drive</li> <li>NextCloud</li> <li>Portainer</li> <li>Remote Desktop</li> <li>Seafile</li> <li>SSH</li> <li>Nginx Web Server</li> <li>VPN with WireGuard</li> </ul>"},{"location":"tags/#ubuntu-desktop","title":"Ubuntu Desktop","text":"<ul> <li>Building a Home Server with an old PC</li> <li>Setting up a Free and Open Source VPN Server</li> <li>Setting up a Free, Self Hosted, Photo Storage Alternative</li> <li>Setting up RAID 1 on my Ubuntu Desktop</li> </ul>"},{"location":"tags/#umbrel","title":"Umbrel","text":"<ul> <li>Using Ubuntu Snap Store</li> <li>Using Umbrel</li> <li>What is Immich?</li> </ul>"},{"location":"tags/#vpn","title":"VPN","text":"<ul> <li>Setting up a Free and Open Source VPN Server</li> <li>VPN with WireGuard</li> </ul>"},{"location":"tags/#vs-code","title":"VS Code","text":"<ul> <li>Vs code</li> </ul>"},{"location":"tags/#web-server","title":"Web Server","text":"<ul> <li>Nginx Web Server</li> </ul>"},{"location":"tags/#wine","title":"Wine","text":"<ul> <li>Installing Office 2013 with Wine</li> </ul>"},{"location":"tags/#wireguard","title":"WireGuard","text":"<ul> <li>Setting up a Free and Open Source VPN Server</li> <li>VPN with WireGuard</li> </ul>"},{"location":"tags/#youtube","title":"YouTube","text":"<ul> <li>What is Immich?</li> </ul>"},{"location":"tags/#zero-trust","title":"Zero Trust","text":"<ul> <li>CloudFlare Tunnel</li> </ul>"},{"location":"tags/#alerts","title":"alerts","text":"<ul> <li>Alerts</li> </ul>"},{"location":"tags/#api","title":"api","text":"<ul> <li>Table</li> <li>Table</li> </ul>"},{"location":"tags/#chartjs","title":"chart.js","text":"<ul> <li>Chart.js</li> </ul>"},{"location":"tags/#charts","title":"charts","text":"<ul> <li>Chart.js</li> </ul>"},{"location":"tags/#github-api","title":"github api","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#https","title":"https","text":"<ul> <li>Hosting local https app</li> <li>Hosting local https with trusted cert from Cloudflare with NPM</li> <li>Hosting local https with trusted cert from Cloudflare with Caddy</li> </ul>"},{"location":"tags/#local-https","title":"local https","text":"<ul> <li>Hosting local https app</li> <li>Hosting local https with trusted cert from Cloudflare with NPM</li> <li>Hosting local https with trusted cert from Cloudflare with Caddy</li> </ul>"},{"location":"tags/#mat-card","title":"mat-card","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#mat-table","title":"mat-table","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#material_1","title":"material","text":"<ul> <li>Alerts</li> </ul>"},{"location":"tags/#ng-bootstrap","title":"ng-bootstrap","text":"<ul> <li>Alerts</li> <li>Table</li> </ul>"},{"location":"tags/#ng-container","title":"ng-container","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#ng-matero","title":"ng-matero","text":"<ul> <li>Ng matero</li> </ul>"},{"location":"tags/#ngcomponentoutlet","title":"ngComponentOutlet","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#ngif","title":"ngIf","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#ngswitch","title":"ngSwitch","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#notifications","title":"notifications","text":"<ul> <li>Alerts</li> </ul>"},{"location":"tags/#samba","title":"samba","text":"<ul> <li>Mapped Network drive</li> </ul>"},{"location":"tags/#table","title":"table","text":"<ul> <li>Table</li> <li>Table</li> </ul>"},{"location":"aws/RDS/sql_workbench_connect/","title":"Connect SQL Workbench to RDS","text":"<p>In this article we will explore how to connect to RDS from SQL Workbench.</p> <ul> <li>Navigate to RDS</li> <li>Select the database</li> </ul> <p></p> <p>Make sure database is publically accessible</p> <p></p> <ul> <li>Go to the Security Group Rules</li> </ul> <p></p> <ul> <li>Edit the inbound Rules</li> </ul> <p></p> <ul> <li>Check your IP address using http://checkip.amazonaws.com/</li> <li>Click add Rule, My IP, Save Rules</li> </ul> <p></p> <ul> <li>Find the Endpoint for the Database.  We'll need this for MySql WorkBench</li> </ul> <p></p> <ul> <li>Connect with the Hostname as the end point, using username and password.</li> </ul> <p></p>"},{"location":"aws/SES/receive-emails/","title":"Fwd Emails sent to Domain to Gmail","text":"<p>You can receive emails sent to your domain by using two processes within AWS.</p> <ul> <li>Have SES store the email in an S3 bucket</li> <li>Trigger Lambda function to create an email to forward to gmail with the email content that was received.  The Lambda function literally copies all the content/attachments, and creates your own email to send to a SES verified domain.</li> </ul> <p>Make sure you have already verified the domain and the personal email address you want to forward emails to.</p>"},{"location":"aws/SES/receive-emails/#create-mx-record-in-route-53","title":"Create MX Record in Route 53","text":"<p>Add the following MX record to the DNS configuration for your domain:</p> <p><code>10 inbound-smtp.&lt;regionInboundUrl&gt;.amazonaws.com</code></p> <p>Replace <code>&lt;regionInboundUrl&gt;</code> with the URL of the email receiving endpoint for the AWS Region that you use Amazon SES in. For a complete list of URLs, see AWS Service Endpoints \u2013 Amazon SES in the AWS General Reference.</p> <p></p>"},{"location":"aws/SES/receive-emails/#create-an-s3-bucket-to-store-emails","title":"Create an S3 Bucket to Store Emails","text":"<p>Apply the following policy to the bucket in the <code>Permissions</code> tab:</p> <pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowSESPuts\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"Service\": \"ses.amazonaws.com\"\n            },\n            \"Action\": \"s3:PutObject\",\n            \"Resource\": \"arn:aws:s3:::&lt;bucketName&gt;/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"aws:Referer\": \"&lt;awsAccountId&gt;\"\n                }\n            }\n        }\n    ]\n}\n</code></pre> <p>In the policy, make the following changes: - Replace <code>&lt;bucketName&gt;</code> with the name of your S3 bucket. - Replace <code>&lt;awsAccountId&gt;</code> with your AWS account ID.</p> <p>The name of your S3 Bucket is how it appears in your list of Buckets.  Note that mine is called <code>wildebeastmedia-reports-emails</code></p> <p></p> <p>Your account ID can be found in the top right of the window.  Remove the dashes from the ID in the policy.</p> <p></p>"},{"location":"aws/SES/receive-emails/#create-an-iam-policy-and-role","title":"Create an IAM Policy and Role","text":""},{"location":"aws/SES/receive-emails/#create-iam-policy","title":"Create IAM Policy","text":"<p>We want to create a specific role for the Lambda function with limited permissions, specific the ability to send emails through SES and store emails in the S3 Bucket we created.</p> <p>Go to <code>IAM/Policies</code> and hit <code>Create policy</code>.  I named mine <code>&lt;domain&gt;-S3-Email-Policy</code></p> <p></p> <p>Add the following JSON permission to the policy <pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"VisualEditor0\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"logs:CreateLogStream\",\n                \"logs:CreateLogGroup\",\n                \"logs:PutLogEvents\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Sid\": \"VisualEditor1\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\",\n                \"ses:SendRawEmail\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::&lt;bucketName&gt;/*\",\n                \"arn:aws:ses:&lt;region&gt;:&lt;awsAccountId&gt;:identity/*\"\n            ]\n        }\n    ]\n}\n</code></pre></p> <ul> <li>Replace  with the name of the S3 bucket that you created earlier. <li>Replace  with the name of the AWS Region that you created the bucket in. <li>Replace  with your AWS account ID."},{"location":"aws/SES/receive-emails/#create-iam-role","title":"Create IAM Role","text":"<p>Create a new IAM role. Attach the policy that you just created to the new role.  I'm calling the role <code>&lt;domain&gt;-Lambda-Email-Role</code></p> <p></p> <p>The <code>trusted entity type</code> will be <code>AWS service</code> and the use case is <code>Lambda</code></p> <p></p> <p>Choose the policy we created to attach to our new role.</p>"},{"location":"aws/SES/receive-emails/#create-the-lambda-function","title":"Create the Lambda Function","text":""},{"location":"aws/SES/receive-emails/#function-overview","title":"Function Overview","text":"<p>The Lambda Function is a Python script that will reach into our S3 bucket, scrape the email content, add it to an email draft, and send it to our personal email.</p> <p>In the Lambda console, create a new Python 3.7 function from scratch. For the execution role, choose the IAM role that you created earlier.  I am naming the function <code>&lt;domain&gt;-S3-Email</code></p> <p></p> <p>Here is the overview</p> <p></p>"},{"location":"aws/SES/receive-emails/#add-configuration-environmental-variables","title":"Add configuration Environmental Variables","text":"<p>Scroll down to the code area and click on <code>Configuration</code>.  We are going to set up some environmental variables that the python script we use.  Let's define the following</p> <ul> <li><code>ForwardMapping</code></li> <li><code>MailRecipient</code></li> <li><code>MailS3Bucket</code></li> <li><code>Region</code></li> </ul> <p><code>ForwardMapping</code> is a json object where we can specify where certain email address of the domain should get forwarded to.  For example, we might want emails sent to <code>rachel@wildebeastmedia.com</code> to be forwarded to <code>rachel@gmail.com</code>, while emails sent to <code>thomas@wildebeastmedia.com</code> should be forwarded to <code>thomas@gmail.com</code>.</p> <p><code>MailRecipient</code> is the default forwarding address for any and all domain addresses not explicitly stated in <code>ForwardMapping</code>.  </p> <p>Here is my configuration: </p>"},{"location":"aws/SES/receive-emails/#add-the-python-code","title":"Add the Python Code","text":"<pre><code>import os\nimport boto3\nimport email\nimport re\nimport json\nfrom botocore.exceptions import ClientError\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.text import MIMEText\nfrom email.mime.application import MIMEApplication\n\nregion = os.environ['Region']\n\ndef get_message_from_s3(message_id):\n\n    incoming_email_bucket = os.environ['MailS3Bucket']\n    # incoming_email_prefix = os.environ['MailS3Prefix']\n\n    # if incoming_email_prefix:\n    #     object_path = (incoming_email_prefix + \"/\" + message_id)\n    # else:\n    #     object_path = message_id\n\n    object_path = message_id\n\n    object_http_path = (f\"http://s3.console.aws.amazon.com/s3/object/{incoming_email_bucket}/{object_path}?region={region}\")\n\n    # Create a new S3 client.\n    client_s3 = boto3.client(\"s3\")\n\n    # Get the email object from the S3 bucket.\n    object_s3 = client_s3.get_object(Bucket=incoming_email_bucket,\n        Key=object_path)\n    # Read the content of the message.\n    file = object_s3['Body'].read()\n\n    file_dict = {\n        \"file\": file,\n        \"path\": object_http_path\n    }\n\n    return file_dict\n\ndef create_message(file_dict, original_recipient, forward_address):\n\n    sender = original_recipient\n\n    # Parse the email body.\n    mailobject = email.message_from_string(file_dict['file'].decode('utf-8'))\n\n    # Extract the original email's details\n    original_from = mailobject['From']\n    original_subject = mailobject['Subject']\n    original_body = extract_body(mailobject)\n\n    # Create a new subject line.\n    subject = \"Fwd: \" + original_subject\n\n    # Construct the forwarded email body\n    body_text = f\"\"\"\\\nForwarded message:\nFrom: {original_from}\nTo: {original_recipient}\nSubject: {original_subject}\n\n{original_body}\n\"\"\"\n\n    # Create a MIME container.\n    msg = MIMEMultipart()\n    # Create a MIME text part.\n    text_part = MIMEText(body_text, _subtype=\"plain\")\n    # Attach the text part to the MIME message.\n    msg.attach(text_part)\n\n    # Attach original email's attachments\n    if mailobject.is_multipart():\n        for part in mailobject.walk():\n            if part.get_content_maintype() == 'multipart':\n                continue\n            if part.get('Content-Disposition') is None:\n                continue\n\n            msg.attach(part)\n\n    # Add subject, from, and to lines.\n    msg['Subject'] = subject\n    msg['From'] = sender\n    msg['To'] = forward_address\n\n    message = {\n        \"Source\": sender,\n        \"Destinations\": forward_address,\n        \"Data\": msg.as_string()\n    }\n\n    return message\n\ndef extract_body(mailobject):\n    if mailobject.is_multipart():\n        for part in mailobject.walk():\n            if part.get_content_type() == \"text/plain\":\n                return part.get_payload()\n    else:\n        return mailobject.get_payload()\n\n\n\ndef send_email(message):\n    aws_region = os.environ['Region']\n\n# Create a new SES client.\n    client_ses = boto3.client('ses', region)\n\n    # Send the email.\n    try:\n        #Provide the contents of the email.\n        response = client_ses.send_raw_email(\n            Source=message['Source'],\n            Destinations=[\n                message['Destinations']\n            ],\n            RawMessage={\n                'Data':message['Data']\n            }\n        )\n\n    # Display an error if something goes wrong.\n    except ClientError as e:\n        output = e.response['Error']['Message']\n    else:\n        output = \"Email sent! Message ID: \" + response['MessageId']\n\n    return output\n\ndef lambda_handler(event, context):\n    # Get the unique ID of the message. This corresponds to the name of the file\n    # in S3.\n    message_id = event['Records'][0]['ses']['mail']['messageId']\n    print(f\"Received message ID {message_id}\")\n\n    # Get the recipient address from the event object\n    recipient = event['Records'][0]['ses']['receipt']['recipients'][0]\n\n    # Load the forwarding mapping from the environment variable\n    forward_mapping = json.loads(os.environ['ForwardMapping'])\n\n    # Get the forwarding address for the recipient\n    forward_address = forward_mapping.get(recipient)\n\n    # Use the default forwarding address if no specific address is found\n    if not forward_address:\n        default_forward_address = os.environ['MailRecipient']\n        forward_address = default_forward_address\n\n    # Retrieve the file from the S3 bucket.\n    file_dict = get_message_from_s3(message_id)\n\n    # Create the message.\n    message = create_message(file_dict, recipient, forward_address)\n\n    # Send the email and print the result.\n    result = send_email(message)\n    print(result)\n</code></pre>"},{"location":"aws/SES/receive-emails/#create-ses-receipt-rule-set","title":"Create SES Receipt Rule Set","text":"<p>In Simple Email Services (SES), we will create a Rule-Set that basically says whenever an email is received to our domain, store the Email in an S3 bucket, then invoke our Lambda Function on the Email.  The Lambda function of course performs our logic of creating a forwarded email and sending it to our personal email.</p> <p>In the Amazon SES console, create a new Receipt Rule Set.  I'm calling mine <code>&lt;domain&gt;-Rule-Set</code>.</p> <p></p> <p>In the Receipt Rule Set that you just created, add a Receipt Rule. I'm calling mine <code>&lt;domain&gt;-Forward-S3</code>.</p> <p></p> <p>The recipient condition should be your domain name.</p> <p></p> <p>In the Receipt Rule, add an S3 Action. Set up the S3 Action to send your email to the S3 bucket that you created earlier.  Then add a Lambda action to the Receipt Rule. Configure the Receipt Rule to invoke the Lambda function that you created earlier.  Here is what those actions look like in the console:</p> <p></p>"},{"location":"aws/SES/receive-emails/#final-working-result","title":"Final Working Result","text":"<p>Let's send an email from a 'non-verified' email address (my hotmail), to the domain.</p> <p>Here's what that email looks like</p> <p></p> <p>And here is the email that is sent from the Lambda function to our Gmail.</p> <p></p> <p>Now if I wanted to reply to the email as <code>support@wildebeastmedia.com</code>, I would just have to set up an alias and configure it in gmail.</p> <p>While this method is not quite as desirable as a dedicated workplace client, such as Zoho, this is effectively a free way to receive emails to all of your domain names, which generally is not possible with dedicated workplace clients.  However, I will also show you how to create a Zoho account to send and receive emails from your domain.  Zoho is great because it lets you set up an account for free for one domain.</p>"},{"location":"aws/SES/send-emails/","title":"Send Emails from domain using Gmail","text":"<ol> <li>Log in to your Gmail account.</li> <li>Click the gear icon in the upper-right corner of the page and then click \"See all settings.\"</li> <li>Go to the \"Accounts and Import\" tab.</li> <li>In the \"Send mail as\" section, click on \"Add another email address.\"</li> <li>In the window that appears, enter the name and email address you'd like to use as an alias (e.g., \"Reports\" and \"reports@mydomain.com\"). Make sure to uncheck \"Treat as an alias\" if you don't want Gmail to automatically respond using the same address the email was sent to.</li> <li>Click \"Next Step.\"</li> <li>Now you need to enter the SMTP server information for Amazon SES. Configure the fields as follows:<ul> <li>SMTP Server: email-smtp.us-east-1.amazonaws.com (replace \"us-east-1\" with the appropriate region if different)</li> <li>Port: 587 (or 465, but 587 is recommended)</li> <li>Username: Your SES SMTP username</li> <li>Password: Your SES SMTP password</li> <li>Check the box for \"Secured connection using TLS\" (or SSL, if you're using port 465)</li> </ul> </li> <li>Click \"Add Account.\"</li> <li>Google will send a verification email to the address you provided (reports@mydomain.com). This email will be forwarded to your Gmail inbox through the Lambda function you set up earlier. Open the email and click the confirmation link or enter the confirmation code provided. After you've confirmed the email address, you'll be able to send emails from your Gmail account using the \"reports@mydomain.com\" alias. To do so, click the \"From\" field while composing an email and select the alias from the dropdown menu.</li> </ol>"},{"location":"aws/SES/ses-send-server/","title":"Send Emails from an application","text":""},{"location":"aws/SES/ses-send-server/#update-spring-boot-application-configuration","title":"Update Spring Boot application configuration:","text":"<ul> <li>Update your application.properties or application.yml file with the Amazon SES SMTP settings, as shown in the previous response. Replace region, your_smtp_username, and your_smtp_password with your actual SES SMTP credentials.</li> </ul> <p>Spring configuration should look like</p> <pre><code>spring.mail.host=email-smtp.{region}.amazonaws.com\nspring.mail.port=587\nspring.mail.username=your_smtp_username\nspring.mail.password=your_smtp_password\nspring.mail.properties.mail.smtp.auth=true\nspring.mail.properties.mail.smtp.starttls.enable=true\nspring.mail.properties.mail.smtp.starttls.required=true\n</code></pre> <p>Please note you need to replace <code>{region}</code> with the actual region, such as <code>us-east-1</code></p>"},{"location":"aws/SES/ses-send-server/#postman-request","title":"Postman Request","text":"<p>This is what our post request will look like using postman. </p>"},{"location":"aws/SES/ses-send-server/#springboot-java-files","title":"SpringBoot Java Files","text":"<p>Here is our REST controller which receives the request <pre><code>@RestController\npublic class EmailController {\n\n    @Autowired\n    private EmailService emailService;\n\n    @PostMapping(\"/email\")\n    public ResponseEntity&lt;Void&gt; sendEmail(@RequestBody Map&lt;String, String&gt; param) {\n        emailService.sendSimpleMail(\n            param.get(\"to\"), \n            param.get(\"subject\"), \n            param.get(\"content\")\n        );\n        return ResponseEntity.ok().build();\n    }\n}\n</code></pre> And here is our <code>EmailService</code> which sends the email <pre><code>@Service\npublic class EmailService {\n\n    @Autowired\n    private JavaMailSender mailSender;\n\n    public void sendSimpleMail(String to, String subject, String content) {\n        SimpleMailMessage message = new SimpleMailMessage();\n\n        String fromName = \"Thomas Wilde\";\n        String fromEmail = \"support@wildebeastmedia.com\";\n        message.setFrom(fromName + \" &lt;\" + fromEmail + \"&gt;\");\n\n        message.setTo(to);\n        message.setSubject(subject);\n        message.setText(content);\n        mailSender.send(message);\n    }\n}\n</code></pre></p>"},{"location":"aws/SES/ses-send-server/#resulting-email","title":"Resulting Email","text":"<p>Here is the email received to my personal gmail </p>"},{"location":"aws/SES/ses-setup/","title":"Setting up SES","text":""},{"location":"aws/SES/ses-setup/#create-verified-identities","title":"Create Verified Identities","text":"<p>You will need to create a verified identity for the domain that you will be sending/receiving emails as well as any email addresses you will be sending emails to from your domain while in sandbox mode.</p> <p>Here I created an idendity for my domain and my person gmail. </p>"},{"location":"aws/SES/ses-setup/#verify-your-email-address-or-domain","title":"Verify your email address or domain:","text":"<p>Before you can send emails through Amazon SES, you need to verify the email address or domain you'll be using as the sender. This is to ensure that you control the email address or domain. To verify an email address:</p> <ul> <li>In the SES console, click on \"Email Addresses\" in the left sidebar.</li> <li>Click the \"Verify a New Email Address\" button.</li> <li>Enter the email address you want to verify, and click \"Verify This Email Address\".</li> <li>You'll receive a verification email at the address you provided. Click on the verification link in the email to complete the process.</li> <li>To verify a domain:</li> <li>In the SES console, click on \"Domains\" in the left sidebar.</li> <li>Click the \"Verify a New Domain\" button.</li> <li>Enter the domain you want to verify, and click \"Verify This Domain\".</li> <li>Follow the instructions to add the required DNS records to your domain's DNS configuration.</li> <li>The domain verification process can take some time, depending on the DNS provider.</li> </ul>"},{"location":"aws/SES/ses-setup/#obtain-smtp-credentials","title":"Obtain SMTP credentials:","text":"<p>To send emails through Amazon SES using the SMTP interface, you'll need SMTP credentials (a username and password).</p> <ul> <li>In the SES console, click on \"SMTP Settings\" in the left sidebar.</li> <li>Click the \"Create My SMTP Credentials\" button.</li> <li>Enter a name for the credentials, and click \"Create\".</li> <li>Download or store the generated SMTP username and password securely, as you won't be able to view the password again.</li> </ul>"},{"location":"aws/SES/ses-setup/#increase-your-sending-limits-optional","title":"Increase your sending limits (optional):","text":"<ul> <li>By default, Amazon SES has certain sending limits (such as a daily sending quota and a maximum sending rate) to protect against abuse. If you need to send a higher volume of emails, you can request a limit increase by submitting a support request at https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-ses.</li> </ul>"},{"location":"aws/SES/zoho/","title":"Free Zoho Email Client for One Domain","text":"<p>If you only have one domain you care to send and receive emails from you can also easily set up a free Zoho account instead of creating the the email forwarding system through SES.  Follow the following instructions:</p> <ul> <li>Sign up for Zoho Account</li> <li>Zoho will ask to verify domain by creating a  TXT record.</li> <li>Then it will configure the email routing by creating<ul> <li>MX Record</li> <li>TXT spf record</li> <li>TXT dmarc record</li> </ul> </li> </ul> <p>That is it!</p>"},{"location":"aws/lightsail/certbot/","title":"Install Certbot, Auto HTTPS","text":""},{"location":"aws/lightsail/certbot/#install-certbot","title":"Install Certbot","text":"<pre><code>sudo yum update\nsudo yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\nsudo yum-config-manager --enable epel\nsudo yum install certbot python-certbot-nginx\ncertbot --version\n</code></pre>"},{"location":"aws/lightsail/certbot/#generate-certificate-for-you-domains","title":"Generate Certificate for you domain(s)","text":"<pre><code>sudo certbot --nginx -d example.com -d www.example.com\n</code></pre> <p>When running the command, you will be prompted to enter an email address and agree to the terms of service. After doing so, you should see a message telling you the process was successful and where your certificates are stored:</p> <pre><code>    1 OutputIMPORTANT NOTES:\n    2 Successfully received certificate.\n    3 Certificate is saved at: /etc/letsencrypt/live/your_domain/fullchain.pem\n    4 Key is saved at: /etc/letsencrypt/live/your_domain/privkey.pem\n    5 This certificate expires on 2022-02-10.\n    6 These files will be updated when the certificate renews.\n    7 Certbot has setup a scheduled task to automatically renew this certificate inthe background.\n    8 \n    9 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n   10 If you like Certbot,please consider supporting our work by:\n   11 *Donating to ISRG /Let's Encrypt: https://letsencrypt.org/donate\n   12 * Donating to EFF: https://eff.org/donate-le\n</code></pre>"},{"location":"aws/lightsail/certbot/#enable-automatic-renewal","title":"Enable Automatic Renewal","text":"<p>Use the following command to test renewing the certs: <pre><code>sudo certbot renew --dry-run\n</code></pre> Your configuration file in <code>/etc/nginx/sites-available/lightsail.wildebeastmedia.com</code> will look like this.  Note, Certbot makes these changes, you do not need to make any changes manually. <pre><code>server {\n\n    root /var/www/lightsail.wildebeastmedia.com/html;\n    index index.html index.htm;\n\n    server_name lightsail.wildebeastmedia.com;\n\n    listen 443ssl;\n    ssl_certificate /etc/letsencrypt/live/lightsail.wildebeastmedia.com/fullchain.pem;# managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/lightsail.wildebeastmedia.com/privkey.pem;# managed by Certbot\n\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n\n    # Redirect non-https traffic to https\n    if($scheme!=\"https\") {\n        return301https://$host$request_uri;\n    }\n\n}\nserver {\n    if($host=lightsail.wildebeastmedia.com) {\n        return301https://$host$request_uri;\n    }# managed by Certbot\n\n\n    listen 80;\n    listen [::]:80;\n\n    server_name lightsail.wildebeastmedia.com;\n    return404;# managed by Certbot\n\n}\n</code></pre></p>"},{"location":"aws/lightsail/install-nginx/","title":"Install Nginx","text":""},{"location":"aws/lightsail/install-nginx/#install-nginx","title":"Install Nginx","text":"<p><pre><code>sudo yum install -y nginx\n</code></pre> The prompt may ask if you want to install some specific Amazon linux 2 version.  I said yes.</p>"},{"location":"aws/lightsail/lightsail-intro/","title":"What is LightSail?","text":"<p>This section is for setting up Lightsail as an All-In-One Linux server that can host static content, APIs, and a database, running on Nginx.</p> <p>Lightsail is the cheapest option starting at $3.5 / month</p> <p>Much of the content in this section is applicable to an EC2 instance as well particularly if you are using a single instance without a load balancer and want HTTPS on your single instance.</p>"},{"location":"aws/lightsail/lightsail-setup/","title":"Setting up Lightsail","text":""},{"location":"aws/lightsail/lightsail-setup/#create-an-instance","title":"Create an Instance","text":"<p>Create a new Lightsail.  Select Linux, then OS Only, select Amazon Linux 2. I like everything to be in US East 1.</p> <p></p>"},{"location":"aws/lightsail/lightsail-setup/#select-a-plan","title":"Select a plan","text":"<p>We're going with the cheapest plan and just assigning the default name.</p> <p></p>"},{"location":"aws/lightsail/lightsail-setup/#assign-a-static-ip-address-to-the-instance","title":"Assign a static IP address to the instance.","text":""},{"location":"aws/lightsail/lightsail-setup/#opening-ports","title":"Opening Ports","text":"<p>We're going to open up ports for SSH, HTTP, HTTPS, and MySQL.  They will all used the default port. </p>"},{"location":"aws/lightsail/mariaDB/","title":"Install MariaDB (MySQL)","text":""},{"location":"aws/lightsail/mariaDB/#install-and-configure-mariadb-mysql","title":"Install and Configure MariaDB (MySQL)","text":"<pre><code>#  this command updates all packages to the latest version\nsudo yum update -y \n\n# this command installs MySQL server on your machine, it also creates a systemd service\nsudo yum install -y mariadb-server\n\n# this command enables the service created in previous step\nsudo systemctl enable mariadb\n\n# this command starts the MySQL server service on your Linux instance\nsudo systemctl start mariadb\n\n# this command helps you to set root user password and improve your DB security\nsudo mysql_secure_installation\n</code></pre> <p>The final command, <code>sudo mysql_secure_installation</code> prompts you with a few questions, which may appear as shown below.</p> <pre><code># Here, just hit enter as we have not set any password yet\nEnter current password forroot (enter fornone):\n\n# Here, reply with Y\nSet root password [Y/n]\n\n# Enter new password\nNew Password:\n\n# Re-enter new password\nRe-enter new Password:\n\n## Say Y\nRemove anonymous users? [Y/n]\n\n## Say Y\nDisallow root login remotely? [Y/n]\n\n## Say N, as we would need them for verification \nRemove test database and access to it? [Y/n]y\n\n## Say Y\nReload privilege tables now? [Y/n]y\n</code></pre>"},{"location":"aws/lightsail/mariaDB/#verify-installation","title":"Verify Installation","text":"<p>Now that you've installed MySQL server on your EC2 instance, it's time to make sure it's working properly and you are able to connect to it. So, let us begin the verification process.</p> <p>To connect to the MySQL instance, run the following command.</p> <pre><code>mysql -h localhost -u root -p\n</code></pre> <p>Then run the following command</p> <pre><code>SHOW DATABASES;\n</code></pre> <p>It should print the names of all the test databases. If this prints, we can assume that the MySQL server installation was successful.</p>"},{"location":"aws/lightsail/mariaDB/#configure-mysql-to-accept-remote-connections","title":"Configure MySQL to accept remote connections","text":"<p>The MySQL server is currently only accessible within the EC2 instance. However, if you want to connect to this MySQL server from your local machine or another server, you must configure it to accept remote connections. Follow the steps below to configure MySQL to accept remote connections.</p> <ol> <li>Run cd / to go on the root directory.</li> <li>Run sudo nano /etc/my.cnf to open my.cnf file in the nano editor.</li> <li>Update the file to include bind-address=0.0.0.0 line as well. After update, the file looks like below</li> </ol> <p></p> <p>Run <code>sudo systemctl restart mariadb</code> to restart the service.</p> <p>Now execute the following commands on the MySQL server from root user.</p> <pre><code>CREATE USER 'thomas'@'localhost' IDENTIFIED BY 'thomaspassword';\n\nCREATE USER 'thomas'@'%' IDENTIFIED BY 'thomaspassword';\n\nGRANT ALL PRIVILEGES ON *.* to thomas@localhost IDENTIFIED BY 'thomaspassword' WITH GRANT OPTION;\n\nGRANT ALL PRIVILEGES ON*.* to thomas@'%' IDENTIFIED BY 'thomaspassword' WITH GRANT OPTION;\n\nFLUSH PRIVILEGES;\n\nEXIT\n</code></pre> <p>You should now be able to connect to the database with SqlWorkbench on your desktop.  Add your static ip as the hostname.</p> <p></p> <p>You\u2019ll get a warning because it\u2019s MariaDB but should still get in.</p> <p></p>"},{"location":"aws/lightsail/route53/","title":"Route 53 Configuration","text":"<p>Go to your Hosted Zone for your domain.</p> <p>Your going to create a A record to route traffic to an IP address.</p> <p>Record name is the domain or subdomain you want to route to the Lightsail server.</p> <p>The value is the Static IP address for the server.</p> <p></p> <p>You should now be able to access the site.</p> <p></p>"},{"location":"aws/lightsail/using-winscp/","title":"Using WinSCP to Access Server","text":"<p>Sometimes it's nice to use a dedicated application to access your server like WinSCP which has the benefit of visually viewing your server if you're not accustom to using SSH.</p>"},{"location":"aws/lightsail/using-winscp/#download-the-key-from-aws","title":"Download the key from AWS","text":""},{"location":"aws/lightsail/using-winscp/#convert-pem-key-to-ppk-for-winscp","title":"Convert pem key to ppk for WinSCP","text":"<p>The key is a .pem file. In order to connect with WinSCP, you need to convert it to .ppk which can be done using PuTTYgen. PuTTYgen is included when downloading Putty. Can use the .msi installer here Putty Download.</p> <p>Inside PuttyGen Load the .pem file with the <code>Load</code> button.</p> <p></p> <p>Then hit save private key.  This will save the key as .ppk.</p>"},{"location":"aws/lightsail/using-winscp/#login-to-winscp","title":"Login to WinSCP","text":"<p>In WinSCP, enter the static IP as the host name, ec2-user as the username.</p> <p></p> <p>In the advanced settings, go to SSH \u2192 Authentication.  For the private key file, select the .ppk that was generated.  Hit OK and you can now connect.  You can create SSH sessions using the Putty terminal within WinSCP.</p> <p></p> <p>You can now login to your server, navigate your files, and start an SSH session!</p>"},{"location":"aws/lightsail/web-content/","title":"Add web content, Configure Server Blocks","text":""},{"location":"aws/lightsail/web-content/#set-up-web-content-location","title":"Set up web content location","text":"<p>Let\u2019s set up some directories where each of our static sites will be located. <pre><code>sudo mkdir -p /var/www/sub.domain.com/html\n</code></pre> Note this is a subdomain, but it is the same for a domain or subdomain.</p> <p>Now that we have our directories, we will reassign ownership of the web directories to our normal user account. This will let us write to them without sudo.</p> <pre><code>sudo chown -R ec2_user:ec2_user /var/www/sub.domain.com/html\n</code></pre> <p>The permissions of our web roots should be correct already if you have not modified your umask value, but we can make sure by typing:</p> <pre><code>sudo chmod -R 755 /var/www\n</code></pre>"},{"location":"aws/lightsail/web-content/#create-a-sample-page","title":"Create a Sample Page","text":"<p>Now that we have our directory structure set up, let\u2019s create a default page for each of our sites so that we will have something to display.</p> <p>Create an <code>index.html</code> file in your first domain: <pre><code>nano /var/www/sub.domain.com/html/index.html\n</code></pre></p> <p>Inside the file, we\u2019ll create a really basic file that indicates what site we are currently accessing. It will look like this: <pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Welcome to Example.com!&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Success! The example.com server block is working!&lt;/h1&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> Save and close the file when you are finished. To do this in <code>nano</code>, press <code>CTRL+o</code> to write the file out, then <code>CTRL+x</code> to exit.</p>"},{"location":"aws/lightsail/web-content/#create-server-block-files-for-each-domain","title":"Create Server Block Files for Each Domain","text":"<p>We need to create the domain (or sub domain) configuration files in the sites-available and sites-enabled directories. <pre><code>cd /etc/nginx/\n</code></pre> <pre><code>sudo mkdir sites-available and mkdir sites-enabled\n</code></pre> </p> <p>Inside sites-available, we need to create a server block for each domain. The filename should be the domain name. So for this <code>example.com</code> domain, the file <code>/etc/nginx/sites-available/example.com</code> would look like this</p> <pre><code>server {\n    listen 80;\n    listen [::]:80;\n    root /var/www/example.com/html;\n    index index.html index.htm;\n    server_name example.com www.example.com;\n    location / {\n            try_files $uri $uri/ =404;\n    }\n}\n</code></pre> <p>This is all we need for basic http. The root should be pointing to the folder we created where the index.html will be located. server_name can be followed by any subdomains also pointing to the same site, i.e. www.</p>"},{"location":"aws/lightsail/web-content/#enabling-server-blocks-and-restart-nginx","title":"Enabling Server Blocks and Restart Nginx","text":"<p>Now that we have our server block files, we need to enable them. We can do this by creating symbolic links from these files to the sites-enabled directory, which Nginx reads from during startup.</p> <p>We can create these links by typing:</p> <pre><code>sudo ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/\n</code></pre> <p>Next, test to make sure that there are no syntax errors in any of your Nginx files: <pre><code>sudo nginx -t\nsudo systemctl restart nginx\n</code></pre></p>"},{"location":"aws/lightsail/web-content/#server-block-for-an-api","title":"Server Block for an API","text":"<p>If you have a api running on it's own sub-domain, like <code>api.example.com</code>, you'll want to create a server block for it as well.</p> <p> <pre><code>server {\n        listen 80;\n        listen [::]:80;\n\n        server_name example.com;\n\n        location / {\n            proxy_pass http://localhost:9080/;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n            proxy_set_header X-Forwarded-Port $server_port;\n        }\n}\n</code></pre> Note that <code>9080</code> is the port that you have configured your app to run on.</p>"},{"location":"aws/s3_static_site/custom_domain/","title":"Custom Domain and HTTPS","text":""},{"location":"aws/s3_static_site/custom_domain/#set-up-hosted-zone-in-route-53","title":"Set up Hosted Zone in Route 53","text":"<p>If you bought your domain in AWS you will already have a hosted zone so this section is mainly for users who purchased their domain elsewhere.  If you did not purchase your domain with AWS you will want to create a hosted zone in AWS.</p> <p>Click <code>Create Hosted Zone</code> and enter your domain example.com  with type <code>Public Hosted Zone</code>.</p> <p>Copy the <code>ns values</code> from your newly created hosted zone to nameserver settings for your domain.</p> <p></p> <p>Wherever you purchased your domains, you will want to edit the same servers and past the NS value from the AWS Hosted Zone.</p> <p></p>"},{"location":"aws/s3_static_site/custom_domain/#aws-certificate-manager-ssl-certs","title":"AWS Certificate Manager (SSL Certs)","text":"<p>Ensure the us-east-1 region is selected as Cloud Front needs this (top right of dashboard). More info on this here https://aws.amazon.com/certificate-manager/faqs/</p> <p></p> <ul> <li>Add your domain example.com and your domain with the <code>www</code> subdomain www.example.com then click <code>Next</code></li> <li>Select <code>DNS Validation</code> then click <code>Next</code></li> <li>Click <code>Review</code></li> <li>Click <code>Confirm and Request</code></li> </ul> <p></p> <ul> <li>Expand the area for each domain and click <code>Create record in route53</code></li> <li>Click <code>Continue</code></li> </ul>"},{"location":"aws/s3_static_site/custom_domain/#aws-cloud-front-cdn","title":"AWS Cloud Front (CDN)","text":"<ul> <li>Click <code>Create Distribution</code></li> </ul> <ul> <li>Under <code>Web</code> click <code>Get Started</code></li> <li>Under <code>Origin Domain Name</code> enter the S3 Site Endpoint you made a note of earlier. It should be in the format bucket.name.s3-website-aws-region.amazonaws.com</li> <li> <p>Under <code>Viewer Protocol Policy</code>, select <code>redirect http to https</code></p> </li> <li> <p>Under <code>Price class</code> select <code>use only US, Canada and Europe</code>. Users outside these regions will experience more latency but this is cheaper</p> </li> <li>Under <code>Alternate Domain Names (CNAMEs)</code> enter your apex domain (example.com) and then on a new line enter your domain with the <code>www</code> subdomain (www.example.com)</li> <li>Under <code>SSL Certificate</code> select <code>Custom SSL Certificate</code> and choose the Certificate we just created in AWS Certificate Manager</li> <li>Under <code>Default Root Object</code> enter <code>index.html</code></li> <li>Click <code>Create Distribution</code></li> </ul> <p></p> <p>This may take several minutes for the distribution to be created.</p>"},{"location":"aws/s3_static_site/custom_domain/#route-53-route-to-cloud-front","title":"Route 53 (Route to Cloud Front)","text":"<ul> <li>Click <code>Hosted Zones</code></li> <li>Click your domain example.com</li> <li>Click <code>Create Record Set</code> and leave name blank Set <code>Alias</code> to <code>Yes</code> Select <code>Alias Target</code> and select the Cloud Front deployment that we created earlier from the dropdown Click Create</li> <li>Repeat as above but enter <code>www</code> as the name this time.</li> </ul> <p>Your site should now be live under https://example.com and https://www.example.com</p>"},{"location":"aws/s3_static_site/s3_bucket/","title":"Setting up S3 Buckets","text":"<p>You should end up creating two buckets, (wildebeastmedia.com, www.wildebeastmedia.com)</p> <p></p>"},{"location":"aws/s3_static_site/s3_bucket/#create-your-main-bucket-examplecom","title":"Create your main bucket (example.com)","text":"<ul> <li>Create a bucket with site name (example.com)</li> <li>Go to the 'Properties' tab</li> <li>Select 'Static Website'</li> </ul> <ul> <li>Select 'Use this bucket to host a website' and enter index.html for both Index document and Error document (for single page app)</li> </ul> <ul> <li>Manually add an index.html file to the bucket for testing purposes</li> <li>Make note of the Endpoint, we will be needing this later when setting up our CDN.</li> <li>Go to the 'Permissions' tab</li> <li>Select 'Bucket Policy'</li> <li>Copy the following json replacing BUCKET_NAME with the name of the bucket (example.com).</li> </ul> <pre><code>{\n        \"Statement\": [\n                {\n                        \"Sid\":\"AllowPublicRead\",\n                        \"Effect\":\"Allow\",\n                        \"Principal\": {\n                                \"AWS\":\"*\"\n                        },\n                        \"Action\": [\n                                \"s3:GetObject\"\n                        ],\n                        \"Resource\": [\n                                \"arn:aws:s3:::BUCKET_NAME/*\"\n                        ]\n                }\n        ]\n}\n</code></pre>"},{"location":"aws/s3_static_site/s3_bucket/#create-second-bucket-for-www-subdomain","title":"Create Second Bucket for <code>www</code> subdomain","text":"<ul> <li>Create bucket with site name and subdomain (www.example.com)</li> <li>Go to 'Properties' tab</li> <li>Select 'Static Website'</li> <li>Select 'Redirect requests' and choose 'http' for the protocol</li> </ul>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2023/09/26/uncovering-the-espn-fantasy-football-api/","title":"Uncovering the ESPN Fantasy Football API","text":"<p>Because I love fantasy football, databases, and analytics, I've decided to do a deep dive through the ESPN Fantasy Football API this week to document how to get this data and demonstrate how to use Jackson and create SpringBoot apps and MySql databases in the process!  Badass right!</p> <p>Even though I've already made a ton of progress on the Java side with modeling the json data from the responses, I wanted to take some time today to actually on the documentation of the API views.  Check out how to get the api request and an in depth analysis of the response data.</p>"},{"location":"blog/2023/09/27/uncovering-the-espn-fantasy-football-api/","title":"Uncovering the ESPN Fantasy Football API","text":"<p>Today we uncovered all the details of the <code>schedule</code> object that is revealed in <code>mLiveScoring</code>, <code>mScoreboard</code>, <code>mMatchupScore</code> and <code>mMatchup</code>.  Go check it out at in depth analysis of the response data.</p>"},{"location":"blog/2023/09/28/game-cast-api/","title":"Game Cast API","text":"<p>Today I finished up the basic game cast api that is used when you click on the game cast for a matchup.  The thing I care most about here is the <code>percentComplete</code> field for each event because I think taht will definitely help with the matchup win probability field.  I can query that for each player my using the players team id and cross referencing which event that <code>competetitor</code> is in and see the percent complete.  </p> <p>More info to come on how we'll utilize <code>percentComplete</code>.  But essentially, if we know the total live projection for a team, and the initial total variance, which we do from the api calls, we should be able to develop decent probabilities by scaling the variance down as the game time decreases.  </p>"},{"location":"blog/2023/10/07/2023-10-07-espn-fantasy-football-springboot/","title":"2023 10 07 ESPN Fantasy Football SpringBoot","text":"<p>I've written a lot of the SpringBoot project so far, but I wanted to start taking a few notes as a go.  </p>","tags":["Spring Boot","Roster"]},{"location":"blog/2023/10/07/2023-10-07-espn-fantasy-football-springboot/#roster-ids","title":"Roster IDs","text":"<p>Many of the entities that I have created by nature have composite IDs.  The composite primary key design of <code>RosterEntry</code> could be a little tricky because you need to decide which field provides uniquenes to the instance, i.e. is it <code>lineupSlotId</code> (and <code>Team</code>) or is it <code>playerId</code> (and <code>Team</code>).  If it's the former, than really your primary key could be the <code>playerPoolEntry</code> field, as this is already unique to the <code>Team</code> and league.  To determine this, we need to determine if the <code>RosterEntry</code> is predicated on the slot itself, or the players within the Roster.  If I move some players out of their starting positions, this will create additional slots.  However, the roster entry array size does not change when queried from </p> <pre><code>https://lm-api-reads.fantasy.espn.com/apis/v3/games/ffl/seasons/2023/segments/0/leagues/695660?rosterForTeamId=1&amp;view=mRoster\n</code></pre> <p>It should also be noted that all bench spots have a <code>lineupSlotId</code> of 20.  There we have our answer - <code>playerPoolEntry</code> is our primary key.</p> <p>Now, after actually writing the code and testing it, <code>playerPoolEntry</code> shouldn't be the primary key, because <code>playerPoolEntry</code>, and this <code>RosterEntry</code> is a direct <code>@OneToMany</code> value within the <code>Team</code> (I don't think I need a <code>Roster</code> object within the team).  The primary keys should be the <code>playerId</code> and the <code>Team</code>.  The player pool entry will join on a mix of these columns and therefore should not be updatable/insertable.</p> Some fields within <code>RosterEntry</code> <pre><code>@Id\n@Column(name = \"player_id\")\nprivate Long playerId;\n\n@Id\n@ManyToOne(fetch = FetchType.LAZY)\n@JoinColumns(value = {\n        @JoinColumn(name = \"league_id\", referencedColumnName = \"league_id\"),\n        @JoinColumn(name = \"season_id\", referencedColumnName = \"season_id\"),\n        @JoinColumn(name = \"team_id\", referencedColumnName = \"id\")\n}, foreignKey = @ForeignKey(name = \"FK_RosterEntry_Team\"))\nprivate Team team;\n\n@ManyToOne\n@JoinColumns(value = {\n        @JoinColumn(name = \"league_id\", referencedColumnName = \"league_id\", updatable = false, insertable = false),\n        @JoinColumn(name = \"season_id\", referencedColumnName = \"season_id\", updatable = false, insertable = false),\n        @JoinColumn(name = \"player_id\", referencedColumnName = \"id\", updatable = false, insertable = false),\n}, foreignKey = @ForeignKey(name = \"FK_RosterEntry_PlayerPoolEntry\"))\nprivate PlayerPoolEntry playerPoolEntry;\n</code></pre> <p>Will need to update the <code>TeamMapper</code></p> <p>Had to ignore the <code>roster</code> field in <code>TeamMapper</code> <pre><code>@Mapping(target = \"roster\", ignore = true)\n</code></pre></p>","tags":["Spring Boot","Roster"]},{"location":"blog/2023/10/08/2023-10-08-espn-fantasy-football-springboot/","title":"2023 10 08 ESPN Fantasy Football SpringBoot","text":"<p>After gettings <code>Roster</code> to work nicely as a </p>","tags":["Spring Boot","Record"]},{"location":"blog/2024/01/04/building-a-home-server-with-an-old-pc/","title":"Building a Home Server with an old PC","text":"<p>So I had an old PC laying in the closet that I haven't touched in probably 2 to 3 years and decided to turn it into a new toy for the house.  In today's post, I will go over installing Ubuntu on our old desktop, configuring it as a network drive, configuring Remote Desktop, and talk about the things I want to do with this. </p> <p>There is a ton you can do with an old PC acting as a server.  Load it with storage and store all your photos and 4k videos on it.  Stop paying for cloud storage and photo storage and run open source software on your server.  Plug it into your TV so that it's easily accessible as a media device.  Give yourself a free VPN.  </p> <p>Here is my plan:</p> <ul> <li> <p>Install Ubuntu Desktop onto the PC, wiping out the Windows 10 OS previously installed</p> <ul> <li>I'm going with the Desktop version because I'm thinking I might also plug this PC into the living room TV as it may provide additional use case.  Plus, I've never played with Ubuntu Desktop so that would be something new for me.</li> </ul> </li> <li> <p>Configure the drive as a network drive</p> <ul> <li>I might as well have the storage accessible as a network drive so I can easily read/write to it.</li> </ul> </li> <li> <p>Configure Windows Remote Desktop</p> <ul> <li>This way I can easily remote in my home computer when I want to make updates or changes to the server instead of doing it from the TV screen.</li> </ul> </li> <li> <p>Configure various tools for the server</p> <ul> <li>Configure my own \"Google Photos\" using an open-source tool.</li> <li>Configure my own \"DropBox\" using an open-source tool.</li> <li>Configure an open-source VPN service.</li> </ul> </li> </ul>","tags":["Ubuntu Desktop"]},{"location":"blog/2024/01/04/building-a-home-server-with-an-old-pc/#install-ubuntu-desktop","title":"Install Ubuntu Desktop","text":"<p>Installing Ubuntu Desktop is pretty straightforward when following the documentation.  This will involve downloading the OS image which is an iso file, burning it on a usb stick, then booting your PC up into bios by restarting and hitting F12.  I used balenaEtcher per the documentation to burn the iso which worked great.</p>","tags":["Ubuntu Desktop"]},{"location":"blog/2024/01/04/building-a-home-server-with-an-old-pc/#configure-the-server-as-a-mapped-network-drive","title":"Configure the Server as a mapped network drive","text":"<p>The first thing I figured I would do was get the server to act as network attached storage (NAS), by allowing myself to map a drive from my desktop computer to the server computer.  The documentation to accomplish that can be found here.</p>","tags":["Ubuntu Desktop"]},{"location":"blog/2024/01/04/building-a-home-server-with-an-old-pc/#configure-windows-remote-desktop","title":"Configure Windows Remote Desktop","text":"<p>The next thing I figured I would do was to set up Remote Desktop.  This was also fairly straightforward and documented here.</p>","tags":["Ubuntu Desktop"]},{"location":"blog/2024/01/04/building-a-home-server-with-an-old-pc/#next-steps","title":"Next steps","text":"<p>I'll continue to document in future posts the next steps!</p>","tags":["Ubuntu Desktop"]},{"location":"blog/2024/01/08/setting-up-a-free-and-open-source-vpn-server/","title":"Setting up a Free and Open Source VPN Server","text":"<p>Why pay for a VPN service when you can set your own up for free?</p> <p>Setting up your own VPN on your network is quite simple and a free and robust solution is available with WireGuard.  I'm now able to establish a secure internet connection on public wifi straight through my home network, enabling me to access my network drive and remote desktop into my own workstation.  I considered using openVPN, however, the consensus seems to be that WireGuard is faster and easier to set up.  I finished writing the full documentation, so please check it out.  I hope you find it useful!  Let me know in the comments if you have any thoughts about WireGuard, or setting up your own VPN in general.</p>","tags":["Ubuntu Desktop","WireGuard","VPN"]},{"location":"blog/2024/01/09/setting-up-a-free-self-hosted-photo-storage-alternative/","title":"Setting up a Free, Self Hosted, Photo Storage Alternative","text":"<p>I am amazed at how good this free and open-source photo solution is.  A software called Immich, developed by an electrical/software engineer, who wanted no-limits, private, free alternative to storing photos after starting a family.</p> <p>Hey, I also started a family not that long ago and all of the sudden, I started taking TONS of photos.  Fortunately for me, Alex has already created this amazing solution and open-sourced it, so that the whole community gets to use this!</p> <p>The landing page feels very familiar.</p> <p></p> <p>Facial Recognition - Amazing!</p> <p></p> <p>Editing Meta Data.</p> <p></p> <p>Location Map</p> <p></p> <p>I've yet to create Albums because I just got started, but there's support for Albums, multiple users, and mobile apps are available for you and your family to automatically back up your images and videos.  I am amazed!</p> <p>Please checkout my Immich Documentation to quickly get it installed on your server!</p>","tags":["Ubuntu Desktop","Immich","Photo Storage Solution"]},{"location":"blog/2024/01/12/setting-up-raid-1-on-my-ubuntu-desktop/","title":"Setting up RAID 1 on my Ubuntu Desktop","text":"<p>Well, I pretty much followed this guide to a T.  </p> <p>The additional steps I took where giving full rights to the mounted drive to my own user.</p> <pre><code>sudo chown -R thomas:thomas /mnt/md0\nsudo chmod -R 700 /mnt/md0\n</code></pre> <p>as well as adding a samba block</p> <pre><code>sudo nano /etc/samba/smb.conf\n</code></pre> <pre><code>[raid]\n  path = /mnt/md0\n  read only = no\n  guest ok = no\n  valid users = thomas\n  create mask = 0700\n  directory mask = 0700\n</code></pre> <p>Restart samba.</p> <pre><code>sudo service smbd restart\n</code></pre>","tags":["Ubuntu Desktop","RAID"]},{"location":"blog/2024/02/05/organizing-different-repositories-and-environmental-variables/","title":"Organizing different repositories and environmental variables","text":"<p>Organizing different publishing libraries should be straightforward in the build.gradle in situations where you might pubish to a snapshot repository vs a release repository.</p> <p>In the following build.gradle, note that I can simply change the <code>publishRepository</code> to <code>releasesRepository</code> and the artifact will be published accordingly.  I don't yet have a sexy solution for having the \"SNAPSHOT\" at the end of the version, but I will report back if I streamline that further.</p> <p>Version Name</p> <p>If publishing to the <code>releasesRepository</code>, remove <code>-SNAPSHOT</code> from the version.</p> <pre><code>plugins {\n    id 'java-library'\n    id 'maven-publish'\n}\n\next {\n    nexusUrl = System.getenv('NEXUS_URL')\n    snapshotsRepository = \"$nexusUrl/maven-snapshots/\"\n    releasesRepository = \"$nexusUrl/maven-releases/\"\n\n    // Change the publish repository as needed\n    publishRepository = snapshotsRepository\n}\n\nversion \"1.0.0-SNAPSHOT\"\n\npublishing {\n    publications {\n        mavenJava(MavenPublication) {\n            artifactId = 'My awesome artifact name'\n            from components.java\n            artifact sourcesJar\n            artifact javadocJar\n        }\n    }\n    repositories {\n        maven {\n            url publishRepository\n            credentials {\n                username = System.getenv('NEXUS_USER')\n                password = System.getenv('NEXUS_PASSWORD')\n            }\n        }\n    }\n}\n</code></pre>","tags":["Java","Gradle","Sonatype Nexus"]},{"location":"blog/2024/03/18/understanding-the-structure-of-a-spring-boot-application/","title":"Understanding the Structure of a Spring Boot Application","text":"<p>Seeing the structure of a Spring Boot application is a great precursor to starting your own project so that you have a good idea of how you will develop your project.</p> <p>I cranked out most of the documentation of a Spring Boot project here.</p>","tags":["Java","Gradle","Spring Boot"]},{"location":"blog/2024/03/21/communicating-between-components/","title":"Communicating between components","text":"<p>In Angular, it is vital to be able to transfer data between components, whether it's a parent/child relationship or a sibling relationship.</p> <p>Check out the solutions I documented using <code>@Input</code>, <code>@Output</code>, <code>Service</code>, and <code>@ViewChild</code> with full interactive StackBlitz examples here.</p>","tags":["Angular","Components","Component Communication"]},{"location":"blog/2024/04/04/setting-up-your-own-private-docker-hub-repository/","title":"Setting up your own private Docker Hub Repository","text":"<p>Setting up a docker repository in Nexus requires some additional configuration as the Docker api needs to run on a separate port.  Once set up, you can now dockerize and back up your applications to your own server!</p> <p>I have all the details on how to set up your docker repo here here.  I will be adding additional documentation about how to actually dockerize your applications next.</p>","tags":["Nexus","Docker","Self Host"]},{"location":"blog/2024/04/18/installing-office-2013-with-wine/","title":"Installing Office 2013 with Wine","text":"<p>So I ditched Windows 10 on my HP Spectre 360 since it didn't meet the upgrade requirements for Windows 11.  Instead I overwrote the OS with Linux Mint.  Now I am trying to get my Office 2013 installed using Wine.</p> <p>To install Wine on Linux mint, I followed these instructions.  Note that <code>sudo apt install --install-recommends winehq-stable</code> actually needs to be changed to <code>`sudo apt install --install-recommends wine-stable</code></p> <p>I follow these instructions.  However, I realized that my Office 2013 version was 64 bit and that therefore Wine wouldn't run the <code>setup.exe</code>. </p> <p>So I ran</p> <pre><code>rm -rf ~/.wine/Office2013\n</code></pre> <p>to remove the <code>WINEPREFIX</code>, and replaced it by changing win32 with win64:</p> <pre><code>WINEPREFIX=~/.wine/Office2013 WINEARCH=win64 winecfg\n</code></pre> <p>The installer ran until it said it ran into an error.  I then followed the instructions here which said that a few more winetricks needed to be installed in addition to <code>msxml16</code> which the first tutorial already installs.  </p> <pre><code>WINEPREFIX=~/.wine/Office2013 WINEARCH=win64 winetricks msxml6 msftedit riched20 riched30 vb6run corefonts\n</code></pre> <p>However, I still go the same error.  I'm not sure if I simply need to have the 32 bit version or if there's something left I'm missing.</p>","tags":["Linux Mint","Linux Desktop","Wine"]},{"location":"blog/2024/07/28/2024-07-27-flutter/","title":"2024 07 27 Flutter","text":"<p>Getting started page flutter.dev.</p> <p>Create new project</p> <pre><code>flutter create myapp\n</code></pre> <p></p> <p>To run the app</p> <pre><code>flutter run\n</code></pre> <p>or just hit <code>f5</code></p> <p>To perform hot reload simply type</p> <pre><code>r\n</code></pre> <p>into the terminal.</p> <p>To create a new Statless Widget, simply type <code>stl</code> into the editor.</p>","tags":["Flutter"]},{"location":"blog/2024/07/28/2024-07-27-flutter/#fonts","title":"Fonts","text":"<p>Add font files to <code>/fonts</code> then edit the <code>pubspec.yaml</code> file.  Refresh the pubspec by entering the following into the cmd</p> <pre><code>flutter pub get\n</code></pre>","tags":["Flutter"]},{"location":"blog/2024/07/28/2024-07-27-flutter/#flutter-packages","title":"Flutter packages","text":"<p>https://pub.dev/</p> <p>Hit the copy buttuon next to a package (i.e. flutter_svg).</p> <p>Paste it in the <code>dependencies</code> section within <code>pubspec.yaml</code>.  Then run</p> <pre><code>flutter pub get\n</code></pre>","tags":["Flutter"]},{"location":"blog/2024/07/28/2024-07-27-flutter/#svg-icons","title":"SVG Icons","text":"<p>Create a folder <code>/assets</code>, and within that <code>/assets/icons</code>.  </p> <p>Then within <code>pubspec.yaml</code>, uncomment the <code>assets</code> block and add <code>- assets/icons/</code></p>","tags":["Flutter"]},{"location":"blog/2024/07/28/2024-07-27-flutter/#refactoring-widgets","title":"Refactoring Widgets","text":"<p>Click on a widget, i.e. <code>Container</code>, and hit <code>ctr .</code>.  Then you can wrap in widget, then type the widget (i.e. GestureDetector).</p>","tags":["Flutter"]},{"location":"blog/2024/08/26/2024-08-26-espn-fantasy-football-springboot/","title":"2024 08 26 ESPN Fantasy Football SpringBoot","text":"<p>Ok, my fantasy drafts have been scheduled, season is only a couple of weeks away. The pressure is finally setting it to get this project going again.  I kind of wish I had started it back up a couple months ago but here we go!</p> <p>Now that I am using a season Id from a previous year I realized I had to make some corrections to my League Post method, which was mainly some null checks, like for example playoff bye matches do not have an Away team.  Also migrating from SpringBoot 2.x to 3.x was of course a pain as it always has been.  </p> <p>Angular app is initiated.  I've gone ahead and created most of the entities.  Next step is to finish off the entities and get some components going.</p>","tags":["Spring Boot"]},{"location":"blog/2024/10/06/2024-10-06-espn-fantasy-football-springboot/","title":"2024 10 06 ESPN Fantasy Football SpringBoot","text":"<p>Quickly reviewing what I learned looking through the api.</p> <p>In the in-match api return for an active week, i.e. <code>scoringPeriodId</code> is set to the current week, and our <code>view</code> contains <code>mBoxScore</code>, <code>mScoreBoard</code>, <code>mLiveScoring</code>, <code>mMatchupScore</code>, we'll get each teams active roster, currrent total projected points, and current live points.  In each roster spot, we'll get two different <code>stat</code> objects, one representing the original projection and one the live stats.  In the original projection, it's important to note that we have a <code>appliedTotalCeiling</code> value, we'll need that.</p> <p>The <code>appliedTotalCeiling</code> is almost like a maximum conceived value that the player could achieve for this game.  The ESPN match cycles through each player of the team and determines the projected points, which includes the live points + the <code>remaingProjectedPoints</code>, which is the fractional game value left multipled by the original projection.</p> <p>In the <code>Tt</code> function, we see that the projected ceiling is the addition of the <code>original projected ceiling</code> times the <code>game time remaining fraction</code> plus the <code>live points</code>.</p>","tags":["Spring Boot"]},{"location":"blog/2024/12/14/flutter-docs-android/","title":"Flutter Docs Android","text":"<p>Changes in <code>build.gradle</code> in the <code>android</code> directory</p> <pre><code>ext.kotlin_version = '1.8.10' \n</code></pre> <p>and </p> <pre><code>classpath 'com.android.tools.build:gradle:8.1.0'\n</code></pre> <p>I also changed the <code>gradle-wrapper.properties</code> to version 8.1</p> <p>I also manually set the JDK version to 17 (default 21) in <code>gradle.properties</code></p> <pre><code>org.gradle.java.home=/Library/Java/JavaVirtualMachines/amazon-corretto-17.jdk/Contents/Home\n</code></pre>","tags":["Flutter"]},{"location":"blog/2024/12/14/flutter-firebase-tutorial/","title":"Flutter Firebase Tutorial","text":"<p>This is a simple basic tutorial for Flutter and Firebase I liked a lot.</p> <p>YouTube tutorial (https://www.youtube.com/watch?v=iQOvD0y-xnw)</p> <p>Install firebase-tools cli if you haven't already.</p> <pre><code>npm install -g firebase-tools\n</code></pre> <p>Login to the Firebase CLI</p> <pre><code>firebase login\n</code></pre> <p>Activate the flutterfire cli</p> <pre><code>flutter pub global activate flutterfire_cli\n</code></pre> <p>Configure the project with a firebase project</p> <pre><code>flutterfire configure\n</code></pre> <p>Add dependencies</p> <pre><code>flutter pub add firebase_core\n</code></pre> <p>I had an issue with cocopods, fixed it by reinstalling with brew (https://stackoverflow.com/questions/62593939/cocoapods-not-installed-or-not-in-valid-state)</p> <pre><code>sudo gem uninstall cocoapods\nbrew install cocoapods\nbrew link --overwrite cocoapods\nbrew unlink cocoapods &amp;&amp; brew link cocoapods\n</code></pre> fire_base core error <p>Error: The pod \"Firebase/CoreOnly\" required by the plugin \"firebase_core\" requires a higher minimum iOS deployment version than the plugin's reported minimum version. To build, remove the plugin \"firebase_core\", or contact the plugin's developers for assistance. Error running pod install</p> <p>Open the ios/PodFile and uncomment the platform line, change to version '13.0'</p> <p>Add firestore dependency for firestore database</p> <pre><code>flutter pub add cloud_firestore\n</code></pre> <p>To get debugging certificates <code>SHA-1</code> to use google sign in when debugging</p> <pre><code>cd android/\n./gradlew signingReport\n</code></pre> <p>I followed the instructions for setting up android, and ended up getting an error;</p> <p>Following this stackoverflow (https://stackoverflow.com/questions/74226250/error-member-not-found-firebaseappplatform-verifyextends) this seemed to fix it.</p> <pre><code>flutter pub upgrade --major-versions\n</code></pre> <p>I was then warned that the min sdk needed to be 23, so I manually set that value from the original flutterMinSdkVersion</p>","tags":["Flutter"]},{"location":"blog/2024/12/16/creating-a-working-javafx-demo-in-the-web/","title":"Creating a working JavaFX demo in the web","text":"<p>I did this working in my <code>BasicDemo</code> app.</p> <p>I created my own <code>Dockerfile</code> and <code>docker-compose.yml</code> like the following</p> Dockerfile<pre><code>FROM amazoncorretto:21\n# Update yum and install dependencies\nRUN yum update -y &amp;&amp; yum install -y \\\n    pango \\\n    cairo \\\n    freetype \\\n    fontconfig &amp;&amp; \\\n    yum clean all\n# Set the working directory and configure the CMD\nWORKDIR /jproserver\nCMD [\"sh\", \"-c\", \"cd /jproserver &amp;&amp; ./bin/restart.sh\"]\n</code></pre> <p>The installations are necessary to run the project in Docker.</p> <p>Then the docker-compose.yml file:</p> docker-compose.yml<pre><code>services:\n  jpro-demo:\n    container_name: jpro-demo\n    build:\n      context: .  # Directory where Dockerfile is located\n      dockerfile: Dockerfile\n    ports:\n      - \"7080:8080\"\n    volumes:\n      - .:/jproserver\n    restart: always\n</code></pre> <p>In my <code>build.gradle</code> I used an ssh plugin to deploy and run my application <code>id 'org.hidetake.ssh' version '2.11.2'</code></p> <p>I created two tasks <code>cleanAll</code> and <code>deployHome</code> to basically clean the build directory, down the docker app, and remove the persisted storage of the build.  Then the <code>deployHome</code> moves the build zip, unzips it, then unpacks the parent folder.</p> <pre><code>plugins {\n    id 'java'\n    id 'application'\n    id 'org.javamodularity.moduleplugin' version '1.8.12'\n    id 'org.openjfx.javafxplugin' version '0.0.13'\n    id 'org.beryx.jlink' version '2.25.0'\n    id 'jpro-gradle-plugin'\n    id 'org.hidetake.ssh' version '2.11.2'\n}\n\n/**\nMore Stuff...\n*/\n\nssh.settings {\n    knownHosts = file(\"${System.env.USERPROFILE}/.ssh/known_hosts\")\n//    knownHosts = allowAnyHosts\n}\n\nremotes {\n    homeServer {\n        host = home_ip // Replace with your instance IP\n        user = home_user // Replace with your SSH username\n        identity = file(home_pk) // Replace with the path to your private SSH key\n    }\n}\n\ntask cleanAll(dependsOn: 'clean') {\n    doLast {\n        ssh.run {\n            session(remotes.homeServer) {\n                // delete everything in the jpro folder\n                execute 'docker compose -f /home/thomas/docker/jpro/docker-compose.yml down -v'\n                execute 'rm -rf /home/thomas/docker/jpro/*'\n            }\n        }\n    }\n}\n\ntask deployHome(dependsOn: 'jproRelease') {\n    doLast {\n        ssh.run {\n            session(remotes.homeServer) {\n                put from: project.file(\"build/distributions/BasicDemo-jpro.zip\"), into: '/home/thomas/docker/jpro/' // Replace with remote path\n                // unzip the file on the remote server\n                execute 'unzip /home/thomas/docker/jpro/BasicDemo-jpro.zip -d /home/thomas/docker/jpro/' // Replace with your actual service name\n\n                // delete the zip file\n                execute 'rm /home/thomas/docker/jpro/BasicDemo-jpro.zip'\n\n                // Unpack and overwrite all the contents of the BasicDemo-jpro folder into the jpro folder\n                execute 'cp -r /home/thomas/docker/jpro/BasicDemo-jpro/* /home/thomas/docker/jpro/' // Replace with your actual service name\n\n\n                put from: project.file(\"Dockerfile\"), into: '/home/thomas/docker/jpro/' // Replace with remote path\n                put from: project.file(\"docker-compose.yml\"), into: '/home/thomas/docker/jpro/' // Replace with remote path\n                // Restart the service on the remote server\n                execute 'docker compose -f /home/thomas/docker/jpro/docker-compose.yml up -d --build' // Replace with your actual service name\n            }\n        }\n    }\n}\n</code></pre>","tags":["JavaFX","JPro"]},{"location":"blog/2024/12/17/using-ubuntu-snap-store/","title":"Using Ubuntu Snap Store","text":"<p>Download <code>Immich Distribution</code>.  When finished it will run on port 80, i.e. <code>localhost</code>.  The persisted locations are found in</p> <pre><code>/var/snap/immich-distribution/common\n</code></pre> <p>i.e. you'll see the <code>pgsql</code> and <code>upload</code> folder here.</p> <p>To see the snap variables run</p> <pre><code>snap get immich-distribution\n</code></pre> <p>If you want to change the port run</p> <pre><code>sudo snap set immich haproxy-http-bind=\"*:2283\"\n</code></pre> <p>Then restart</p> <pre><code>sudo snap restart immich-distribution\n</code></pre> <p>To stop</p> <pre><code>sudo snap stop immich-distribution\n</code></pre> <p>More info here https://immich-distribution.nsg.cc/install/</p>","tags":["CasaOS","Umbrel","Self Hosted"]},{"location":"blog/2024/12/17/using-umbrel/","title":"Using Umbrel","text":"","tags":["CasaOS","Self Hosted"]},{"location":"blog/2024/12/17/using-umbrel/#installing-casaos-in-ubuntu","title":"Installing CasaOS in Ubuntu","text":"","tags":["CasaOS","Self Hosted"]},{"location":"blog/2024/12/17/using-umbrel/#where-does-app-data-reside","title":"Where does app data reside","text":"<p>The app data for immich resides in <code>/DATA/AppData/big-bear-immich</code>.</p> <p>In here we have the pgdata folder and upload folder.</p>","tags":["CasaOS","Self Hosted"]},{"location":"blog/2024/12/17/using-umbrel/#mounting-a-smb-network-drive","title":"Mounting a SMB network drive.","text":"<p>If you want to map a NAS to store your immich assets, you can mount your network drive.</p> <pre><code>sudo apt update\nsudo apt install cifs-utils\n</code></pre> <pre><code>sudo mkdir /mnt/smb_share\n</code></pre> <pre><code>sudo mount -t cifs //server_ip/share /mnt/smb_share -o username=your_username,password=your_password\n</code></pre> <p>For me this would be </p> <pre><code>sudo mount -t cifs //192.168.4.142/raid /mnt/smb_share -o username=thomas,password=&lt;password&gt;\n</code></pre> <p>Let's say we want to change the upload location</p> <pre><code>mv -v /DATA/AppData/big-bear-immich/upload /home/thomas/\n</code></pre> <p>Then change the environmental variable in immich.</p> <p>I could have also mounted the upload location to my smb network drive.</p> <pre><code>mv -v /home/thomas/upload /mnt/smb_share/casaos/immich\n</code></pre> <p>If I wanted to copy a folder from one location to another (i.e. backup), I can do</p> <pre><code>cp -r /source/path /destination/path\n</code></pre>","tags":["CasaOS","Self Hosted"]},{"location":"blog/2024/12/17/using-umbrel/","title":"Using Umbrel","text":"","tags":["Immich","Umbrel","Self Hosted"]},{"location":"blog/2024/12/17/using-umbrel/#installing-umbrelos-in-vm","title":"Installing UmbrelOS in VM","text":"<p>Using OracleVM, set up a new machine as usual.  You will need to manually select Linux and Oracle Linux (64-bit) and also be sure to Enable EFI.</p> <p>After installing the medium to the disk the machine will turn off. Change the boot order ot only include the hard disk.  Go to storage and click on the installation disk.  There is an option to eject the disk on the far right. </p> <p>You can then navigate to <code>umbrel.local</code> in the browser.</p>","tags":["Immich","Umbrel","Self Hosted"]},{"location":"blog/2024/12/17/using-umbrel/#where-does-app-data-reside","title":"Where does app data reside","text":"<p>The app data resides in <code>/home/umbrewl/umbrel/app-data</code>.</p> <p>So immich is located in <code>/home/umbrewl/umbrel/app-data/immich</code> for example and in this directory you can see the <code>docker-compose.yml</code> file and the <code>data</code> directory which has the persisted database and assets upload library.</p>","tags":["Immich","Umbrel","Self Hosted"]},{"location":"blog/2024/12/17/using-umbrel/#mounting-a-smb-network-drive","title":"Mounting a SMB network drive.","text":"<p>If you want to map a NAS to store your immich assets, you can mount your network drive.</p> <pre><code>sudo apt update\nsudo apt install cifs-utils\n</code></pre> <pre><code>sudo mkdir /mnt/smb_share\n</code></pre> <pre><code>sudo mount -t cifs //server_ip/share /mnt/smb_share -o username=your_username,password=your_password\n</code></pre>","tags":["Immich","Umbrel","Self Hosted"]},{"location":"blog/2024/12/17/what-is-immich/","title":"What is Immich?","text":"<p>Immich is a self-hosted, full stack, containerized application that is effectively a drop-in replacement for Google Photos and Apple Photos.</p>","tags":["Immich","YouTube","CloudFlare","Docker","Portainer","CasaOS","Cloudron","Umbrel","Self Hosted"]},{"location":"blog/2024/12/17/what-is-immich/#why-would-i-want-this","title":"Why would I want this","text":"<p>You have a lot of photos and videos and you don't want to pay subscription fees to Google and Apple for the rest of eternity.  You want to take control of your own cloud services and own your own data again!  </p>","tags":["Immich","YouTube","CloudFlare","Docker","Portainer","CasaOS","Cloudron","Umbrel","Self Hosted"]},{"location":"blog/2024/12/17/what-is-immich/#what-do-i-need-to-host-immich","title":"What do I need to host Immich","text":"<p>You need some hardware and storage.  You can get started with what you already have, i.e. a laptop or a desktop.  In this setup, you can boot up your hardware whenever you want to view photos or sync photos from your mobile apps.  Eventually, you'll want to upgrade to a dedicated machine that is always on.  This can be as simple as a raspberry pi to run the app or as complicated as a used enterprise server.  </p>","tags":["Immich","YouTube","CloudFlare","Docker","Portainer","CasaOS","Cloudron","Umbrel","Self Hosted"]},{"location":"blog/2024/12/17/what-is-immich/#how-can-i-test-immich-out-before-purchasing-additional-hardware","title":"How can I \"test\" Immich out before purchasing additional hardware","text":"<p>I'm assuming you have a Windows or Mac device.  You can run Immich in Docker Desktop which is able to run docker containers on your OS with a intuitive user interface.  If you want to continue this approach and be able to access your website from the web and sync your phone app with your Immich running in Docker desktop, you can install TailScale on both devices or set up a CloudFlare tunnel in another docker container.</p> <p>If you want to test running Immich on an actual server, you can then create a Virtual Machine on your computer using Oracle VM Virtual Box.  This allows you to test any configuration you want on a server that you can clone or destroy at any time.</p>","tags":["Immich","YouTube","CloudFlare","Docker","Portainer","CasaOS","Cloudron","Umbrel","Self Hosted"]},{"location":"blog/2024/12/17/what-is-immich/#setting-up-immich-seems-complicated-why-isnt-it-easier","title":"Setting up Immich seems complicated, why isn't it easier?","text":"<p>You have to remember, Google Photos isn't just a front end web site.  It has a database running on a server, it has microservices that need to run object detection and facial recognition and update that meta data on the database.  It has an API for the front end applications on web and mobile to fetch and sync images.</p> <p>This is why we use Docker.  Docker allows us to run a \"container\" with a simple build script outline in a <code>docker-compose.yml</code> file that will basically pull the images of each of these necessary applications from the docker hub repository, and start them up in a docker container which is basically like an optimized Virtual Server.  It's pretty amazing really.</p>","tags":["Immich","YouTube","CloudFlare","Docker","Portainer","CasaOS","Cloudron","Umbrel","Self Hosted"]},{"location":"blog/2024/12/17/what-is-immich/#i-have-a-dedicated-machine-to-run-immich-on-now-what","title":"I have a dedicated machine to run Immich on, now what?","text":"<p>There are essentially three different ways to do this.</p> <code>Normal Linux OS, Docker Install</code> <p>Run a normal operating system like Ubuntu or Fedora.  Install docker, and install docker with docker   compose.</p> <code>Normal Linux OS, us a PaaS</code> <p>Same as above, but install a Platform as a Service to manage Immich.  This can be something relatively simple like <code>Portainer</code>.  Or something even more hands off like <code>Cloudron</code>.</p> <code>Home Server OS with 'App Store'</code> <p>In this case, we're talking about installing an OS that is dedicated to streamlining the home server experience.  This would be something like <code>Umbrel</code> or <code>CasaOS</code>, where we can just navigate to the app store and basically click on Immich to be installed.</p>","tags":["Immich","YouTube","CloudFlare","Docker","Portainer","CasaOS","Cloudron","Umbrel","Self Hosted"]},{"location":"blog/2024/12/17/serverless-relational-databases/","title":"Serverless Relational Databases","text":"<p>Here are some services I should look into that would likely end up costing a lot less than something like RDS.</p> Service Compute Pricing Storage Pricing Ideal For Amazon Aurora Serverless Billed per ACU per second. $0.10 per GB-month. Variable workloads with MySQL/PostgreSQL compatibility. Azure SQL Database Serverless Billed per vCore per second; e.g., ~$0.5218 per vCore-hour for Gen5. Billed separately per GB. Intermittent workloads with auto-scaling and pausing capabilities. Google Cloud SQL On-demand and committed use pricing; e.g., ~$0.0825 per hour for 1 vCPU instance. $0.17 per GB per month for SSD. Managed relational databases with automated scaling. PlanetScale Free tier available; paid plans based on resource consumption. Included in usage-based pricing. MySQL-compatible databases with serverless scaling and modern development features. CockroachDB Serverless Free tier available; usage-based pricing beyond free tier. Included in usage-based pricing. PostgreSQL-compatible distributed SQL databases requiring high availability and global scaling.","tags":["Datbase"]},{"location":"blog/2024/12/18/fireshipio-tutorial/","title":"Fireship.io tutorial","text":"<p>These are notes I ook on the flutter fireship io tutorial.</p> <p>To create new project</p> <pre><code>flutter create --org com.wildetechsolutions myapp\n</code></pre> <p>To check flutters compatibility with all build modes, run</p> <pre><code>flutter doctor --verbose\n</code></pre> <p>Can write flutter widgets in the browser at https://dartpad.dev/</p> <p>Most basic element is a <code>Container</code>, like a <code>div</code> in html.</p> <p>Right click on widget, refactor to another type of widget.</p> <p>Flutter provides row and column widgets.</p> <p>Stack widget, like a StackPane.</p> <p>Hero widget can animate between pages.</p> <p><code>Future</code> one-teim async value (single doc read) <code>Stream</code> multipel async values (listen to real-time updates)</p> <p>Stateful widget cons</p> <ul> <li>sharing data with children</li> <li>mixing logic with UI</li> </ul> <p><code>provider</code> package helps to separate the business logic from the widget and provide data to stateless widgets throughout the widget tree</p>","tags":["Flutter"]},{"location":"blog/2024/12/18/fireshipio-tutorial/#setup","title":"Setup","text":"<p>So the Firebase setup video does seem a bit out of date, the code is very different than the setup provided at (https://firebase.flutter.dev/docs/overview/).  In fact, the setup seems a lot more similar to the process followed on my 12-14 blog post.</p> <p>Flutter gives two options for routing:</p> <p>Navigator 1.0 (push and pop screens to a stack)</p> <p>and </p> <p>Navigator 2.0 (hasn't been well received)</p>","tags":["Flutter"]},{"location":"blog/2024/12/18/fireshipio-tutorial/#theming","title":"Theming","text":"<p>This has changed a bit from the tutorial and some of it is deprecated.  Concepts make sense though in defining custom theme in theme.dart</p>","tags":["Flutter"]},{"location":"blog/2024/12/18/fireshipio-tutorial/#home-login","title":"Home Login","text":"<p>Using a stream building, we can allow the authentication state dictate where the app goes from our default <code>home.dart</code> path</p> <pre><code>class HomeScreen extends StatelessWidget {\n  const HomeScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return StreamBuilder(\n      stream: AuthService().userStream,\n      builder: (context, snapshot) {\n        if (snapshot.connectionState == ConnectionState.waiting) {\n          return const Text(\"loading\");\n        } else if (snapshot.hasError) {\n          return const Center(\n            child: Text(\"error\"),\n          );\n        } else if (snapshot.hasData) {\n          return const TopicsScreen();\n        } else {\n          return const LoginScreen();\n        }\n      },\n    );\n  }\n}\n</code></pre> <p>With our initial auth service, the user will not be logged in, and therefore routed to the <code>LoginScreen</code></p> auth.dart<pre><code>import 'package:flutter/material.dart';\nimport 'package:firebase_auth/firebase_auth.dart';\nclass AuthService {\n  final userStream = FirebaseAuth.instance.authStateChanges(); // asynchronous stream to listen to the user's authentication state\n  final user = FirebaseAuth.instance.currentUser; // synchronous method to get the current user\n}\n</code></pre>","tags":["Flutter"]},{"location":"blog/2024/12/18/fireshipio-tutorial/#authentication","title":"Authentication","text":"<p>In the firebase console, go to the project then go to Authentcation.  Hi getting started.  Go to sign-in method and enable <code>Anonymous</code> as a provider.  This will allow a user to use the app without being registed and we'll still get a user id for them.</p> <p>Add Google Sign in as a provider on firebase.  It will then give you an updated json file to include in the android project.  I needed to stop the app, and start it again for the json file to take effect.  Hot restart did't work initially.  However, after starting the app, the google sign in did work.</p> <p>Going to skip Apple auth until I set it up on the mac.  Note that Apple Auth is required if other social login methods are included.</p>","tags":["Flutter"]},{"location":"blog/2024/12/18/fireshipio-tutorial/#database-data-population","title":"Database data population","text":"<p>After cloning the repository I did need to run</p> <pre><code>npm install @google-cloud/firestore\n</code></pre> <p>in order for the node scripts to work.</p> <p>Creating the FireStore database was kind of glossed over.  But simply go to the FireStore database and hit create database, I set it to production mode.  The node.js project to populate data worked as expected.</p>","tags":["Flutter"]},{"location":"blog/2024/12/18/fireshipio-tutorial/#models","title":"Models","text":"<p>Bring in <code>json_serializeable</code>, <code>build_runner</code> dependency into <code>dev_dependencies</code> which facilitates serializing/deserializing objects to json.  Also bring <code>json_annotation</code> dependency into the normal <code>dependencies</code> section.</p> <p>I added dependency and running <code>flutter pub upgrade --major-versions</code> to get it up to date (<code>json_serializable: ^6.8.0</code> at the time of writing)</p> <p>For each class you'll want to add this code</p> <pre><code>factory Topic.fromJson(Map&lt;String, dynamic&gt; json) =&gt; _$TopicFromJson(json);\nMap&lt;String, dynamic&gt; toJson() =&gt; _$TopicToJson(this);\n</code></pre> <p>Now from the terminal you can just run the following to generate the mappers</p> <pre><code>flutter pub run build_runner build\n</code></pre>","tags":["Flutter"]},{"location":"blog/2024/12/18/fireshipio-tutorial/#building-ui","title":"Building UI","text":"<p>For dynamic UI rendering based on a returned api response, we can use <code>FutureBuilder</code> which takes the <code>future</code> as an argument and then a builder function which can return the widget based on the result of the future.  You can also strongly type the <code>FutureBuilder</code>, i.e. <code>FutureBuilder&lt;List&lt;Topic&gt;&gt;</code></p> Topics Screen build function<pre><code>@override\n  Widget build(BuildContext context) {\n    return FutureBuilder&lt;List&lt;Topic&gt;&gt;(\n      future: FirestoreService().getTopics(),\n      builder: (context, snapshot) {\n        if (snapshot.connectionState == ConnectionState.waiting) {\n          return const LoadingScreen();\n        } else if (snapshot.hasError) {\n          return Center(\n            child: ErrorMessage(message: snapshot.error.toString()),\n          );\n        } else if (snapshot.hasData) {\n          var topics = snapshot.data!;\n\n          return ...[widget];\n        } else {\n          return const Text('No topics found in Firestore. Check database');\n        }\n      },\n    );\n  }\n</code></pre> <p>Navigator does not necessarily have to navigate to a route, it can navigate to a widget as well</p> <pre><code>Navigator.of(context).push(\n              MaterialPageRoute(\n                builder: (BuildContext context) =&gt; TopicScreen(topic: topic),\n              ),\n            );\n</code></pre> <p>Provider</p> <p>Provider is a very popoluate flutter library, easier to share values throughout the widget tree.  We'll want this to listen to the report stream from multiple widgets.  We could listen to it with a StreamBuilder for every page/widget, but that wouldn't be very efficient.</p>","tags":["Flutter"]},{"location":"blog/2024/12/19/how-to-use-a-firebase-as-a-auth-provider-untested/","title":"How to use a FireBase as a Auth provider (untested)","text":"<p>I haven't tested this yet but this should get me there to using Firebase as an auth provider for Angular/SpringBoot.</p>","tags":["Spring Boot","Firebase","Authentication"]},{"location":"blog/2024/12/19/how-to-use-a-firebase-as-a-auth-provider-untested/#angular","title":"Angular","text":"<p>Install firebase to angular</p> <pre><code>npm install firebase @angular/fire\n</code></pre> <p>Initialize firebase in Angular app</p> <pre><code>import { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n  apiKey: \"YOUR_API_KEY\",\n  authDomain: \"YOUR_AUTH_DOMAIN\",\n  projectId: \"YOUR_PROJECT_ID\",\n  storageBucket: \"YOUR_STORAGE_BUCKET\",\n  messagingSenderId: \"YOUR_MESSAGING_SENDER_ID\",\n  appId: \"YOUR_APP_ID\",\n};\n\nconst app = initializeApp(firebaseConfig);\n</code></pre> <p>Log user in</p> <pre><code>import { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n\nconst auth = getAuth();\nconst provider = new GoogleAuthProvider();\n\nsignInWithPopup(auth, provider)\n  .then((result) =&gt; {\n    const user = result.user;\n    console.log(\"User signed in:\", user);\n  })\n  .catch((error) =&gt; {\n    console.error(\"Error during sign-in:\", error);\n  });\n</code></pre> <p>Send the id to SpringBoot</p> <pre><code>const user = auth.currentUser;\nif (user) {\n  user.getIdToken().then((idToken) =&gt; {\n    // Send idToken to backend for verification\n    this.http.post('/api/authenticate', { token: idToken }).subscribe();\n  });\n}\n</code></pre>","tags":["Spring Boot","Firebase","Authentication"]},{"location":"blog/2024/12/19/how-to-use-a-firebase-as-a-auth-provider-untested/#springboot","title":"SpringBoot","text":"<p>Configure Firebase Admin SDK dependency</p> <pre><code>&lt;dependency&gt;\n  &lt;groupId&gt;com.google.firebase&lt;/groupId&gt;\n  &lt;artifactId&gt;firebase-admin&lt;/artifactId&gt;\n  &lt;version&gt;8.1.0&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Initialize Firebase in SpringBoot</p> <pre><code>import com.google.firebase.FirebaseApp;\nimport com.google.firebase.FirebaseOptions;\nimport com.google.auth.oauth2.GoogleCredentials;\n\n@PostConstruct\npublic void initFirebase() {\n    FirebaseOptions options = FirebaseOptions.builder()\n        .setCredentials(GoogleCredentials.fromStream(new FileInputStream(\"path/to/serviceAccountKey.json\")))\n        .build();\n    FirebaseApp.initializeApp(options);\n}\n</code></pre> <p>Verify the token in a controller</p> <pre><code>import com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.auth.FirebaseAuthException;\nimport com.google.firebase.auth.FirebaseToken;\n\n@PostMapping(\"/api/authenticate\")\npublic ResponseEntity&lt;?&gt; authenticate(@RequestBody Map&lt;String, String&gt; body) {\n    try {\n        String idToken = body.get(\"token\");\n        FirebaseToken decodedToken = FirebaseAuth.getInstance().verifyIdToken(idToken);\n        String uid = decodedToken.getUid();\n\n        // Perform additional logic (e.g., store/retrieve user data from MySQL)\n        return ResponseEntity.ok(\"User authenticated: \" + uid);\n    } catch (FirebaseAuthException e) {\n        return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(\"Invalid token\");\n    }\n}\n</code></pre>","tags":["Spring Boot","Firebase","Authentication"]},{"location":"blog/2025/01/02/stripe-fireship-demo/","title":"Stripe Fireship Demo","text":"<p>These are demo notes that I made while doing a stripe demo.</p>","tags":["Stripe","Hono.js","Supabase"]},{"location":"blog/2025/01/02/stripe-fireship-demo/#pricing-options","title":"Pricing Options","text":"<ul> <li>Freemium</li> <li>Free Trial</li> <li>One-Time Payment</li> <li>Tiered Subscriptions</li> <li>Seat-Based Pricing (charge per user)</li> <li>Metered Billing</li> </ul>","tags":["Stripe","Hono.js","Supabase"]},{"location":"blog/2025/01/02/stripe-fireship-demo/#freemium","title":"Freemium","text":"<p>Free tier + Premium</p> <p>Some features are free, but you need to purchase to use the full premium experience.</p>","tags":["Stripe","Hono.js","Supabase"]},{"location":"blog/2025/01/02/stripe-fireship-demo/#tiered","title":"Tiered","text":"<p>Based on things like number of users, or limited number of items etc.</p> <ul> <li>Beginner</li> <li>Professional</li> <li>Enterprise</li> </ul>","tags":["Stripe","Hono.js","Supabase"]},{"location":"blog/2025/01/02/stripe-fireship-demo/#metered","title":"Metered","text":"<p>Tokens, credits.</p> <p>Charge based on usage, i.e. AWS.</p>","tags":["Stripe","Hono.js","Supabase"]},{"location":"blog/2025/01/02/stripe-fireship-demo/#creating-a-hono-app","title":"Creating a hono app","text":"<pre><code>npm create hono@latest stripe-hono\n</code></pre> <p>You can then chose from different tempate options like <code>aws-lambda</code>, <code>cloudflare-workers</code>, <code>node.js</code>, <code>next.js</code>.</p> <p>To run the project run</p> <pre><code>npm run dev\n</code></pre>","tags":["Stripe","Hono.js","Supabase"]},{"location":"blog/2025/01/02/stripe-fireship-demo/#installing-stripe","title":"Installing Stripe","text":"<p>To install stripe sdk</p> <pre><code>npm install stripe\n</code></pre> <p>Also install <code>dotenv</code> to use an env file</p> <pre><code>npm install dotenv\n</code></pre>","tags":["Stripe","Hono.js","Supabase"]},{"location":"blog/2025/01/02/stripe-fireship-demo/#using-checkout","title":"Using Checkout","text":"<p>Create a post request that will use the stripe sdk and pass the price id of the product you created</p> <pre><code>app.post('/checkout', async (c) =&gt; {\n\n\n  try {\n    const session = await stripe.checkout.sessions.create({\n      payment_method_types: ['card'],\n      line_items: [\n        {\n          price: 'price_', // get this from the product you created in stripe\n          quantity: 1,\n        },\n      ],\n      mode: 'payment',\n      success_url: 'http://localhost:3000/success',\n      cancel_url: 'http://localhost:3000/cancel',\n    });\n\n    return c.json(session);\n  } catch (error: any) {\n    console.error(error);\n    throw new HTTPException(500, { message: error?.message });\n  }\n});\n</code></pre> <p>You can then see that actual payment in the transactions menu.</p>","tags":["Stripe","Hono.js","Supabase"]},{"location":"blog/2025/01/02/stripe-fireship-demo/#webhooks","title":"Webhooks","text":"<p>This is when stripe communicates with your server.</p> <p>Events include</p> <ul> <li>completed</li> <li>expired</li> <li>canceled</li> <li>created</li> <li>delayed</li> <li>subscription updated</li> <li>subscription deleted</li> </ul> <p>In order to test web hook calls from Stripe, we need to install the Stripe CLI.</p> <pre><code>stripe login\n\nstripe listen -e checkout.session.completed --forward-to http://localhost:3000/webhook \n</code></pre> <pre><code>stripe listen -e checkout.session.completed --forward-to http://localhost:9095/api/webhook\n</code></pre> <pre><code>stripe listen -e customer.subscription.updated --forward-to http://localhost:9095/api/webhook\n</code></pre>","tags":["Stripe","Hono.js","Supabase"]},{"location":"blog/2025/01/02/stripe-fireship-demo/#creating-a-nextjs-app","title":"Creating a next.js app","text":"<pre><code>npx create-next-app app-name\n\n# optional styling libraries\nnpm i -D @tailwindcss/typography daisyui\n\n# install Stripe\nnpm i stripe @stripe/stripe-js\n\n# serve the site\nnpm run dev\n</code></pre> <p><code>stripe</code> is used on the backend, <code>stripe-js</code> is used on the front end.  Both will be used in next.js.</p> <p>When using the next application, use the following command to forward webhooks to it.</p> <pre><code>stripe listen -e customer.subscription.updated,customer.subscription.deleted,checkout.session.completed --forward-to http://localhost:3000/api/webhook \n</code></pre> <p>Minimum data to store in the database for a user</p> <ul> <li><code>user_id</code></li> <li><code>stripe_customer_id</code></li> <li><code>subscription_id</code></li> <li><code>plan_active</code></li> <li><code>plan_expires</code></li> </ul> <p>Fireship io uses \"send grid\" to send an email when a payment goes through.</p>","tags":["Stripe","Hono.js","Supabase"]},{"location":"blog/2025/01/06/ms-sql-installation/","title":"MS SQL Installation","text":"<p>Just a note to self, that when installing the developer edition of MS SQL, TCP is not enabled, by default, so you cannot connect to the instance via the port, 1433, until you open <code>Sql Server Configuration Manager</code>, find <code>SQL Server Network Configuration</code> and enable <code>TCP/IP</code>.  You can now connect.</p>","tags":["MSSQL","SQL"]},{"location":"blog/2025/01/06/sudo-two-factor-authentication/","title":"Sudo Two-Factor Authentication","text":"<p>Two factor authentication for Sudo access gives you an awesome security enhancement so that a hacker still will not be able to use sudo, i.e. admin privileges, even if they have discovered your password.</p> <p>This can be done using PAM (Pluggable Authentication Modules).</p> <p>Install <code>libpam-google-authenticator</code>.</p> <pre><code>sudo apt update\nsudo apt install libpam-google-authenticator\n</code></pre> <p>Set up Google Authenticator</p> <pre><code>google-authenticator\n</code></pre> <ul> <li><code>yes</code> to time based tokens.</li> <li>Scan the QR code with your prefered authenticator app.</li> <li>Save the emergency backup codes in a secure place.</li> </ul> <p>Edit the PAM configuration for sudo.</p> <pre><code>sudo nano /etc/pam.d/sudo\n</code></pre> <p>Add the following line at the top (before any other auth lines)</p> <pre><code>auth required pam_google_authenticator.so\n</code></pre> <p>Test the setup</p> <pre><code>sudo ls\n</code></pre>","tags":["Linux","2FA","MFA"]},{"location":"blog/2025/01/10/hosting-local-https-app/","title":"Hosting local https app","text":"","tags":["Linux","Caddy","Immich","https","local https"]},{"location":"blog/2025/01/10/hosting-local-https-app/#using-caddy-for-easy-self-signed-internal-certs","title":"Using Caddy for easy self-signed internal certs","text":"<p>Install Caddy on your server.</p> <p>https://caddyserver.com/docs/install</p> <p>Edit the Caddy file</p> <pre><code>sudo nano /etc/caddy/Caddyfile\n</code></pre> <p>You'll need to use a different port for https that maps to the Immich port, 2283.</p> <p>Add the following setting 2282 to use https.</p> <pre><code>https://192.168.4.173:2282 {\n    reverse_proxy http://127.0.0.1:2283\n    tls internal\n}\n</code></pre> <p>You can also do the same with <code>127.0.0.1</code>:</p> <pre><code>https://127.0.0.1:2282 {\n    reverse_proxy http://127.0.0.1:2283\n    tls internal\n}\n</code></pre> <p>restart the Caddy service</p> <pre><code>sudo systemctl restart caddy\n</code></pre>","tags":["Linux","Caddy","Immich","https","local https"]},{"location":"blog/2025/01/10/hosting-local-https-app/#trusting-the-self-signed-cert","title":"Trusting the self signed cert","text":"<p>Even though you have an encrypted https connection, the your browser will not recognized the self signed cert as being trusted which can be annoying.  To tell your computer to trust your cert do the following</p>","tags":["Linux","Caddy","Immich","https","local https"]},{"location":"blog/2025/01/10/hosting-local-https-app/#linux","title":"Linux","text":"<p>Copy the Caddy cert to the trusted certs store and update certificates</p> <pre><code>sudo cp ~/.local/share/caddy/pki/authorities/local/root.crt /usr/local/share/ca-certificates/caddy.crt\nsudo update-ca-certificates\n</code></pre> <p>You may want to copy the cert to your home location to move it wherever else you need to move it</p> <pre><code>sudo cp /var/lib/caddy/.local/share/caddy/pki/authorities/local/root.crt ~/caddy-root.crt\n</code></pre>","tags":["Linux","Caddy","Immich","https","local https"]},{"location":"blog/2025/01/10/hosting-local-https-app/#windows","title":"Windows","text":"<ol> <li>Open the Microsoft Management Console (MMC) Press Win + R to open the Run dialog box. Type mmc and press Enter. This will open the Microsoft Management Console.</li> <li>Add the Certificates Snap-in In the MMC window, click on File in the top-left corner. Select Add/Remove Snap-in. From the list of available snap-ins, choose Certificates and click Add. Choose Computer account and click Next. Select Local computer and click Finish. Click OK to close the snap-in window.</li> <li>Import the Certificate In the left-hand panel of MMC, expand Certificates (Local Computer). Right-click on Trusted Root Certification Authorities, then select All Tasks \u2192 Import. The Certificate Import Wizard will appear. Click Next. Browse to the location of your .crt file (e.g., the root.crt file from Caddy) and select it. Click Next, then choose Place all certificates in the following store and ensure Trusted Root Certification Authorities is selected. Click Next and then Finish to complete the import process. A confirmation message will appear, stating that the import was successful.</li> <li>Verify the Certificate Import In the MMC window, under Trusted Root Certification Authorities \u2192 Certificates, you should now see your Caddy root certificate listed there. You can double-click the certificate to view its details and ensure it is correctly imported.</li> </ol>","tags":["Linux","Caddy","Immich","https","local https"]},{"location":"blog/2025/01/10/hosting-local-https-app/#creating-an-immichlocal-url","title":"Creating an Immich.local URL","text":"<p>I only got this working on the Ubuntu virtual machine itself.  For some reason, other devices would not recognize <code>immich.local</code>.</p> <p>Create a caddy block</p> <pre><code>immich.local {\n    reverse_proxy http://127.0.0.1:2283\n    tls internal\n}\n</code></pre> <p>Install <code>avahi</code></p> <pre><code>sudo apt install avahi-daemon\n</code></pre> <p>to check avahi advertisement</p> <pre><code>avahi-browse -a\n</code></pre> <p>or </p> <pre><code>avahi-browse -art\n</code></pre> <p>Install <code>avahi-utils</code></p> <pre><code>sudo apt install avahi-utils\n</code></pre> <p>then I ran </p> <pre><code>avahi-publish -a immich.local -R 192.168.4.173\n</code></pre> <p>This got it running locally, but not to other devices on the network.</p>","tags":["Linux","Caddy","Immich","https","local https"]},{"location":"blog/2025/01/14/listening-to-events-in-springboot/","title":"Listening to events in SpringBoot","text":"<p>Jotting down some examples of different ways to handle events in Spring Boot</p>","tags":["Spring Boot","Auditing","@EntityListeners","@RepositoryEventHandler","Aspects"]},{"location":"blog/2025/01/14/listening-to-events-in-springboot/#entity-lifecycle","title":"Entity Lifecycle","text":"<p>Entities, i.e. pojos annotated with <code>@Entity</code>, can utilize the following methods with annotations to manage life cycle events of the entity.  JPA defines several lifecycle events that occur during an entity's persistence operations. You can use annotations to specify methods that should be executed when these events occur.</p> <ul> <li><code>@PrePersist</code>: Called before the entity is persisted (inserted into the database).</li> <li><code>@PostPersist</code>: Called after the entity is persisted.</li> <li><code>@PreUpdate</code>: Called before the entity is updated in the database.</li> <li><code>@PostUpdate</code>: Called after the entity is updated.</li> <li><code>@PreRemove</code>: Called before the entity is removed from the database.</li> <li><code>@PostRemove</code>: Called after the entity is removed.</li> <li><code>@PostLoad</code>: Called after the entity is loaded from the database.</li> </ul> <pre><code>@Entity\npublic class MyEntity {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    // ... other fields\n\n    @PrePersist\n    public void beforePersist() {\n        System.out.println(\"About to persist MyEntity with ID: \" + this.id);\n        // Custom logic here (e.g., setting default values)\n    }\n\n    @PostPersist\n    public void afterPersist() {\n        System.out.println(\"MyEntity persisted with ID: \" + this.id);\n    }\n\n    @PreUpdate\n    public void beforeUpdate() {\n        System.out.println(\"About to update MyEntity with ID: \" + this.id);\n    }\n\n    @PostUpdate\n    public void afterUpdate() {\n        System.out.println(\"MyEntity updated with ID: \" + this.id);\n    }\n\n    // ... other lifecycle methods\n}\n</code></pre> <p>This can also be separated out into a separate class for separation of concerns</p> <pre><code>import jakarta.persistence.*;\n\npublic class MyEntityListener {\n\n    @PrePersist\n    public void beforePersist(MyEntity entity) { // Note the entity parameter\n        System.out.println(\"Listener: About to persist MyEntity with ID: \" + entity.getId());\n    }\n\n    @PostPersist\n    public void afterPersist(MyEntity entity) {\n        System.out.println(\"Listener: MyEntity persisted with ID: \" + entity.getId());\n    }\n    // ... other lifecycle methods\n}\n\n@Entity\n@EntityListeners(MyEntityListener.class) // Associate the listener with the entity\npublic class MyEntity {\n    // ... fields\n}\n</code></pre>","tags":["Spring Boot","Auditing","@EntityListeners","@RepositoryEventHandler","Aspects"]},{"location":"blog/2025/01/14/listening-to-events-in-springboot/#auditingentitylistener","title":"AuditingEntityListener","text":"<p>SpringBoot also has an <code>AuditingEntityListener</code> class out of the box.  Note the annodations below</p> <ul> <li><code>@CreatedBy</code></li> <li><code>@LastModifiedBy</code></li> <li><code>@CreatedDate</code></li> <li><code>@LastModifiedDate</code></li> </ul> <pre><code>import org.springframework.data.annotation.CreatedBy;\nimport org.springframework.data.annotation.CreatedDate;\nimport org.springframework.data.annotation.LastModifiedBy;\nimport org.springframework.data.annotation.LastModifiedDate;\nimport org.springframework.data.jpa.domain.support.AuditingEntityListener;\n\nimport jakarta.persistence.*;\nimport java.time.LocalDateTime;\n\n@Entity\n@EntityListeners(AuditingEntityListener.class)\npublic class Product {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @CreatedBy\n    private String createdBy;\n\n    @LastModifiedBy\n    private String updatedBy;\n\n    @CreatedDate\n    private LocalDateTime createdDate;\n\n    @LastModifiedDate\n    private LocalDateTime updatedDate;\n\n    // ... other fields\n}\n</code></pre> <p>Now create an implementation of <code>AuditorAware</code> so that Spring knows who the auditor (user) is.</p> <pre><code>import org.springframework.data.domain.AuditorAware;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Optional;\n\n@Component\npublic class SpringSecurityAuditorAware implements AuditorAware&lt;String&gt; {\n\n    @Override\n    public Optional&lt;String&gt; getCurrentAuditor() {\n        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n\n        if (authentication == null || !authentication.isAuthenticated()) {\n            return Optional.of(\"system\");\n        }\n\n        return Optional.ofNullable(authentication.getName());\n    }\n}\n</code></pre> <p>What if your auditor is not a string value, but an Object like a <code>User</code> entity.</p> <pre><code>@Entity\n@EntityListeners(AuditingEntityListener.class) // Important: Enable auditing for this entity\npublic class Product {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @ManyToOne // Establish the relationship\n    @JoinColumn(name = \"created_by_user_id\") // Specify the foreign key column\n    @CreatedBy // Mark this field for auditing\n    private User createdBy;\n\n    @ManyToOne\n    @JoinColumn(name = \"updated_by_user_id\")\n    @LastModifiedBy\n    private User updatedBy;\n</code></pre> <p>Now you'll simply create an implementation of the typed <code>AuditorAware&lt;User&gt;</code></p> <pre><code>import org.springframework.data.domain.AuditorAware;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Optional;\n\n@Component\npublic class SpringSecurityAuditorAware implements AuditorAware&lt;User&gt; {\n\n    private final UserRepository userRepository;\n\n    public SpringSecurityAuditorAware(UserRepository userRepository) {\n        this.userRepository = userRepository;\n    }\n\n    @Override\n    public Optional&lt;User&gt; getCurrentAuditor() {\n        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n\n        if (authentication == null || !authentication.isAuthenticated()) {\n            return Optional.empty(); // Or handle as appropriate for your application\n        }\n\n        Object principal = authentication.getPrincipal();\n\n        if (principal instanceof UserDetails) {\n            String username = ((UserDetails) principal).getUsername();\n            return userRepository.findByUsername(username); // Returns Optional&lt;User&gt;\n        }\n\n        return Optional.empty();\n    }\n}\n</code></pre>","tags":["Spring Boot","Auditing","@EntityListeners","@RepositoryEventHandler","Aspects"]},{"location":"blog/2025/01/14/listening-to-events-in-springboot/#inheritance","title":"Inheritance","text":"<p>Now, let's say you want to have those 4 auditing columns but don't want to declare them in every class.  Well, you could create a <code>@MappedSuperClass</code> class.</p> <pre><code>@MappedSuperclass\n@EntityListeners(AuditingEntityListener.class)\npublic abstract class Auditable&lt;U&gt; {\n\n    @Column(name = \"created_by\")\n    private U createdBy;\n\n    @Column(name = \"updated_by\")\n    private U updatedBy;\n\n    @Column(name = \"created_date\")\n    private LocalDateTime createdDate;\n\n    @Column(name = \"updated_date\")\n    private LocalDateTime updatedDate;\n\n    // Getters and setters\n</code></pre> <p>Every entity that inherits from this Auditable will now have those 4 columns out of the box.</p> <pre><code>@Entity\n@Table(name = \"products\")\npublic class Product extends Auditable&lt;String&gt; {\n    // ... your entity fields\n}\n</code></pre>","tags":["Spring Boot","Auditing","@EntityListeners","@RepositoryEventHandler","Aspects"]},{"location":"blog/2025/01/14/listening-to-events-in-springboot/#respositoryeventhandler","title":"RespositoryEventHandler","text":"<p>Instead of listening to entity lifecycle hooks, you can also register event handlers directly to repository actions using <code>@RepositoryEventHandler</code>.  </p> ProductEventHandler<pre><code>import org.springframework.data.rest.core.annotation.HandleAfterCreate;\nimport org.springframework.data.rest.core.annotation.HandleAfterDelete;\nimport org.springframework.data.rest.core.annotation.HandleBeforeCreate;\nimport org.springframework.data.rest.core.annotation.HandleBeforeDelete;\nimport org.springframework.data.rest.core.annotation.RepositoryEventHandler;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.stereotype.Component;\n\nimport java.time.LocalDateTime;\n\n@Component\n@RepositoryEventHandler\npublic class ProductEventHandler {\n\n    @HandleBeforeCreate\n    public void handleProductBeforeCreate(Product product) {\n        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n        if (authentication != null) {\n            String username = authentication.getName();\n            product.setCreatedBy(username);\n            product.setCreatedDate(LocalDateTime.now());\n            product.setUpdatedBy(username);\n            product.setUpdatedDate(LocalDateTime.now());\n        }\n    }\n\n    @HandleBeforeDelete\n    public void handleProductBeforeDelete(Product product) {\n        // Handle audit logic for delete operations if needed\n    }\n\n    @HandleAfterCreate\n    public void handleProductAfterCreate(Product product) {\n        //Handle post create operations if needed.\n    }\n\n    @HandleAfterDelete\n    public void handleProductAfterDelete(Product product) {\n        //Handle post delete operations if needed.\n    }\n}\n</code></pre> <p>Whether to use <code>@EntityListeners</code> or <code>@RepositoryEventHandler</code> might depend on the specific action needing to take place or the preference of the developer.</p>","tags":["Spring Boot","Auditing","@EntityListeners","@RepositoryEventHandler","Aspects"]},{"location":"blog/2025/01/14/listening-to-events-in-springboot/#aspect","title":"Aspect","text":"<p>Here is an example of an <code>Aspect</code> in which we audit every repository save method and add an entry to a table</p> <pre><code>import org.aspectj.lang.JoinPoint;\nimport org.aspectj.lang.annotation.AfterReturning;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.stereotype.Component;\n\nimport java.time.LocalDateTime;\n\n@Aspect\n@Component\npublic class AuditLogAspect {\n\n    @Autowired\n    private AuditLogRepository auditLogRepository; // Your audit log repository\n    @Autowired\n    private AuditingService auditingService;\n\n    @AfterReturning(pointcut = \"execution(* com.example.repository.*.save(..)) || execution(* com.example.repository.*.delete(..))\", returning = \"result\")\n    public void logEntityChanges(JoinPoint joinPoint, Object result) {\n        Object entity = joinPoint.getArgs()[0]; // Get the entity\n        String operation = joinPoint.getSignature().getName().contains(\"delete\") ? \"DELETE\" : \"SAVE\";\n        String entityType = entity.getClass().getSimpleName();\n        User currentUser = auditingService.getCurrentUser();\n\n        AuditLogEntry logEntry = new AuditLogEntry();\n        logEntry.setEntityType(entityType);\n        logEntry.setOperation(operation);\n        logEntry.setTimestamp(LocalDateTime.now());\n        if (currentUser != null) {\n            logEntry.setUserId(currentUser.getId());\n        }\n\n        auditLogRepository.save(logEntry);\n    }\n}\n\n//AuditLogEntry.java\nimport jakarta.persistence.*;\nimport java.time.LocalDateTime;\n\n@Entity\npublic class AuditLogEntry {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n    private String entityType;\n    private String operation;\n    private LocalDateTime timestamp;\n    private Long userId;\n//getters and setters\n}\n</code></pre>","tags":["Spring Boot","Auditing","@EntityListeners","@RepositoryEventHandler","Aspects"]},{"location":"blog/2025/01/30/hosting-local-https-with-trusted-cert-from-cloudflare-with-npm/","title":"Hosting local https with trusted cert from Cloudflare with NPM","text":"<p>This is really just a helluva lot easier than what you need to do with Caddy.</p>","tags":["Linux","Nginx Proxy Manager","Immich","https","local https"]},{"location":"blog/2025/01/30/hosting-local-https-with-trusted-cert-from-cloudflare-with-npm/#configure-cloudlfare-dns","title":"Configure Cloudlfare DNS","text":"<p>Go to your DNS records in cloudflare and create an A record with a wild card to take care of all apps. Something like <code>*.local</code>.  Determine the local IP address of your server.  You can use ifconfig, or look at your router settings to find what the local IP is for that particular device.  For Proxy status just do DNS only.</p>","tags":["Linux","Nginx Proxy Manager","Immich","https","local https"]},{"location":"blog/2025/01/30/hosting-local-https-with-trusted-cert-from-cloudflare-with-npm/#cloudlfare-api-key","title":"Cloudlfare API Key","text":"<p>In the search, type API, go to User Api Tokens and create a new token.  Use the Edit zone DNS template. Now choose the specific zone.  Get the token and copy it.  </p>","tags":["Linux","Nginx Proxy Manager","Immich","https","local https"]},{"location":"blog/2025/01/30/hosting-local-https-with-trusted-cert-from-cloudflare-with-npm/#nginx-proxy-manager","title":"Nginx Proxy Manager","text":"<p>Add a new proxy host.  Add the domain you want to use, i.e. <code>immich.local.mydomain.com</code>.  Select http, the server IP address, and port.  Select Block common exploits and websockets support.  </p> <p>For SSL, choose request a new SSL certificate.</p> <p>Select <code>Force SSL</code>, and select <code>Use a DNS Challenge</code>.  Choose your DNS provider (Cloudflare), then paste in your api key.  </p> <p>Boom!  You're done!</p>","tags":["Linux","Nginx Proxy Manager","Immich","https","local https"]},{"location":"blog/2025/01/30/hosting-local-https-with-trusted-cert-from-cloudflare-with-npm/#using-domain-that-only-works-when-using-tailscale","title":"Using domain that only works when using Tailscale.","text":"<p>Follow the same steps but also install tailscale on the server and get the tail node IP address and use that in your A record instead.</p>","tags":["Linux","Nginx Proxy Manager","Immich","https","local https"]},{"location":"blog/2025/01/30/hosting-local-https-with-trusted-cert-from-cloudflare-with-caddy/","title":"Hosting local https with trusted cert from Cloudflare with Caddy","text":"","tags":["Linux","Caddy","Immich","https","local https"]},{"location":"blog/2025/01/30/hosting-local-https-with-trusted-cert-from-cloudflare-with-caddy/#caddy-and-tools-needed-for-xcaddy","title":"Caddy and tools needed for xcaddy","text":"<p>Install caddy from the docs: caddyserver.com/docs/install</p>","tags":["Linux","Caddy","Immich","https","local https"]},{"location":"blog/2025/01/30/hosting-local-https-with-trusted-cert-from-cloudflare-with-caddy/#install-go","title":"Install Go","text":"<p>I did this just using snaps</p> <pre><code>sudo snap install --classic go\n</code></pre> <p>Install git as well</p> <pre><code>sudo apt install git\n</code></pre> <p>Install xcaddy per the github instructions: https://github.com/caddyserver/xcaddy</p> <p>Now you should be able to build Caddy with the cloudflare dns plugin:</p> <pre><code>xcaddy build --with github.com/caddy-dns/cloudflare\n</code></pre> <p>Stop caddy</p> <pre><code>sudo systemctl stop caddy\n</code></pre> <p>Replace the existing caddy binary</p> <p>Find where the existing Caddy binary is installed:</p> <pre><code>which caddy\n</code></pre> <p>This typically returns /usr/bin/caddy or /usr/local/bin/caddy.</p> <p>Now, replace the existing binary with the one you just built:</p> <pre><code>sudo mv caddy /usr/bin/caddy\nsudo chmod +x /usr/bin/caddy\n</code></pre> <p>Verify the new binary is in place</p> <pre><code>caddy version\ncaddy list-modules | grep dns\n</code></pre> <p>You should see <code>dns.providers.cloudflare</code> listed.</p> <p>Restart caddy</p> <pre><code>sudo systemctl restart caddy\n</code></pre> <p>If you encounter issues, check the logs:</p> <pre><code>journalctl -u caddy --no-pager --lines=50\n</code></pre> <p>to dry run the Caddyfile:</p> <pre><code>sudo caddy validate\n</code></pre> <p>Open up your Caddfile located at <code>/etc/caddy/Caddyfile</code></p> <p>Add a block for the domain you want to handle on the local network</p> <pre><code>immich.local.yourdomain.com {\n    tls {\n        dns cloudflare {env.CLOUDFLARE_API_TOKEN}\n    }\n    reverse_proxy 127.0.0.1:2283\n}\n</code></pre> <p>You'll need a Cloudflare API Token to allow Caddy to manage your DNS.</p> <p>Go to Cloudflare Dashboard \u2192 API Tokens. Click Create Token \u2192 Custom Token. Set permissions: Zone \u2192 DNS \u2192 Edit Zone Resources \u2192 Include Specific Zone \u2192 Select Your Domain Click Create Token and copy it.</p> <p>Now create an A record in your cloudflare dns with a wildcard, i.e. <code>*.local</code> and send it to the local IP of your server.</p> <p>You now have a web server with domains that can only be used on the local network.</p>","tags":["Linux","Caddy","Immich","https","local https"]},{"location":"blog/2025/01/31/using-goaccess-with-nginx-proxy-manager-npm-to-visuallize-logs/","title":"Using GoAccess with Nginx Proxy Manager (NPM) to visuallize logs.","text":"<p>I mainly wanted to make sure and get this <code>docker-compose.yml</code> in here for future use.</p> <p>Note the last couple of lines.  You can set to the log file to digest all logs.  However, GoAccess doesn't support any filtering per hostname, so if you want to see analytics for only a particular host name, you want would to just mount the <code>proxy-host-1_access.log</code> for example.  npm creates one of these for each proxy host.</p> <pre><code>services:\n  nginx_proxy_manager:\n    image: \"jc21/nginx-proxy-manager:latest\"\n    container_name: nginx_proxy_manager\n    restart: unless-stopped\n    network_mode: \"host\"\n    ports:\n      - \"80:80\"    # HTTP\n      - \"443:443\"  # HTTPS\n      - \"81:81\"    # Admin Panel\n    volumes:\n      - ./data/npm_data:/data\n      - ./data/npm_letsencrypt:/etc/letsencrypt\n      - ./data/npm_logs:/var/log/nginx  \n    environment:\n      DB_SQLITE_FILE: \"/data/database.sqlite\" # Using SQLite instead of MySQL for simplicity\n      INITIAL_ADMIN_EMAIL: admin@example.com\n      INITIAL_ADMIN_PASSWORD: changeme\n\n\n  goaccess:\n    image: justsky/goaccess-for-nginxproxymanager:latest\n    container_name: goaccess\n    restart: unless-stopped\n    environment:\n        - TZ=America/Denver\n        #- SKIP_ARCHIVED_LOGS=False #optional   \n        #- BASIC_AUTH=False #optional\n        #- BASIC_AUTH_USERNAME=user #optional\n        #- BASIC_AUTH_PASSWORD=pass #optional                \n    ports:\n        - '7880:7880'\n    volumes:\n        #- ./data/npm_data/logs:/opt/log\n        - ./data/npm_data/logs/proxy-host-1_access.log:/opt/log/proxy-host-1_access.log\n</code></pre> <p>Note when using a cloud flare tunnel, make sure you add this in the advanced tab.  This will ensure you're getting the real ip from users from the cloudflare tunnel.</p> <pre><code>real_ip_header CF-Connecting-IP;\n</code></pre>","tags":["Linux","GoAccess","Nginx Proxy Manager","Logs"]},{"location":"blog/2025/02/01/using-kopia-to-setup-snapshot-backups/","title":"Using Kopia to setup snapshot backups","text":"<p>Well, I've had this spare 4TB hard drive laying around that wasn't particularly doing much so I decided to attach it to my ubuntu server, and just set up Kopia so write snapshots of my Immich Upload folder to it.  Basically just an extra layer of backup.</p> <p>I formatted the external hardrive on my windows computer with NTFS.  Eh, I wanted it to be compatible with Windows in case I want to be able to restart the snapshots from my windows computer.</p> <p>Inatll ntfs support</p> <pre><code>sudo apt install ntfs-3g\n</code></pre> <p>We want this drive mounted to a permanent path, i.e. /mnt/external_drive</p> <p>Let's get the ID of the drive</p> <pre><code>lsblk -o NAME,MOUNTPOINT,UUID,FSTYPE,SIZE\n</code></pre> <p>You should see something like this in the results</p> <pre><code>sde                                                                                                 3.6T\n\u251c\u2500sde1                                                                                              128M\n\u2514\u2500sde2 /mnt/external_drive                 3ED8D736D8D6EAE3                     ntfs                3.6T\nsr0   \n</code></pre> <p>Note the sde2 and the UUID: 3ED8D736D8D6EAE3</p> <p>You want to edit the static file system</p> <pre><code>sudo nano /etc/fstab\n</code></pre> <p>Add this line: <pre><code>UUID=3ED8D736D8D6EAE3  /mnt/external_drive  ntfs-3g  defaults,uid=1000,gid=1000,nofail  0  2\n</code></pre></p> <p>Mount the drive now</p> <pre><code>sudo mount -a\n</code></pre> <p>or </p> <pre><code>sudo mount -a\n</code></pre> <p>If you get an error saying it was already mounted you need to unmount and mount again.</p> <pre><code>sudo umount /dev/sde2\n</code></pre> <p>Note, that sde2 is for me, check what yours is from the <code>lsblk</code> command.</p> <p>Now for the fun part, let's install kopia with docker compose</p> docker-compose.yml<pre><code>services:\n  kopia:\n    image: kopia/kopia:latest\n    container_name: Kopia\n    restart: unless-stopped\n    ports:\n      - 51515:51515  # Exposing the web UI\n    command:\n      - server\n      - start\n      - --disable-csrf-token-checks\n      - --insecure\n      - --address=0.0.0.0:51515\n      - --server-username=${USERNAME}\n      - --server-password=${SECRET_PASSWORD}\n    environment:\n      # Set repository password (optional, can be set during the UI process)\n      KOPIA_PASSWORD: ${SECRET_PASSWORD}\n      USER: ${USERNAME}\n      TZ: America/Denver\n    volumes:\n      # Mount local folders needed by Kopia\n      - /mnt/external_drive/kopia/kopia-repo:/repository  # External drive for repository\n      - /mnt/md0/apps:/apps:ro  # Read-only access to /mnt/md0/apps\n      # Possibly want a restore path if you want read-only to the data being backed-up\n      - /mnt/md0/restore:/restore\n      # You may want to add other folders like logs or configs if necessary\n      - ./app/config:/app/config\n      - ./app/cache:/app/cache\n      - ./app/logs:/app/logs\n      # Mount data directory to snapshot (adjust as needed)\n      - ./data:/data:ro\n      # Mount temporary directory for browsing snapshots\n      - ./tmp:/tmp:shared\n</code></pre> .env<pre><code>USERNAME=thomas\nSECRET_PASSWORD=password\n</code></pre> <p>set the username and password in a .env file next to this file.</p> <p>Note the volumes</p> <p>The docker server needs to have the local path where you want the repository mounted</p> <pre><code>     - /mnt/external_drive/kopia/kopia-repo:/repository\n</code></pre> <p>Secondly, you also need to mount whatever location you want to backup</p> <p>In this case my RAID array is located at <code>mnt/md0</code> and I have all my assets from apps stored in there so I want access to that entire folder.</p> <pre><code>      - /mnt/md0/apps:/apps:ro \n</code></pre> <p>I put the <code>ro</code> in there because I absolutely don't want kopia messing with the files there other than reading them to copy them over.</p> <p>Sign into the UI at <code>http://192.168.4.142:51515/</code></p> <p>Now set up a repository.  Remember, the path to the repository is just <code>/repository</code> (what we set in docker compose).</p> <p>Now when you create a new snapshot, point to the uploads folder, i.e. <code>/apps/immich-app</code>.  Hit the estimate button so you know everything is configured right.  It should tell you the size of that folder. </p>","tags":["Linux","Kopia","Immich"]},{"location":"home-server/cloudflare-tunnel/","title":"CloudFlare Tunnel","text":"","tags":["Cloudflare","Zero Trust"]},{"location":"home-server/cloudflare-tunnel/#prerequisites","title":"Prerequisites","text":"<p>For exposing self-hosted applications to the web, you will want to purchase a domain name.  </p> <p>After puchasing your domain you need to add it to CloudFlare.  Cloud flare will instruct you on changing the name servers of your registered domain.</p> <p></p> <p></p> <p></p> <p>Cloudflare when then scan for DNS records.  </p> <p>Hit continue to activation.</p> <p>CloudFlare will then provide you nameservers.  You will need to change the nameservers for your domain at your registrar.</p> <p>For AWS, go to <code>Route 53</code>, then <code>Registered domains</code>.  Click on the domain that you want to route to CloudFlares servers.</p> <p></p> <p>Give this about 24 hours to update.  You will then see your website in your <code>Websites</code> in CloudFlare.</p>","tags":["Cloudflare","Zero Trust"]},{"location":"home-server/cloudflare-tunnel/#zero-trust-tunnel","title":"Zero Trust Tunnel","text":"<p>Click on Zero Trust.  Click on <code>Networks</code>, then <code>Tunnels</code>.</p> <p>Click <code>Create a tunnel</code>.</p> <p></p> <p>I use the recommended Cloudflared tunnel.</p> <p>Give the tunnel a name.</p> <p>Docker is a very easy method for installing the CloudFlare tunnel onto your server if you already have Docker installed.  If you are not installing Docker, run the commands for your operating system to install CloudFlare.</p>","tags":["Cloudflare","Zero Trust"]},{"location":"home-server/cloudflare-tunnel/#running-the-tunnel-with-docker-compose","title":"Running the Tunnel with docker compose","text":"<p>Instead of running the docker command straight up the cloudflare gives you, run it with docker compose instead.  In your folder where you store your docker apps, create a folder for cloudflared.  Then create a <code>docker-compose.yml</code> file inside of this folder.  Paste the following into your <code>docker-compose</code> file. Make sure you copy the token from the command that cloudlfare gave you and paste it in.</p> docker-compose.yml<pre><code>services:\n  cloudflare-tunnel:\n    image: cloudflare/cloudflared:latest\n    container_name: cloudflare-tunnel\n    restart: unless-stopped\n    command: tunnel --no-autoupdate run --token &lt;your-cloudfared-token&gt;\n</code></pre>","tags":["Cloudflare","Zero Trust"]},{"location":"home-server/cloudflare-tunnel/#adding-a-hostname","title":"Adding a hostname","text":"<p>Now that you have your tunnel activated, let's add a Public HostName.  Click on your tunnel, then click <code>Edit</code>.  Then click the <code>Public Hostname</code> tab.</p> <p></p> <p>You should be able to select the domain that you previously routed to CloudFlare.  You can add a specific subdomain per app as well.  The type will be HTTP and the URL will be the local IP address of your server and port that the app is routing on.  This is how you would connect to the app on the local network and is exactly how the CloudFlare tunnel is connecting to the app now that it's in your network.  </p> <p>Congrats! Your app is now available on the web!</p>","tags":["Cloudflare","Zero Trust"]},{"location":"home-server/cloudflare-tunnel/#adding-user-access","title":"Adding User Access","text":"<p>Cloud Flare also makes it easy to add access controls to your self-hosted application.</p> <p></p> <p></p> <p>You will configure an application name, and provide the domain name for the application.  This is the domain that you previously set up.  For me this would be <code>nexus.wildebeastmedia.com</code>.</p> <p>The default Identity Provider is a One-time PIN, but you can set up other identity provides such as Google.</p>","tags":["Cloudflare","Zero Trust"]},{"location":"home-server/ddns/","title":"DDNS","text":"<p>Installing a Dynamic Domain Name Service (DDNS) is vital for connecting to a home network where the internet service provider dynamically changes your IP address.  This is different than say creating a server on AWS where it is easy to assign it a static IP address where you can reliably forward traffic.</p>","tags":["Ubuntu","No-IP"]},{"location":"home-server/ddns/#download-and-install-duc","title":"Download and Install DUC","text":"<p>No-IP is a server that will provide one DDNS for free which is perfect for a home network.  We don't need more than one.  This way, instead of forwarding traffic to an IP address, we will instead forward traffic to Host name that we create, i.e. <code>example.ddns.net</code>.  To install the No-IP client on my Ubuntu instance, I followed the support documentation from No-IP.</p> <p>These commands will download, extract, and install the client.</p> <pre><code>sudo -s\ncd /usr/local/src/\nwget http://www.noip.com/client/linux/noip-duc-linux.tar.gz\ntar xf noip-duc-linux.tar.gz\ncd noip-2.1.9-1/\nmake install\n</code></pre> <p>Install Make</p> <p>Now I did actually need to install make as I got an error saying make was not found.  I followed these instructions.</p> <ul> <li>Update System</li> </ul> <p><code>sudo apt update &amp;&amp; sudo apt upgrade -y</code></p> <ul> <li>Install Make</li> </ul> <p><code>sudo apt install -y make</code></p> <ul> <li>Install build essentials which installs the packages needed for compiling Linux packages.</li> </ul> <p><code>sudo apt install build-essential</code></p>","tags":["Ubuntu","No-IP"]},{"location":"home-server/ddns/#create-a-service-for-no-ip","title":"Create a service for No-Ip","text":"<p>Create the file <code>/etc/systemd/system/noip2.service</code> with</p> <pre><code>[Unit]\nDescription=No-Ip Dynamic DNS Update Service\nAfter=network.target\n\n[Service]\nType=forking\nExecStart=/usr/local/bin/noip2\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Reload the init daemon</p> <pre><code>sudo systemctl daemon-reload\n</code></pre> <p>Enable the service</p> <pre><code>sudo systemctl enable noip2\n</code></pre> <p>Start the service</p> <pre><code>sudo systemctl start noip2\n</code></pre>","tags":["Ubuntu","No-IP"]},{"location":"home-server/docker/","title":"Docker","text":"<p>Docker is very useful, particular for self hosting applications in their own environments, i.e. \"containerizing\".  This is also highly recommended for an application like Immich, which is a phenomal Google Photos replacement.</p>","tags":["Ubuntu","Docker"]},{"location":"home-server/docker/#docker-and-docker-compose","title":"Docker and Docker Compose","text":"<p>Because I am using Ubuntu, I will follow the respective documentation here, [https://docs.docker.com/engine/install/ubuntu/].  The documentation provides two main methods, downloading Docker Desktop for Linux, and installing from the apt Repository.  I decided to give the Docker Desktop a go.</p>","tags":["Ubuntu","Docker"]},{"location":"home-server/docker/#docker-desktop","title":"Docker Desktop","text":"","tags":["Ubuntu","Docker"]},{"location":"home-server/docker/#kvm-setup","title":"KVM Setup","text":"<p>Docker Desktop requires kvm support</p> <p>Load the module.</p> <pre><code>modprobe kvm\nmodprobe kvm_intel\n</code></pre> <p>Check if they are enabled.</p> <pre><code>lsmod | grep kvm\n</code></pre> <p>Add your user to the kvm group.</p> <pre><code>sudo usermod -aG kvm $USER\n</code></pre>","tags":["Ubuntu","Docker"]},{"location":"home-server/docker/#set-up-dockers-package-repository","title":"Set up Docker's package repository","text":"<p>You do have to follow the first set of the <code>apt</code> method anyways. Start with </p> <pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl gnupg\nsudo install -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\nsudo chmod a+r /etc/apt/keyrings/docker.gpg\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre>","tags":["Ubuntu","Docker"]},{"location":"home-server/docker/#install-deb-package","title":"Install DEB package","text":"<p>Download the DEB packager per https://docs.docker.com/desktop/install/ubuntu/#install-docker-desktop.</p> <p>This went my downloads folder so to install it, I ran the following</p> <pre><code>sudo apt-get update\nsudo apt-get install ./Downloads/docker-desktop-&lt;version&gt;-&lt;arch&gt;.deb\n</code></pre> <p>Fill in the place holders</p> <p>This will be in the file name of the DEB package you downloaded.</p> <p>Test the Docker version</p> <pre><code>docker --version\n</code></pre> <p>Test the Docker Compose Version</p> <pre><code>docker-compose --version\n</code></pre>","tags":["Ubuntu","Docker"]},{"location":"home-server/docker/#troubleshooting-docker-compose","title":"Troubleshooting Docker Compose","text":"<p>For some reason, Docker Compose was not recognized for me.  To solve this, I followed the next steps on the <code>apt</code> repository guide.</p> <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <p>Test the Docker Compose Version again.</p> <pre><code>docker-compose --version\n</code></pre> <p>I still didn't seem to have it downloaded, so I juust manually downloaded it this time.</p> <pre><code>sudo apt install docker-compose\n</code></pre> <p>And there we go.  You should now be able to launch the Docker Desktop application.</p> <p>kvm permission error</p> <p>If you get an error regarding user permission to <code>/dev/kvm</code>.  Make sure permissions are set correctly.</p> <pre><code>sudo chown root:kvm /dev/kvm\n</code></pre> <p>Give your user account read/write access.</p> <pre><code>sudo chmod 0666 /dev/kvm\n</code></pre> <p>Restart Docker.</p> <pre><code>sudo systemctl restart docker\n</code></pre>","tags":["Ubuntu","Docker"]},{"location":"home-server/elk/","title":"ELK Stack","text":"","tags":["Ubuntu","ELK","Kibana","Logstash"]},{"location":"home-server/elk/#working-solution","title":"Working solution","text":"","tags":["Ubuntu","ELK","Kibana","Logstash"]},{"location":"home-server/elk/#prepare-docker-compoaseyml","title":"Prepare docker-compoase.yml","text":"<pre><code>version: '3.7'\nservices:\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1\n    container_name: elasticsearch\n    environment:\n      - discovery.type=single-node\n    ports:\n      - \"9200:9200\"\n    volumes:\n      - esdata:/usr/share/elasticsearch/data\n\n  logstash:\n    image: docker.elastic.co/logstash/logstash:7.17.1\n    container_name: logstash\n    volumes:\n      - ./logstash/pipeline:/usr/share/logstash/pipeline\n    ports:\n      - \"5044:5044\"\n      - \"9600:9600\"\n\n  kibana:\n    image: docker.elastic.co/kibana/kibana:7.17.1\n    container_name: kibana\n    environment:\n      ELASTICSEARCH_HOSTS: http://elasticsearch:9200\n    ports:\n      - \"5601:5601\"\n\nvolumes:\n  esdata:\n</code></pre>","tags":["Ubuntu","ELK","Kibana","Logstash"]},{"location":"home-server/elk/#configure-logstash-pipeline","title":"Configure Logstash Pipeline","text":"<p>Create a logstash.conf file in the logstash/pipeline directory to configure how Logstash processes Nginx logs.</p> <pre><code>- docker-compose.yml\n- logstash\n  - pipeline\n    - logstash.conf\n</code></pre> logstash.conf<pre><code>input {\n  beats {\n    port =&gt; 5044\n  }\n}\n\nfilter {\n  grok {\n    match =&gt; { \"message\" =&gt; \"%{COMBINEDAPACHELOG}\" }\n  }\n  date {\n    match =&gt; [ \"timestamp\" , \"dd/MMM/yyyy:HH:mm:ss Z\" ]\n  }\n}\n\noutput {\n  elasticsearch {\n    hosts =&gt; [\"elasticsearch:9200\"]\n    index =&gt; \"nginx-logs-%{+YYYY.MM.dd}\"\n  }\n}\n</code></pre>","tags":["Ubuntu","ELK","Kibana","Logstash"]},{"location":"home-server/elk/#set-up-filebeat-on-nginx-server","title":"Set Up Filebeat on Nginx Server","text":"<p>Filebeat is used to forward Nginx logs to Logstash. Create a filebeat.yml configuration file for Filebeat.</p> <p><code>/etc/filebeat/filebeat.yml</code> content:</p> <pre><code>filebeat.inputs:\n- type: log\n  enabled: true\n  paths:\n    - /var/log/nginx/*.log\n\noutput.logstash:\n  hosts: [\"logstash:5044\"]\n</code></pre>","tags":["Ubuntu","ELK","Kibana","Logstash"]},{"location":"home-server/elk/#install-filebeat","title":"Install Filebeat","text":"<pre><code>wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -\nsudo apt-get install apt-transport-https\necho \"deb https://artifacts.elastic.co/packages/7.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list\nsudo apt-get update\nsudo apt-get install filebeat\n</code></pre> <pre><code>sudo systemctl start filebeat\nsudo systemctl enable filebeat\nsudo systemctl status filebeat\n</code></pre>","tags":["Ubuntu","ELK","Kibana","Logstash"]},{"location":"home-server/elk/#start-the-elk-stack","title":"Start the ELK Stack","text":"<pre><code>docker-compose up -d\n</code></pre>","tags":["Ubuntu","ELK","Kibana","Logstash"]},{"location":"home-server/elk/#experimental-include-filebeat-in-docker-composeyml","title":"Experimental (Include filebeat in docker-compose.yml)","text":"","tags":["Ubuntu","ELK","Kibana","Logstash"]},{"location":"home-server/elk/#create-a-docker-composeyml-file","title":"Create a docker-compose.yml file","text":"<pre><code>version: '3'\nservices:\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1\n    ports:\n      - \"9200:9200\"\n    environment:\n      - discovery.type=single-node\n\n  logstash:\n    image: docker.elastic.co/logstash/logstash:7.17.1\n    volumes:\n      - ./logstash/config:/usr/share/logstash/config\n      - ./logstash/pipeline:/usr/share/logstash/pipeline\n    ports:\n      - \"5044:5044\"\n\n  kibana:\n    image: docker.elastic.co/kibana/kibana:7.17.1\n    ports:\n      - \"5601:5601\"\n    environment:\n      ELASTICSEARCH_URL: http://elasticsearch:9200\n\n  filebeat:\n    image: docker.elastic.co/beats/filebeat:7.17.1\n    volumes:\n      - /var/lib/docker/containers:/var/lib/docker/containers:ro\n      - /var/log/nginx:/var/log/nginx:ro  # Mount Nginx logs into Filebeat container\n      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml\n    environment:\n      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200\n      - SETUP_KIBANA_HOST=kibana:5601\n    depends_on:\n      - elasticsearch\n      - kibana\n</code></pre>","tags":["Ubuntu","ELK","Kibana","Logstash"]},{"location":"home-server/elk/#create-a-filebeatyml-config","title":"Create a filebeat.yml config","text":"<p>In the same directory as docker-compose.yml, create <code>filebeat.yml</code></p> <pre><code>filebeat.inputs:\n  - type: log\n    enabled: true\n    paths:\n      - /var/log/nginx/access.log\n      - /var/log/nginx/error.log\n\noutput.elasticsearch:\n  hosts: [\"${ELASTICSEARCH_HOSTS}\"]\n\nsetup.kibana:\n  host: \"${SETUP_KIBANA_HOST}\"\n</code></pre>","tags":["Ubuntu","ELK","Kibana","Logstash"]},{"location":"home-server/immich/","title":"Immich","text":"<p>Taking videos at 4k, 60 fps? Worried about the ever accumulating storage on your photo service drive?  There is now a legitimate, self hosted alternative!</p> <p>Here's how we install Immich.</p>","tags":["Ubuntu","Immich"]},{"location":"home-server/immich/#prerequisites","title":"Prerequisites","text":"<p>Get Docker installed.  Setup is quite fast, see my documentation.</p>","tags":["Ubuntu","Immich"]},{"location":"home-server/immich/#cloning-docker-container","title":"Cloning Docker Container","text":"<p>After you have Docker installed it's quite simple (see the official documentation).  Create a folder for where the docker container will go.  I'm creating a folder within a docker folder where other Docker apps can also be stored.  Then we'll also download the config files, which will enable Docker Compose to spin up the container.</p> <pre><code>mkdir ./docker/immich-app\ncd ./docker/immich-app\nwget https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml\nwget -O .env https://github.com/immich-app/immich/releases/latest/download/example.env\nwget https://github.com/immich-app/immich/releases/latest/download/hwaccel.yml\n</code></pre> <p>Change the environmental variables</p> <pre><code>sudo nano .env\n</code></pre> <p>Here you can customize the upload location of photos on your server as well as the database password.</p> Abstract <pre><code># You can find documentation for all the supported env variables\n# at https://immich.app/docs/install/environment-variables\n\n# The location where your uploaded files are stored\nUPLOAD_LOCATION=./library\n\n# The Immich version to use. You can pin this to a specific version like \"v1.71.0\"\nIMMICH_VERSION=release\n\n# Connection secret for postgres. You should change it to a random password\nDB_PASSWORD=postgres\n\n# The values below this line do not need to be changed\n##############################\nDB_HOSTNAME=immich_postgres\nDB_USERNAME=postgres\nDB_DATABASE_NAME=immich\n\nREDIS_HOSTNAME=immich_redis\n</code></pre> <p>Change the password</p> <p>Add your own password to the .env file here <code>DB_PASSWORD=postgres</code></p>","tags":["Ubuntu","Immich"]},{"location":"home-server/immich/#start-the-container","title":"Start the Container","text":"<pre><code>docker compose up -d\n</code></pre> <p>You should now see the container running in Docker Desktop if you happened to install that as well.</p> <p></p>","tags":["Ubuntu","Immich"]},{"location":"home-server/immich/#open-the-app","title":"Open the App","text":"<p>Immich runs on port 2283.  If you are on Ubuntu Desktop you can access the website via</p> <pre><code>localhost:2283\n</code></pre> <p>Otherwise, if you are access it from another computer on the network, make sure you allow the port on the firewall.</p> <pre><code>sudo ufw allow 2283\n</code></pre>","tags":["Ubuntu","Immich"]},{"location":"home-server/immich/#nginx-reverse-proxy","title":"Nginx Reverse Proxy","text":"<p>Let's set up Immich to be accessible from the world wide web!  </p>","tags":["Ubuntu","Immich"]},{"location":"home-server/immich/#prerequisites_1","title":"Prerequisites","text":"<p>If you haven't already installed nginx or certbot, please follow my documentation before continuing to get those installed.</p>","tags":["Ubuntu","Immich"]},{"location":"home-server/immich/#set-up-an-nginx-server-block","title":"Set up an nginx server block","text":"<p>Let's configure a server block for <code>photos.mydomain.com</code>.  Of course, you can replace <code>mydomain</code> with a domain that you own.</p> <p>Let's make sure we're in the nginx site-available directory</p> <pre><code>cd /etc/nginx/sites-available\n</code></pre> <p>Create a server block for <code>photos.&lt;mydomain&gt;.com</code>.</p> <pre><code>sudo nano photos.mydomain.com\n</code></pre> <p>Paste the following configuration</p> <pre><code>server {\n    listen 80;\n    listen [::]:80;\n\n    # replace with your domain or subdomain\n    server_name photos.mydomain.com\n\n    # https://github.com/immich-app/immich/blob/main/nginx/templates/default.conf.template#L28\n    client_max_body_size 50000M;\n\n    location / {\n        proxy_pass http://localhost:2283;\n        proxy_set_header Host              $http_host;\n        proxy_set_header X-Real-IP         $remote_addr;\n        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n\n        # http://nginx.org/en/docs/http/websocket.html\n        proxy_http_version 1.1;\n        proxy_set_header   Upgrade    $http_upgrade;\n        proxy_set_header   Connection \"upgrade\";\n        proxy_redirect off;\n    }\n}\n</code></pre> <p>Replace the domain</p> <p>Just remember to replace <code>photos.mydomain.com</code> with the actual domain you want routed to Immich.</p> <p>Save this file. </p> <p>Enable the site.</p> <pre><code>sudo ln -s /etc/nginx/sites-available/photos.mydomain.com /etc/nginx/sites-enabled/\n</code></pre> <p>Let's just test our nginx config real quick to make sure there were no syntax issues.</p> <pre><code>sudo nginx -t\n</code></pre>","tags":["Ubuntu","Immich"]},{"location":"home-server/immich/#configure-dns-routing","title":"Configure DNS Routing","text":"<p>Before we set up certbot, we need to configure routing for the domain or subdomain that we want to route to our home server.</p> <p>For AWS users, simply go to <code>Hosted Zones</code>, choose the domain that you want to create a record for, and hit <code>Create Record</code>.  In our example here, were are using a subdomain <code>photos</code>.  The record will be a <code>CNAME</code>, which allows use to forward traffic to the DDNS we created with No-IP. Hit save.  Now we have a <code>CNAME</code> routing for <code>photos.mydomain.com</code> which will forward traffic to our DDNS aka our home server.</p>","tags":["Ubuntu","Immich"]},{"location":"home-server/immich/#configure-ssl-https","title":"Configure SSL (HTTPS)","text":"<p>Let's install our SSL certificates so that we make sure our site always uses HTTPS.</p> <pre><code>sudo certbot --nginx -d photos.mydomain.com\n</code></pre> <p>We should get a <code>Congratulations!</code> message from certbot. </p> <p>Let's test our configuration once again.</p> <pre><code>sudo nginx -t\n</code></pre> <p>And now restart the nginx service. <pre><code>sudo systemctl restart nginx\n</code></pre></p>","tags":["Ubuntu","Immich"]},{"location":"home-server/immich/#testing","title":"Testing","text":"<p>Excellent!  We can now hit our Immich server from the world wide web!</p> <p></p>","tags":["Ubuntu","Immich"]},{"location":"home-server/immich/#immich-behind-a-cloudflare-tunnel-with-google-oauth","title":"Immich Behind a CloudFlare Tunnel with Google OAuth","text":"","tags":["Ubuntu","Immich"]},{"location":"home-server/immich/#step-1-set-up-google-as-an-auth-provider-in-cloudflare","title":"Step 1: Set up Google as an Auth Provider in CloudFlare","text":"<p>Go to <code>Settings -&gt; Authentication -&gt; Login Methods</code></p> <p>Hit the <code>Add new</code> button.</p> <p>CloudFlare will provide instructions for setting up Google as an identity provider.  Follow these instructions to create an App ID and Client secret.  You will enter these values into the Google identity provider <code>App ID</code> and <code>Client secret</code>.</p>","tags":["Ubuntu","Immich"]},{"location":"home-server/immich/#step-2-set-up-a-public-hostname-for-your-tunnel","title":"Step 2: Set up a public hostname for your tunnel.","text":"<p>Navigate to your tunnel in <code>Networks -&gt; Tunnels</code>.  Click on your tunnel and hit the <code>Edit</code> button.</p> <p>Click on Public Hostname at the top.  Add the desired subdomain and the local IP:port that the Immich app is running on.  You can now access this via the hostname URL in the browser.</p>","tags":["Ubuntu","Immich"]},{"location":"home-server/immich/#step-3-set-up-a-cloudflare-saas-application","title":"Step 3: Set up a CloudFlare SaaS Application","text":"<p>Go to <code>Access -&gt; Applications</code>. </p> <p>Hit <code>Add an application</code>. Choose SaaS.</p> <p>Give the application a name, i.e. <code>Immich</code>.</p> <p>The logo can be this URL.</p> <pre><code>https://raw.githubusercontent.com/immich-app/immich/main/design/immich-logo.png\n</code></pre> <p>The scopes should be <code>openid</code>, <code>email</code>, <code>profile</code>.</p> <p>The redirect URLs should be </p> <pre><code>http://local_IP:2283/auth/login\nhttp://local_IP:2283/user-settings\nhttps://immich.yourdomain.com/auth/login\nhttps://immich.yourdomain.com/user-settings\nhttp://local_IP:2283/api/oauth/mobile-redirect\nhttps://immich.yourdomain.com/api/oauth/mobile-redirect\n</code></pre> <p>Note the Client ID, Client Secrent, and the Issuer URL.  Copy these as we'll need them for the Immich Admin configuration.</p> <p>Create a Policy called Immich Access Policy.</p> <p>Action is <code>Allow</code>.</p> <p>In the Configure Rules, set the Selector to Emails.  Add any emails that should have the ability to sign into the application.</p> <p>Save the policy.</p> <p>For Authentication, set your Auth provider i.e. Google.</p> <p>In Immich go to <code>Administration -&gt; Settings -&gt; OAuth</code>.</p> <p>Paste in the Issuer URL, Client ID, and Client Secret.</p> <p>Scroll down to the <code>Mobile Redirect URI Override</code>.  You need to toggle this on because CloudFlare does not allow us to use the <code>app.immich:;</code> URL.  Set this to be <code>https://immich.yourdomain.com/api/oauth/mobile-redirect</code>.</p> <p>Verify that you can sign in correctly on both web and mobile.  </p> <p>Deactivate password sign in.</p> <p>Congrats, you are now tunneling into your Immich instance using CloudFlare tunnel, and authenticating using OAuth with Google with CloudFlare as the issuer.</p> <p>Keep in mind that CloudFlare Tunnel does have a file size upload limit of 100 MB.  Any large videos you have WILL NOT SYNC.  The only way you will sync these large videos would be to connect through a VPN.</p>","tags":["Ubuntu","Immich"]},{"location":"home-server/network-drive/","title":"Mapped Network drive","text":"<p>Allowing yourself to map folders of your server as network drive makes it very easy to read and write to your server from another computer over your home network.</p> <p>To accomplish this, we can use a service called samba.</p>","tags":["Ubuntu","samba"]},{"location":"home-server/network-drive/#step-1-install-samba","title":"Step 1: Install Samba","text":"<pre><code>sudo apt-get update\nsudo apt-get install samba\n</code></pre>","tags":["Ubuntu","samba"]},{"location":"home-server/network-drive/#step-2-share-a-particular-folder","title":"Step 2: Share a particular folder","text":"<pre><code>mkdir -p /srv/shared\nsudo chown -R :&lt;group&gt; /srv/shared\nchmod -R 770 /srv/shared\n</code></pre> <p>Note</p> <p>You don't need to run <code>mkdir</code> if the folder already exists. The chmod command does the following: chmod: Stands for \"change mode,\" a command in Unix and Unix-like operating systems to change the access permissions of files and directories. -R: Recursively changes the permissions of the specified directory and its contents. 770: Assigns read (4), write (2), and execute (1) permissions to the owner and group. In total, it grants full read, write, and execute permissions to the users and group.</p> <p>Tip</p> <p>To create a linux user</p> <pre><code>sudo adduser &lt;username&gt;\n</code></pre> <p>To create a group</p> <pre><code>sudo groupadd &lt;group&gt;\n</code></pre> <p>To add a user to a group</p> <pre><code>sudo usermod -aG $GROUP $USER\n</code></pre>","tags":["Ubuntu","samba"]},{"location":"home-server/network-drive/#step-3-configure-samba","title":"Step 3: Configure Samba","text":"<p>Edit the Sasmba configuration file.</p> <pre><code>sudo nano /etc/samba/smb.conf\n</code></pre> <p>Add this at the end of the file:</p> <pre><code>[SharedFolder]\n  path = /home/your_username/SharedFolder\n  read only = no\n  guest ok = yes\n</code></pre> <p>Tip</p> <p>Setting <code>guest ok = no</code> will make it such that a valid Samba user will need to provide their credentials to access the mapped drive.</p>","tags":["Ubuntu","samba"]},{"location":"home-server/network-drive/#step-4-restart-samba","title":"Step 4: Restart Samba","text":"<pre><code>sudo service smbd restart\n</code></pre>","tags":["Ubuntu","samba"]},{"location":"home-server/network-drive/#step-5-create-a-samba-user","title":"Step 5: Create a Samba User","text":"<p>This user needs to be an existing Ubuntu user:</p> <pre><code>sudo smbpasswd -a your_samba_username\n</code></pre>","tags":["Ubuntu","samba"]},{"location":"home-server/network-drive/#step-6-allow-access-through-firewall","title":"Step 6: Allow access through firewall","text":"<p>If firewall is enabled on the Ubuntu machine, allow traffic for the Samba app.</p> <pre><code>sudo ufw allow Samba\n</code></pre> <p>Info</p> <p>To check the firewall status run <pre><code>sudo ufw status\n</code></pre></p> <p>To activate the firewall run <pre><code>sudo ufw enable\n</code></pre></p> <p>To view available applications you can enable <pre><code>sudo ufw app list\n</code></pre></p>","tags":["Ubuntu","samba"]},{"location":"home-server/network-drive/#step-6-access-from-windows","title":"Step 6: Access from Windows","text":"<p>You should now be able to open an explorer instance on a Windows machine on the network and access <code>\\\\your_ubuntu_ip\\SharedFolder</code></p> <p>Tip</p> <p>To find your Ubuntus ip address, run  <pre><code>ip addr show\n</code></pre></p>","tags":["Ubuntu","samba"]},{"location":"home-server/nextcloud/","title":"NextCloud","text":"<pre><code>version: '3'\n\nservices:\n  nextcloud:\n    image: nextcloud\n    ports:\n      - 8085:80\n    volumes:\n      - /mnt/md0/apps/nextcloud:/var/www/html\n    environment:\n      - MYSQL_HOST=db\n      - MYSQL_DATABASE=nextcloud\n      - MYSQL_USER=nextcloud\n      - MYSQL_PASSWORD=[redacted]\n    depends_on:\n      - db\n\n  db:\n    image: mysql:5.7\n    environment:\n      - MYSQL_ROOT_PASSWORD=[redacted]\n      - MYSQL_DATABASE=nextcloud\n      - MYSQL_USER=nextcloud\n      - MYSQL_PASSWORD=[redacted]\n    volumes:\n      - /mnt/md0/apps/nextcloud/db:/var/lib/mysql\n\nvolumes:\n  nextcloud:\n  db:\n  ```\n\n  I did need to make the following changes to `&lt;path to mnt&gt;/config/config.phg`, otherwise you will get an error when trying to access the site outside of the host's localhost.\n\n  ```php\n  'trusted_domains' =&gt; \n  [\n   'localhost',\n   '&lt;server_ip',\n   'nextcloud.&lt;domain&gt;.com'\n  ],\n</code></pre>","tags":["Ubuntu","NextCloud"]},{"location":"home-server/portainer/","title":"Portainer","text":"<p>Simple installation with docker compose.  More information to come...</p> <pre><code>version: '3'\n\nservices:\n  portainer:\n    image: portainer/portainer\n    container_name: portainer\n    ports:\n      - \"9000:9000\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n    restart: always\n</code></pre> <p>New edition</p> docker-compose.yml<pre><code>services:\n  portainer:\n    image: portainer/portainer-ce:2.21.5\n    container_name: portainer\n    restart: always\n    ports:\n      #- \"8000:8000\" # TCP tunnel server\n      - \"9443:9443\" # The UI\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - ./portainer_data:/data\n</code></pre>","tags":["Ubuntu","Portainer"]},{"location":"home-server/remote-desktop/","title":"Remote Desktop","text":"<p>Accessing the server running Ubuntu Desktop via Remote Desktop is a user friendly way of interacting with our home server.</p> <p>We can use a tool called <code>xrdp</code>.</p>","tags":["Ubuntu","Remote Desktop"]},{"location":"home-server/remote-desktop/#install-xrdp-on-ubuntu","title":"Install xrdp on Ubuntu","text":"<pre><code>sudo apt-get update\nsudo apt-get install xrdp\n</code></pre>","tags":["Ubuntu","Remote Desktop"]},{"location":"home-server/remote-desktop/#start-the-xrdp-service","title":"Start the xrdp Service","text":"<pre><code>sudo service xrdp start\n</code></pre>","tags":["Ubuntu","Remote Desktop"]},{"location":"home-server/remote-desktop/#allow-xrdp-through-firewall","title":"Allow xrdp through firewall","text":"<p>If firewall is enabled on the Ubuntu machine, allow traffic on the default RDP port (3389).</p> <pre><code>sudo ufw allow 3389\n</code></pre>","tags":["Ubuntu","Remote Desktop"]},{"location":"home-server/remote-desktop/#check-xrdp-status","title":"Check xrdp Status","text":"<pre><code>sudo service xrdp status\n</code></pre>","tags":["Ubuntu","Remote Desktop"]},{"location":"home-server/remote-desktop/#connect-to-the-servers-ip-address-via-windows-remote-desktop","title":"Connect to the servers IP Address via Windows Remote Desktop","text":"<p>To get the IP address of the Ubuntu server, run:</p> <pre><code>ip addr show\n</code></pre>","tags":["Ubuntu","Remote Desktop"]},{"location":"home-server/seafile/","title":"Seafile","text":"<p>Seafile is a self-hosted, dropbox like solution, that also has client apps for desktop and mobile that are free and open source, allowing you to connect to your server many many devices.</p>","tags":["Ubuntu","Seafile"]},{"location":"home-server/seafile/#prerequisites","title":"Prerequisites","text":"<p>Get Docker installed.  Setup is quite fast, see my documentation.</p>","tags":["Ubuntu","Seafile"]},{"location":"home-server/seafile/#server-configuration","title":"Server Configuration","text":"<p>Download the <code>docker-compose.yml</code> file per the official documentation.  I like to download this file to <code>home/&lt;my-username&gt;/docker/seafile</code>.</p> <p>Now if you take a look at the official documentation or the <code>docker-compose.yml</code>, you'll see a few properties that we need to change, including <code>MYSQL_ROOT_PASSWORD</code>, <code>seafile -&gt; volumes</code>, <code>DB_ROOT_PASSWD</code>, as well as the seafile port.  </p> <pre><code>services:\n  db:\n    image: mariadb:10.11\n    container_name: seafile-mysql\n    environment:\n      - MYSQL_ROOT_PASSWORD=[REDACTED]  # Requested, set the root's password of MySQL service.\n      - MYSQL_LOG_CONSOLE=true\n      - MARIADB_AUTO_UPGRADE=1\n    volumes:\n      #- /opt/seafile-mysql/db:/var/lib/mysql  # Requested, specifies the path to MySQL data persistent store.\n      - /home/thomas/docker/seafile/mysql:/var/lib/mysql \n    networks:\n      - seafile-net\n\n  memcached:\n    image: memcached:1.6.18\n    container_name: seafile-memcached\n    entrypoint: memcached -m 256\n    networks:\n      - seafile-net\n\n  seafile:\n    image: seafileltd/seafile-mc:latest\n    container_name: seafile\n    ports:\n      - \"&lt;port on your server&gt;:80\"\n    volumes:\n      - &lt;PATH TO STORAGE&gt;:/shared   # Requested, specifies the path to Seafile data persistent store.\n    environment:\n      - DB_HOST=db\n      - DB_ROOT_PASSWD=[REDACTED]  # Requested, the value should be root's password of MySQL service.\n      - TIME_ZONE=Etc/UTC  # Optional, default is UTC. Should be uncomment and set to your local time zone.\n      - SEAFILE_ADMIN_EMAIL=thomaswilde512@gmail.com # Specifies Seafile admin user, default is 'me@example.com'.\n      - SEAFILE_ADMIN_PASSWORD=[REDACTED]     # Specifies Seafile admin password, default is 'asecret'.\n      - SEAFILE_SERVER_LETSENCRYPT=false   # Whether to use https or not.\n      - SEAFILE_SERVER_HOSTNAME=[REDACTED] # Specifies your host name if https is enabled.\n    depends_on:\n      - db\n      - memcached\n    networks:\n      - seafile-net\n\nnetworks:\n  seafile-net:\n</code></pre> <p>Note, that I am running nginx on my server itself and I want to expose a different port than port 80 to the docker port 80 (nginx is running on port 80).</p>","tags":["Ubuntu","Seafile"]},{"location":"home-server/seafile/#start-docker","title":"Start Docker","text":"<pre><code>docker compose up -d\n</code></pre> <p>We should now be able to access Seafile on the local network with the following URL: <pre><code>http://&lt;server-ip&gt;:&lt;configured port&gt;\n</code></pre></p>","tags":["Ubuntu","Seafile"]},{"location":"home-server/seafile/#nginx-config","title":"Nginx Config","text":"<pre><code>cd /etc/nginx/sites-available\n</code></pre> <p>Create a server block for <code>seafile.&lt;mydomain&gt;.com</code>.</p> <pre><code>sudo nano photos.mydomain.com\n</code></pre> <pre><code>log_format seafileformat '$http_x_forwarded_for $remote_addr [$time_local] \"$request\" $status $body_bytes_sent \"$http_referer\" \"$http_user_agent\" $upstream_response_time';\n\nserver {\n\n    listen 80;\n    listen [::]:80;\n\n    server_name seafile.mydomain.com;\n\n    proxy_set_header X-Forwarded-For $remote_addr;\n\n    location / {\n        proxy_pass         http://localhost:&lt;configured port&gt;;\n        proxy_set_header Host              $http_host;\n        proxy_set_header X-Real-IP         $remote_addr;\n        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n\n        # http://nginx.org/en/docs/http/websocket.html\n        proxy_http_version 1.1;\n        proxy_set_header   Upgrade    $http_upgrade;\n        proxy_set_header   Connection \"upgrade\";\n\n         access_log      /var/log/nginx/seahub.access.log seafileformat;\n         error_log       /var/log/nginx/seahub.error.log;\n    }\n}\n</code></pre> <p>Save this file. </p> <p>Enable the site.</p> <pre><code>sudo ln -s /etc/nginx/sites-available/seafile.mydomain.com /etc/nginx/sites-enabled/\n</code></pre> <p>Let's just test our nginx config real quick to make sure there were no syntax issues.</p> <pre><code>sudo nginx -t\n</code></pre>","tags":["Ubuntu","Seafile"]},{"location":"home-server/seafile/#configure-dns-routing","title":"Configure DNS Routing","text":"<p>Before we set up certbot, we need to configure routing for the domain or subdomain that we want to route to our home server.</p> <p>For AWS users, simply go to <code>Hosted Zones</code>, choose the domain that you want to create a record for, and hit <code>Create Record</code>.  In our example here, were are using a subdomain <code>seafile</code>.  The record will be a <code>CNAME</code>, which allows use to forward traffic to the DDNS we created with No-IP. Hit save.  Now we have a <code>CNAME</code> routing for <code>seafile.mydomain.com</code> which will forward traffic to our DDNS aka our home server.</p>","tags":["Ubuntu","Seafile"]},{"location":"home-server/seafile/#configure-ssl-https","title":"Configure SSL (HTTPS)","text":"<p>Let's install our SSL certificates so that we make sure our site always uses HTTPS.</p> <pre><code>sudo certbot --nginx -d seafile.mydomain.com\n</code></pre> <p>We should get a <code>Congratulations!</code> message from certbot. </p> <p>Let's test our configuration once again.</p> <pre><code>sudo nginx -t\n</code></pre> <p>And now restart the nginx service. <pre><code>sudo systemctl restart nginx\n</code></pre></p> <p>The config file should now look something like this:</p> <pre><code>log_format seafileformat '$http_x_forwarded_for $remote_addr [$time_local] \"$request\" $status $body_bytes_sent \"$http_referer\" \"$http_user_agent\" $upstream_response_time';\n\nserver {\n    server_name seafile.mydomain.com;\n\n    proxy_set_header X-Forwarded-For $remote_addr;\n\n    location / {\n        proxy_pass         http://localhost:&lt;configured_port&gt;;\n        proxy_set_header Host              $http_host;\n        proxy_set_header X-Real-IP         $remote_addr;\n        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n\n        # http://nginx.org/en/docs/http/websocket.html\n        proxy_http_version 1.1;\n        proxy_set_header   Upgrade    $http_upgrade;\n        proxy_set_header   Connection \"upgrade\";\n\n        access_log      /var/log/nginx/seahub.access.log seafileformat;\n        error_log       /var/log/nginx/seahub.error.log;\n    }\n\n\n    listen 443 ssl; # managed by Certbot\n    ssl_certificate /etc/letsencrypt/live/seafile.mydomain.com/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/seafile.mydomain.com/privkey.pem; # managed by Certbot\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\n\n}\n\n\nserver {\n    if ($host = seafile.mydomain.com) {\n        return 301 https://$host$request_uri;\n    } # managed by Certbot\n\n\n    listen 80;\n    server_name seafile.mydomain.com;\n    return 404; # managed by Certbot\n\n\n}\n</code></pre> <p>You should now be able to connect to seafile via https.</p> <p></p>","tags":["Ubuntu","Seafile"]},{"location":"home-server/seafile/#troubleshooting","title":"Troubleshooting","text":"<p>If you have issues connecting via Https, check the following.</p> <ol> <li>Check the Admin settings SERVICE_URL.</li> </ol> <p>It should say <code>https</code>.</p> <p></p> <p></p> <ol> <li>Check <code>seahub_settings.py</code></li> </ol> <p>This file is located in </p> <pre><code>&lt;path to file mount&gt;/seafile/conf/seahub_settings.py\n</code></pre> <p>Check that the <code>SERVICE_URL</code> AND <code>FILE_SERVER_ROOT</code> have https.  </p> <p>If the issue persists, you can also try adding the following to <code>seahub_settings.py</code>.</p> <pre><code>CSRF_TRUSTED_ORIGINS = [\"https://seafile.mydomain.com\"]\n</code></pre> <p>Versioning</p> <p>Specifying the <code>latest</code> version for seafile did end up breaking Seafile for me.  I noticed that a couple of new versions had been released since I had originall installed the container.  I reverted back to the specific version I had been using and this fixed the issue for me.</p> <pre><code>  seafile:\n    image: seafileltd/seafile-mc:11.0.3\n</code></pre>","tags":["Ubuntu","Seafile"]},{"location":"home-server/sonatype-nexus/","title":"Sonatype Nexus","text":"<p>Having an artifact repository is impartive for version control of artifacts and is companion for CI/CD pipelines</p>","tags":["Home Server","Sonatype Nexus","Artifact Repository"]},{"location":"home-server/sonatype-nexus/#pulling-docker-image","title":"Pulling Docker Image","text":"<p>Hosting your own artifact repository is quite simply with Sonatype Nexus Repository.  We can pull the docker image using this <code>docker-compose.yml</code>.</p> <pre><code>version: \"3\"\nservices:\n  nexus:\n    image: sonatype/nexus3\n    restart: always\n    volumes:\n      - /mnt/md0/apps/nexus/nexus-data:/nexus-data\n    ports:\n      - \"&lt;desired-port-1&gt;:8081\"\n      - \"&lt;desired-port-2&gt;:8085\"\nvolumes:\n  nexus-data: {}\n</code></pre> <p>Inside of the parent folder of the <code>docker-compose.yml</code>, spin up the docker image.</p> <pre><code>docker compose up -d\n</code></pre> <p>When the application is up and running you'll need to grab the default admin password inside the docker container at <code>/nexus-data/admin.password</code>.  I just accessed it using docker desktop.  You can then sign in as the admin by navigating to <code>localhost:&lt;desired-port-1&gt;</code></p>","tags":["Home Server","Sonatype Nexus","Artifact Repository"]},{"location":"home-server/sonatype-nexus/#nginx-block","title":"Nginx Block","text":"<p>Let's enable a domain in our nginx config. </p> <p>Navigate to the <code>sites-available</code>.</p> <pre><code>cd /etc/nginx/sites-available\n</code></pre> <p>Create our block.</p> <pre><code>sudo nano nexus.&lt;my-domain&gt;.com\n</code></pre> <p>Paste the following configuration</p> <pre><code>server {\n    listen 80;\n    listen [::]:80;\n\n    # replace with your domain or subdomain\n    server_name nexus.&lt;my-domain&gt;.com\n\n    location / {\n        proxy_pass http://localhost:&lt;desired-port-1&gt;;\n        proxy_set_header Host              $http_host;\n        proxy_set_header X-Real-IP         $remote_addr;\n        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header X-Forwarded-Port  $server_port;\n\n    }\n}\n</code></pre> <p>Replace 'my-domain'</p> <p>Just remember to replace  with the actual domain you want routed to Nexus. <p>Save this file. </p> <p>Enable the site.</p> <pre><code>sudo ln -s /etc/nginx/sites-available/nexus.mydomain.com /etc/nginx/sites-enabled/\n</code></pre> <p>Let's just test our nginx config real quick to make sure there were no syntax issues.</p> <pre><code>sudo nginx -t\n</code></pre>","tags":["Home Server","Sonatype Nexus","Artifact Repository"]},{"location":"home-server/sonatype-nexus/#configure-dns-routing","title":"Configure DNS Routing","text":"<p>Before we set up certbot, we need to configure routing for the domain or subdomain that we want to route to our home server.</p> <p>For AWS users, simply go to <code>Hosted Zones</code>, choose the domain that you want to create a record for, and hit <code>Create Record</code>.  In our example here, were are using a subdomain <code>nexus</code>.  The record will be a <code>CNAME</code>, which allows use to forward traffic to the DDNS we created with No-IP. Hit save.  Now we have a <code>CNAME</code> routing for <code>nexus.mydomain.com</code> which will forward traffic to our DDNS aka our home server.</p>","tags":["Home Server","Sonatype Nexus","Artifact Repository"]},{"location":"home-server/sonatype-nexus/#configure-ssl-https","title":"Configure SSL (HTTPS)","text":"<p>Let's install our SSL certificates so that we make sure our site always uses HTTPS.</p> <pre><code>sudo certbot --nginx -d nexus.mydomain.com\n</code></pre> <p>We should get a <code>Congratulations!</code> message from certbot. </p> <p>Let's test our configuration once again.</p> <pre><code>sudo nginx -t\n</code></pre> <p>And now restart the nginx service. <pre><code>sudo systemctl restart nginx\n</code></pre></p> <p>First Sign in as Admin</p> <p>When you sign in the first time, the username will be \"admin\", and you will need to find the initial password at the following location: <code>/nexus-data/admin.password</code>.</p>","tags":["Home Server","Sonatype Nexus","Artifact Repository"]},{"location":"home-server/sonatype-nexus/#creating-a-docker-repository","title":"Creating a Docker Repository","text":"<p>Because we're running nexus behind our nginx proxy, we only need to use the HTTP connector because we'll already be sending requests to the server with SSL.</p> <p>This is where the second port will come in handy that we opened in our <code>docker-compose.yml</code> file, 8085.  We're going to use that for our Docker api access which runs on a different port than the Nexus web application.</p> <p></p> <p>For simplicity to connecting to the Docker api to push and pull images, I find it cleaner to create a separate sub-domain, i.e. <code>docker.mydomain.com</code>.  Configure DNS routing just like you did previously.</p> <pre><code>server {\n    listen 80;\n    listen [::]:80;\n\n    # replace with your domain or subdomain\n    server_name docker.&lt;my-domain&gt;.com\n\n    location / {\n        proxy_pass http://localhost:&lt;desired-port-2&gt;;\n        proxy_set_header Host              $http_host;\n        proxy_set_header X-Real-IP         $remote_addr;\n        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header X-Forwarded-Port  $server_port;\n\n    }\n}\n</code></pre> <p>Make sure to install your SSL certs with certbot for the docker subdomain.</p> <pre><code>sudo certbot --nginx -d docker.mydomain.com\n</code></pre> <p>You will now be able to use docker on your PC to push images to your own private Docker Hub repo.</p> <p>Login:</p> <pre><code>docker login docker.mydomain.com\n</code></pre> <p>Enter username and password for Nexus.</p> <p>You should see <code>Login Succeeded</code>.</p> <p>You can now build and push your docker image</p> <pre><code>docker build -t docker.mydomain.com/repo-name/app-name:latest .\ndocker push docker.mydomain.com/repo-name/app-name:latest\n</code></pre> <p>You should now see your docker app in the docker repository you created.</p> <p></p>","tags":["Home Server","Sonatype Nexus","Artifact Repository"]},{"location":"home-server/ssh/","title":"SSH","text":"<p>Installing SSH is very straight forward using OpenSSH.</p>","tags":["Ubuntu","SSH"]},{"location":"home-server/ssh/#install-and-enable-openssh","title":"Install and Enable OpenSSH","text":"<p>First let's install OpenSSH.</p> <pre><code>sudo apt update\nsudo apt install openssh-server\n</code></pre> <p>Start the service</p> <pre><code>sudo service ssh start\n</code></pre> <p>Check the status to ensure it's running</p> <pre><code>sudo service ssh status\n</code></pre> <p>You should now see OpenSSH if you check your firewall app list</p> <pre><code>sudo ufw app list\n</code></pre> <p>You can then either allow port 22, or simply the OpenSSH, both will Open port 22.  I like seeing the apps in the ufw status so lets go with the app name.</p> <pre><code>sudo ufw allow OpenSSH\n</code></pre> <p>You can now SSH into your home server!  If you need to SSH from outside of your home network, you can either open port forwarding to your Servers IP address, or follow the documentation for setting up a VPN.  If you are connected to your VPN service, you will be able to login to the server via SSH as well.</p>","tags":["Ubuntu","SSH"]},{"location":"home-server/ssh/#enable-rsa-key-authentication","title":"Enable RSA Key Authentication","text":"<pre><code>sudo nano /etc/ssh/sshd_config\n</code></pre> <p>Uncomment the following lines <pre><code>PubkeyAuthentication yes\nAuthorizedKeysFile      .ssh/authorized_keys .ssh/authorized_keys2\n</code></pre></p> <p>Save the file.</p> <p>Restart the SSH service.</p> <pre><code>sudo systemctl restart ssh\n</code></pre> <p>Ensure proper permission are set.</p> <pre><code>sudo chown -R thomas:thomas ~/.ssh\nsudo chmod 700 ~/.ssh\nsudo chmod 600 ~/.ssh/authorized_keys\nsudo chown -R thomas:thomas /home/thomas\nsudo chmod 700 /home/thomas\n</code></pre> <p>Replace Values</p> <p>Replace <code>thomas</code> with the user name</p>","tags":["Ubuntu","SSH"]},{"location":"home-server/ssh/#remote-access-of-the-network","title":"Remote Access of the network","text":"","tags":["Ubuntu","SSH"]},{"location":"home-server/ssh/#prerequisites","title":"Prerequisites","text":"<p>You'll just want to make sure you've already set up a DDNS.</p>","tags":["Ubuntu","SSH"]},{"location":"home-server/ssh/#generate-rsa-key-on-windows-client","title":"Generate RSA key on Windows Client","text":"<p>On the windows machine you want to use to connect to your server via SSH, generate a key pair</p> <pre><code>ssh-keygen -t rsa -b 4096 \"my-windows-client-key\"\n</code></pre> <p>The default save path is fine.</p> <p>Provide a strong passphrase.</p> <p>Open the public key file and copy the content.</p> <p>We're now going to add this public key to the server.</p> <pre><code>sudo nano ~/.ssh/authorized_keys\n</code></pre> <p>Paste the public key in here. </p> <p>Save the file.</p> <p>You can now connect to your server via SSH using the private key you generated on the client.</p> <p>If you want to use WinSCP, use PuttyGen to convert the private key to a .ppk file.</p>","tags":["Ubuntu","SSH"]},{"location":"home-server/ssh/#disable-password-authentication","title":"Disable Password Authentication","text":"<p>We definitely want to disable password authentication for security purposes now that we have the RSA key working.</p> <pre><code>sudo nano /etc/ssh/sshd_config\n</code></pre> <p>Uncomment the following lines and make sure the value is <code>no</code></p> <pre><code>PasswordAuthentication no\n</code></pre> <p>Save the file.</p> <p>Restart the SSH service.</p> <pre><code>sudo systemctl restart ssh\n</code></pre>","tags":["Ubuntu","SSH"]},{"location":"home-server/ssh/#set-up-an-android-client","title":"Set up an Android Client","text":"<p>I downloaded ConnectBot which is a highly rated free SSH app for Android.</p> <p>Go to Menu -&gt; Manage Pubkeys</p> <p>Create a new RSA key with a strong password as well as an appropriate nickname.  After the key-pair is generated, you'll want to add the public key to the server like we did with the windows client.</p> <p>Create a new host with your <code>&lt;username&gt;@&lt;myDDNS&gt;:22</code>, and you'll be able to connect as soon as you enable port forwarding on the router.</p>","tags":["Ubuntu","SSH"]},{"location":"home-server/ssh/#allow-port-forwarding","title":"Allow port forwarding","text":"<p>Make sure you've open port 22 on your router and forwarded it to your Server's IP address.  You can always close it if you don't need to use SSH at the moment.</p>","tags":["Ubuntu","SSH"]},{"location":"home-server/web-server/","title":"Nginx Web Server","text":"<p>Setting up a web server on our home server will allow us to configure web traffic to any application running on our server that we want to expose to the web.</p>","tags":["Ubuntu","Nginx","Web Server","Let's Encrypt","SSL"]},{"location":"home-server/web-server/#install-and-enable-nginx","title":"Install and enable Nginx","text":"<p>Update our package lists.</p> <pre><code>sudo apt update\n</code></pre> <p>Install nginx.</p> <pre><code>sudo apt install nginx\n</code></pre> <p>Start nginx.</p> <pre><code>sudo systemctl start nginx\n</code></pre> <p>Enable Nginx to start on boot.</p> <pre><code>sudo systemctl enable nginx\n</code></pre> <p>Verify installation.</p> <pre><code>sudo systemctl status nginx\n</code></pre>","tags":["Ubuntu","Nginx","Web Server","Let's Encrypt","SSL"]},{"location":"home-server/web-server/#set-up-a-simple-indexhtml-for-testing","title":"Set up a simple index.html for testing.","text":"<p>We're going to follow the same methodology that is documented for setting up web content on AWS.</p> <p>To quickly review.  I'm going to configure a subdomain of a domain that I own (mydomain.com) to be routed to my home server.  Let's do mysub.mydomain.com.</p> <p>Set up a directory for the web content.</p> <pre><code>sudo mkdir -p /var/www/mysub.mydomain.com/html\n</code></pre> <pre><code>sudo chown -R &lt;my-user&gt;:&lt;my-user&gt; /var/www/mysub.mydomain.com/html\n</code></pre> <p>Info</p> <p>Make sure to replace <code>&lt;my-user&gt;</code> your Ubuntu user account you are using.</p> <p>Ensure proper permissions.</p> <pre><code>sudo chmod -R 755 /var/www\n</code></pre> <p>Create an <code>index.html</code> file: <pre><code>nano /var/www/mysub.mydomain.com/html/index.html\n</code></pre></p> <p>Inside the file, we\u2019ll create a really basic file that indicates what site we are currently accessing. It will look like this: <pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Thomas' Home Network&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Hey, you're on my home network&lt;/h1&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> Save and close the file when you are finished. To do this in <code>nano</code>, press <code>CTRL+o</code> to write the file out, then <code>CTRL+x</code> to exit.</p>","tags":["Ubuntu","Nginx","Web Server","Let's Encrypt","SSL"]},{"location":"home-server/web-server/#create-a-server-block","title":"Create a Server Block","text":"<p>Navigate to the nginx directory.</p> <pre><code>cd /etc/nginx/\n</code></pre> <p>The <code>sites-available</code> and <code>sites-enabled</code> folders should already be there, but just in case, let's try to create them.</p> <pre><code>sudo mkdir sites-available and mkdir sites-enabled\n</code></pre> <p>Navigate into the <code>sites-available</code> directory.</p> <pre><code>cd sites-available\n</code></pre> <p>Let's create our config file.</p> <pre><code>sudo nano mysub.mydomain.com\n</code></pre> <p>And we'll paste this config in here:</p> <pre><code>server {\n    listen 80;\n    listen [::]:80;\n    root /var/www/mysub.mydomain.com/html;\n    index index.html index.htm;\n    server_name mysub.mydomain.com;\n    location / {\n            try_files $uri $uri/ =404;\n    }\n}\n</code></pre> <p>Info</p> <p>Obviously replace the root <code>/var/www/mysub.mydomain.com/html</code> with the path to your static content.  Also replace the <code>server_name</code> value <code>mysub.mydomain.com</code> with the domain that is being routed to the root.</p> <p>Enable the site</p> <pre><code>sudo ln -s /etc/nginx/sites-available/mysub.mydomain.com /etc/nginx/sites-enabled/\n</code></pre>","tags":["Ubuntu","Nginx","Web Server","Let's Encrypt","SSL"]},{"location":"home-server/web-server/#install-lets-encrypt-certbot-for-ssl-encryption-https","title":"Install Let's Encrypt Certbot for SSL encryption (HTTPS)","text":"","tags":["Ubuntu","Nginx","Web Server","Let's Encrypt","SSL"]},{"location":"home-server/web-server/#configure-routing-with-your-dns-provider-and-open-ports","title":"Configure routing with your DNS provider and open ports.","text":"<p>This should be similar with all DNS provides but I will share a screenshot of my AWS hosted zone.</p> <p></p> <p>We're going to click <code>Create Record</code> and create a CNAME simple routing record, which will allow us to route our subdomain to our DDNS domain name. (If you haven't set up a DDNS, review the documentation).  Alternatively, you can create an A record but you would have to route to your IP address, which of course, will change eventually.</p>","tags":["Ubuntu","Nginx","Web Server","Let's Encrypt","SSL"]},{"location":"home-server/web-server/#open-port-forwarding-to-your-server-ip-address","title":"Open Port Forwarding to your Server IP Address","text":"<p>Open up port forwarding on your router configuration for 80 and 443 for HTTP and HTTPS traffic.</p> <p></p> <p>Then open the ports on the server's firewall.</p> <pre><code>sudo ufw allow 80\nsudo ufw allow 443\n</code></pre>","tags":["Ubuntu","Nginx","Web Server","Let's Encrypt","SSL"]},{"location":"home-server/web-server/#install-certbot-and-request-a-certificate","title":"Install certbot and request a certificate","text":"<p>We want to make sure nginx uses SSL for all web traffic for a secure connection.</p> <p>Install certbot.</p> <pre><code>sudo apt install certbot python3-certbot-nginx\n</code></pre> <p>Now request a certificate</p> <pre><code>sudo certbot --nginx -d mysub.mydomain.com\n</code></pre> <p>You should see the following</p> <pre><code>Congratulations! You have successfully enabled HTTPS on https://mysub.mydomain.com.\n</code></pre>","tags":["Ubuntu","Nginx","Web Server","Let's Encrypt","SSL"]},{"location":"home-server/web-server/#check-server-block","title":"Check server block","text":"<p>Let's see how the certbot modified our server block.</p> <pre><code>sudo nano mysub.mydomain.com\n</code></pre> <pre><code>server {\n    root /var/www/mysub.mydomain.com/html;\n    index index.html index.htm;\n    server_name mysub.mydomain.com;\n    location / {\n            try_files $uri $uri/ =404;\n    }\n\n    listen [::]:443 ssl ipv6only=on; # managed by Certbot\n    listen 443 ssl; # managed by Certbot\n    ssl_certificate /etc/letsencrypt/live/mysub.mydomain.com/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/mysub.mydomain.com/privkey.pem; # managed by Certbot\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\n\n}\nserver {\n    if ($host = mysub.mydomain.com) {\n        return 301 https://$host$request_uri;\n    } # managed by Certbot\n\n\n    listen 80;\n    listen [::]:80;\n    server_name mysub.mydomain.com;\n    return 404; # managed by Certbot\n}\n</code></pre> <p>Note that we have two server blocks.  The top one, which listens for ssl traffic on 443, and the bottom one which listens for http traffic and redirects it to https.</p>","tags":["Ubuntu","Nginx","Web Server","Let's Encrypt","SSL"]},{"location":"home-server/web-server/#testing","title":"Testing","text":"<p>And there we go!  We now have a secure domain which is routed to our server, converted to https via our Nginx reverse proxy, and ultimately to our static html page we configured.</p> <p></p>","tags":["Ubuntu","Nginx","Web Server","Let's Encrypt","SSL"]},{"location":"home-server/wireguard/","title":"VPN with WireGuard","text":"<p>This documentation will guide you in installing a VPN server on a computer or server that is always running on your network.  Creating a VPN server with WireGuard is a free solution to securing your web traffic and accessing your home network when you are using public wifi. </p>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#1-prerequisites","title":"1. Prerequisites","text":"<p>Before installing WireGuard on the server, we need to ensure we have our server preconfigured.</p>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#11-ensure-system-up-to-date","title":"1.1 Ensure system up to date","text":"<pre><code>sudo apt update &amp;&amp; sudo apt upgrade\n</code></pre>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#12-install-package-iptables-and-net-tools","title":"1.2 Install package <code>iptables</code> and <code>net-tools</code>","text":"<p>We'll need <code>iptables</code> to ensure our VPN clients can connect to the internet from the VPN.  We'll also want <code>net-tools</code> so we can run <code>ifconfig</code> later on.</p> <pre><code>sudo apt install iptables net-tools\n</code></pre>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#13-enable-ip-forwarding","title":"1.3 Enable IP Forwarding","text":"<pre><code>sudo nano /etc/sysctl.conf\n</code></pre> <p>Find <code>net.ipv4.ip_forward=1</code> and <code>net.ipv6.conf.all.forwarding=1</code> and uncomment these.</p> <p>Now verify the changes were saved.</p> <pre><code>sysctl -p\n</code></pre>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#14-check-the-network-interface-name","title":"1.4 Check the Network Interface Name","text":"<pre><code>ifconfig\n</code></pre> <p>The network interface name can be found with <code>ifconfig</code>.  In bold, it is the first word returned on the next line.  </p> <p>root@thomas-HP-Z230-Tower-Workstation:/etc/wireguard# ifconfig eno1: flags=4163  mtu 1500 ... <p>For me the value is <code>eno1</code>.  Note, you will also see your network IP address on the next line, but likely you'll be using a DDNS instead of your IP address.</p>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#2-install-wireguard-on-the-server","title":"2. Install WireGuard on the Server","text":"<pre><code>sudo apt install wireguard\n</code></pre>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#3-configure-wireguard-vpn-server","title":"3. Configure WireGuard VPN Server","text":"","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#31-generate-a-privatepublic-key-pair-for-the-server","title":"3.1 Generate a private/public key pair for the Server.","text":"<p>Navigate to the WireGuard folder:</p> <pre><code>cd /etc/wireguard/\n</code></pre> <p>Now let's create the public and private key for the server.</p> <pre><code>umask 077\nwg genkey | tee privatekey | wg pubkey &gt; publickey\n</code></pre> <p>Now we need to note both the private key and public key.  Print both out and copy them into a text file for later use.</p> <pre><code>cat privatekey\ncat publickey\n</code></pre>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#32-create-wireguard-config-file","title":"3.2 Create WireGuard Config File","text":"<pre><code>sudo nano wg0.conf\n</code></pre> <p>This file will be created and empty.  Go ahead and populate the file with the following:</p> <pre><code>[Interface]\n# A virtual IP address you are giving to your new VPN server\nAddress = 10.0.0.1/24\n\n# The following PostUp commands take effect upon the startup of the server.  The PostDown commands take effect on shutdown of the server.\n\n# Permit forwarding of packets coming from the WireGuard interface to other interfaces.\nPostUp = iptables -A FORWARD -i wg0 -j ACCEPT\n\n# Allow devices connected to the VPN to access the internet through the server's internet connection.\nPostUp = iptables -t nat -A POSTROUTING -o [network interface name] -j MASQUERADE\n\n# Delete the rule that allows traffic forwarding from the WireGuard interface \nPostDown = iptables -D FORWARD -i wg0 -j ACCEPT\n\n# Delete the previous rule allowing devices to connect to the internet\nPostDown = iptables -t nat -D POSTROUTING -o [network interface name] -j MASQUERAD\n\n# Port on the server for the VPN server to listen on\nListenPort = [Choose a port for the VPN server to run]\n\n# Private key we previously generated\nPrivateKey = [Private key previously generated for the VPN server]\n</code></pre> <p>Info</p> <p>Make sure to replace <code>network interface name</code> with the value generated from <code>ifconfig</code>.  Mine was <code>eno1</code>.</p> <p>Go ahead and save and exit the file.</p> <p>Change the permission on the config file so that only we the user can read them.</p> <pre><code>sudo chmod 600 wg0.conf\nsudo chmod 600 privatekey\n</code></pre>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#33-start-and-enable-the-wireguard-vpn-server","title":"3.3 Start and Enable the WireGuard VPN Server","text":"<pre><code>sudo systemctl start wg-quick@wg0\nsudo systemctl enable wg-quick@wg0\n</code></pre> <p>Check the status of the VPN server</p> <pre><code>sudo systemctl status wg-quick@wg0\n</code></pre> <p>It should say active.</p> <p>Verify that the config file <code>wg0</code> is active.</p> <pre><code>wg show wg0\n</code></pre> <p>It should tell you the public key and what port the server is listening on.</p>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#4-open-firewall-port-on-server","title":"4. Open Firewall port on server","text":"<p>Make sure you have the firewall enabled.</p> <pre><code>sudo ufw status\n</code></pre> <p>If not, enable it.</p> <pre><code>sudo ufw enable\n</code></pre> <p>Now, allow traffic to the port that WireGuard is listening on.</p> <pre><code>sudo ufw allow &lt;port that you chose&gt;/udp\n</code></pre> <p>Note</p> <p>Replace <code>&lt;port that you chose&gt;</code> with the port that you entered into the config file</p> <p>Reload the firewall.</p> <pre><code>sudo ufw reload\n</code></pre> <p>You can check the status of the firewall again to confirm that the port has been enabled.</p> <pre><code>sudo ufw status\n</code></pre>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#5-configure-a-client","title":"5. Configure a client","text":"<p>With WireGuard VPN, both the client and the server authenticate each other to prevent man in the middle attacks so the client also needs to generate a key and a config file.  The client file will note the server's public key, and we will have to enable the client on the VPN server with the client's public key.  We will also create a configuration file for the client that will have the necessary details about the server in order to connect to it.</p>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#51-generate-a-privatepublic-key-pair-for-the-client","title":"5.1 Generate a private/public key pair for the client.","text":"<p>We could generate client's public and private key using the same command as before, or, if you are configuring a Windows/Android/Mac client at the moment, we can easily generate the keys and config file using the client application.  You can download the client application here, https://www.wireguard.com/install/, or navigate to your mobile app store.</p> <p>When you open the Desktop client, hit <code>Add Tunnel</code> at the bottom left, and choose an <code>empty tunnel</code>.  This will conveniently create a public and private key for the client and start your config file off.  </p> <p></p>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#52-create-the-client-config-file","title":"5.2 Create the Client config file","text":"<pre><code>[Interface]\nPrivateKey = &lt;private key generated by client application&gt;\nAddress = &lt;a new IP address for this particular client&gt;/24\nDNS = 8.8.8.8, 8.8.4.4\n\n[Peer]\nPublicKey = &lt;public key of VPN server&gt;\nAllowedIPs = 0.0.0.0/0\nEndPoint = &lt;network IP address or DDNS&gt;:&lt;port WireGuard is listening on&gt;\n</code></pre> <p>Replace the place holders</p> <ul> <li><code>&lt;private key generated by client application&gt;</code>: this is prefilled as you can see in the screen shot.</li> <li><code>&lt;a new IP address for this particular client&gt;</code>: I'm just going to increment from the server IP address I created, <code>10.0.0.1</code>, and use <code>192.168.43.100/32</code> for this client.</li> <li><code>&lt;public key of VPN server&gt;</code>:  This is the one we generated by command.</li> <li><code>&lt;network IP address or DDNS&gt;</code>: IP address of your router or your DDNS.  If you simply use the IP address, that can be seen from when we ran ifconfig.  Otherwise, if you haven't already created a DDNS, please see my documentation on how to do so.</li> </ul> <p>Prepare .conf file for mobile app ease</p> <p>If you set up this client on a desktop client, go ahead and save that config file into a file called <code>client.conf</code>.  This makes it super easy to set up your mobile client on Android or iOS, as you can then just import the text file.  Otherwise, you can simply input all of this data into the fields on your mobile app.</p>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#53-authorize-the-new-client","title":"5.3 Authorize the new client","text":"<p>We need two things from the clients configuration including the public key as well as the IP address we created for the client. Again, I'm using <code>192.168.43.100/32</code>.</p> <pre><code>wg set wg0 peer &lt;client public key&gt; allowed-ips &lt;client vpn IP address&gt;\n</code></pre> <p>You can now see all authorized clients with</p> <pre><code>wg show wg0\n</code></pre> <p>wg show wg0</p> <p><pre>myserver:/etc/wireguard# wg show wg0\ninterface: wg0\n  public key: (hidden)\n  private key: (hidden)\n  listening port: (hidden)\n<p>peer: (hidden client public key)\n  endpoint: (hidden)\n  allowed ips: 10.0.0.0/24\n  latest handshake: 1 day, 22 hours, 20 minutes, 1 second ago\n  transfer: 40.77 MiB received, 322.39 MiB sent\n</p>\n\n\n<p>wg0.conf changed</p>\n<p>We also see that a client section was added to wg0.conf</p>\n<pre><code>sudo nano wg0.conf\n</code></pre>\n<p><pre>[Peer]\nPublicKey = (hidden)\nAllowedIPs = 192.168.43.100/32\n</pre></p>\n\n<p>Save the changes.</p>\n<pre><code>wg-quick save wg0\n</code></pre>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"home-server/wireguard/#6-open-port-forwarding-on-your-router","title":"6. Open port forwarding on your Router","text":"<p>On your router configuration page, just make sure you expose and forward the port that your VPN server is routing through, thus enabling the connection to your VPN from outside of your network.</p>\n<p>On an Eero router, for example, you can get there in the mobile app by going to </p>\n<p><code>Settings -&gt; Network Settings -&gt; Reservation and Port Forwarding -&gt; Add a Reservation</code></p>\n<p>After adding a local IP reservation, you can then open whatever ports you need to expose and forward to your home server.  </p>\n<p>You're all set to go on your client now!  You should be able to activate and quickly get on your network.  Please let me know if you have any questions or comments down below!</p>","tags":["Ubuntu","WireGuard","VPN"]},{"location":"projects/espn/discover-api/","title":"How to discover the end points","text":""},{"location":"projects/espn/discover-api/#monitoring-api-calls","title":"Monitoring API Calls","text":"<p>The first thing we want to do to figure out the ESPN Fantasy API is to see how it is loading the web page.  Many single page web applications such as Angular and React load the content to the DOM by means of javascript and api calls.  If this is the case, then the data would likely be fetched in a nicely formated JSON object.  Follow these steps:</p> <p></p> <ul> <li>Open Developer tools using <code>Ctr + Shift + I</code></li> <li>Navigate to the <code>Network</code> tab</li> <li>Reload an ESPN page that shows informatino of interest i.e. <code>Standings</code></li> <li>Monitor the requests looking for interesting end points<ul> <li>Particularly your league ID as this indicates the request is retrieving information specific to your league</li> </ul> </li> <li>Note the request URL<ul> <li>We will import this into Postman shortly</li> </ul> </li> <li>Note the <code>Cookie</code> header in the <code>Request Headers</code><ul> <li>This contains two authentication tokens: <code>espnAuth</code> and <code>espn_s2</code></li> </ul> </li> <li>Another Header of interest is <code>x-fantasy-filter</code> which you'll see if you scroll to the bottom<ul> <li>This shows us some detail as to how ESPN filters information for the request</li> </ul> </li> </ul>"},{"location":"projects/espn/discover-api/#replicating-calls-in-postman","title":"Replicating calls in Postman","text":"<p>Lets now copy the request URL into postman and add our Cookie authentication header.  Look at this beautiful json response! </p> <p></p> <p>Note</p> <p>The value for you <code>Cookie</code> Header should look like the following. Replace <code>VALUE</code> with the actual values present in your browser request header. <pre><code>espnAuth={\"swid\":\"{VALUE}\"};espn_s2=VALUE;\n</code></pre></p> <p>Now that you know how to find how the browser requested the data the ultimately was displayed into the DOM, click on other parts of the web application such as your <code>League Settings</code>, a match box score, or a player, and you may notice different values being set for the <code>view</code> parameter, such as <code>mRoster</code>, <code>mBoxScore</code> etc.</p> <p>Tip</p> <p>When we isolate each view we will see what league data each view contributes</p>"},{"location":"projects/espn/game-cast-json-views/","title":"Game Info JSON Views","text":"<p>We can query upcoming and live game information at the following endpoint:</p> <p><code>https://site.api.espn.com/apis/fantasy/v2/games/ffl/games</code></p> <p>The above end poitn we give us all game information for the current week.  If we want a different week, we need to specify the <code>dates</code> parameter, with a date range value in the format of <code>yyyyMMdd-yyyyMMdd</code>.  That looks like this:</p> <p><code>https://site.api.espn.com/apis/fantasy/v2/games/ffl/games?dates=20230928-20231003</code> </p> <p>which is a Thursday through a Tuesday.</p> <p>The API response has two arrays called <code>statistics</code> and <code>events</code>.  </p> <p>Info</p> <p><code>statistics</code>: An array of Statlines for each player that accumulated some stat <code>events</code>: An array of <code>Event</code></p> <ul> <li><code>Event</code>: contains information like the current <code>period</code>, <code>clock</code>, <code>competitionId</code>, <code>percentComplete</code>, <code>lastPlay</code>, current <code>drive</code> information, info on all <code>scoringPlays</code>, <code>odds</code>, <code>fullStatus</code>.</li> </ul> <p>Let's breack down the full json view starting with the overview.  The api will return the following </p> <pre><code>{\n    \"statistics\": [\n        ...\n    ],\n    \"events\": [\n        ...\n    ]\n}\n</code></pre>"},{"location":"projects/espn/game-cast-json-views/#statistics","title":"<code>statistics</code>","text":"<p>The <code>statistics</code> array contains objects that have fields showing the total value for each stat id for a player.  At the time of writing, I'm not certain on what these objects actually map to.  We see objects with the same proTeamId and positionId, so you would think these represent player stats, however, the <code>id</code> value is not a player id, so I'm not sure how to know who it maps to.  </p> <pre><code>{\n        \"statistics\": [\n        {\n            \"id\": 15235,\n            \"gameId\": \"401547426\",\n            \"proTeamId\": \"25\",\n            \"positionId\": \"13\",\n            \"stats\": {\n                \"210\": 1.0,\n                \"107\": 1.0,\n                \"108\": 4.0,\n                \"109\": 5.0,\n                \"110\": 1.0,\n                \"111\": 1.0,\n                \"155\": 1\n            }\n        },\n}\n</code></pre>"},{"location":"projects/espn/game-cast-json-views/#events","title":"<code>events</code>","text":"<p>For our purposes, we're only really interested in the game state, because this is going to help us out later when it comes to determine the percent chance of beating our opponent. </p> <p>Here is an event that is currently in play, scheduled, and previous.</p> Event Currently in play <pre><code>\"events\": [\n        {\n            \"id\": \"401547442\",\n            \"competitionId\": \"401547442\",\n            \"uid\": \"s:20~l:28~e:401547442~c:401547442\",\n            \"date\": \"2023-09-29T00:15:00Z\",\n            \"timeValid\": true,\n            \"period\": 4,\n            \"clock\": \"4:18\",\n            \"links\": [],\n            \"status\": \"in\",\n            \"summary\": \"4:18 - 4th\",\n            \"lastPlay\": {\n                \"playId\": \"4015474423777\",\n                \"playType\": {\n                    \"id\": \"74\",\n                    \"text\": \"Official Timeout\",\n                    \"abbreviation\": \"Off TO\"\n                },\n                \"text\": \"Timeout at 04:18.\",\n                \"shortText\": \"Timeout\",\n                \"scoringPlay\": false,\n                \"players\": [],\n                \"period\": 4,\n                \"clock\": 258.0,\n                \"homeScore\": 17,\n                \"awayScore\": 34,\n                \"start\": {\n                    \"down\": 2,\n                    \"distance\": 5,\n                    \"yardLine\": 86,\n                    \"yardsToEndzone\": 14,\n                    \"team\": \"9\"\n                },\n                \"end\": {\n                    \"down\": 2,\n                    \"distance\": 5,\n                    \"yardLine\": 86,\n                    \"yardsToEndzone\": 14,\n                    \"downDistanceText\": \"2nd &amp; 5 at DET 14\",\n                    \"shortDownDistanceText\": \"2nd &amp; 5\",\n                    \"possessionText\": \"DET 14\",\n                    \"team\": \"9\"\n                }\n            },\n            \"drive\": {\n                \"id\": \"40154744221\",\n                \"start\": {\n                    \"period\": {\n                        \"type\": \"quarter\",\n                        \"number\": 4\n                    },\n                    \"clock\": {\n                        \"value\": 360.0,\n                        \"displayValue\": \"6:00\"\n                    },\n                    \"yardLine\": 17,\n                    \"text\": \"GB 17\"\n                },\n                \"teamId\": \"9\",\n                \"numberOfPlays\": 7,\n                \"isRedZone\": true,\n                \"plays\": [\n                    {\n                        \"playId\": \"4015474423588\",\n                        \"playType\": {\n                            \"id\": \"53\",\n                            \"text\": \"Kickoff\",\n                            \"abbreviation\": \"K\"\n                        },\n                        \"text\": \"J.Fox kicks 69 yards from DET 35 to GB -4. K.Nixon to GB 17 for 21 yards (C.Reynolds).\",\n                        \"shortText\": \"Jack Fox 69 Yd Kickoff , Keisean Nixon 21 Yd Return\",\n                        \"scoringPlay\": false,\n                        \"players\": [\n                            {\n                                \"playerId\": \"3916370\",\n                                \"order\": 1,\n                                \"position\": \"23\"\n                            },\n                            {\n                                \"playerId\": \"4259493\",\n                                \"order\": 2,\n                                \"position\": \"29\"\n                            },\n                            {\n                                \"playerId\": \"4421446\",\n                                \"order\": 3,\n                                \"position\": \"9\"\n                            }\n                        ],\n                        \"period\": 4,\n                        \"clock\": 360.0,\n                        \"homeScore\": 17,\n                        \"awayScore\": 34,\n                        \"sequenceNumber\": \"358800\",\n                        \"start\": {\n                            \"down\": 0,\n                            \"distance\": 0,\n                            \"yardLine\": 65,\n                            \"yardsToEndzone\": 65,\n                            \"team\": \"8\"\n                        },\n                        \"end\": {\n                            \"down\": 1,\n                            \"distance\": 10,\n                            \"yardLine\": 17,\n                            \"yardsToEndzone\": 83,\n                            \"downDistanceText\": \"1st &amp; 10 at GB 17\",\n                            \"shortDownDistanceText\": \"1st &amp; 10\",\n                            \"possessionText\": \"GB 17\",\n                            \"team\": \"9\"\n                        },\n                        \"wallclock\": \"2023-09-29T02:57:37Z\"\n                    },\n                    ... // additional plays\n                ]\n            },\n            \"percentComplete\": 92.83,\n            \"scoringPlays\": [\n                {\n                    \"playId\": \"401547442213\",\n                    \"playType\": {\n                        \"id\": \"59\",\n                        \"text\": \"Field Goal Good\",\n                        \"abbreviation\": \"FG\"\n                    },\n                    \"text\": \"A.Carlson 34 yard field goal is GOOD, Center-M.Orzech, Holder-D.Whelan.\",\n                    \"shortText\": \"Anders Carlson Made 34 Yd Field Goal\",\n                    \"scoringPlay\": true,\n                    \"players\": [\n                        {\n                            \"playerId\": \"4242519\",\n                            \"order\": 1,\n                            \"position\": \"22\"\n                        },\n                        {\n                            \"playerId\": \"4242519\",\n                            \"order\": 2,\n                            \"position\": \"22\"\n                        }\n                    ],\n                    \"period\": 1,\n                    \"clock\": 719.0,\n                    \"homeScore\": 3,\n                    \"awayScore\": 0,\n                    \"sequenceNumber\": \"21300\",\n                    \"start\": {\n                        \"down\": 4,\n                        \"distance\": 10,\n                        \"yardLine\": 84,\n                        \"yardsToEndzone\": 16,\n                        \"downDistanceText\": \"4th &amp; 10 at DET 16\",\n                        \"shortDownDistanceText\": \"4th &amp; 10\",\n                        \"possessionText\": \"DET 16\",\n                        \"team\": \"9\"\n                    },\n                    \"end\": {\n                        \"down\": -1,\n                        \"distance\": 10,\n                        \"yardLine\": 100,\n                        \"yardsToEndzone\": 65,\n                        \"team\": \"9\"\n                    },\n                    \"wallclock\": \"2023-09-29T00:20:45Z\"\n                },\n                ... // Additional scoring plays\n            ],\n            \"odds\": \"DET -2.5\",\n            \"fullStatus\": {\n                \"clock\": 258.0,\n                \"displayClock\": \"4:18\",\n                \"period\": 4,\n                \"type\": {\n                    \"id\": \"2\",\n                    \"name\": \"STATUS_IN_PROGRESS\",\n                    \"state\": \"in\",\n                    \"completed\": false,\n                    \"description\": \"In Progress\",\n                    \"detail\": \"4:18 - 4th Quarter\",\n                    \"shortDetail\": \"4:18 - 4th\"\n                }\n            },\n            \"link\": \"\",\n            \"broadcasts\": [\n                {\n                    \"type\": \"Web\",\n                    \"lang\": \"en\",\n                    \"region\": \"us\",\n                    \"typeId\": 4,\n                    \"isNational\": true,\n                    \"shortName\": \"PRIME VIDEO\"\n                }\n            ],\n            \"broadcast\": \"PRIME VIDEO\",\n            \"fantasySource\": {\n                \"id\": \"2\",\n                \"description\": \"feed\",\n                \"state\": \"full\"\n            },\n            \"competitors\": [\n                {\n                    \"id\": \"9\",\n                    \"type\": \"team\",\n                    \"homeAway\": \"home\",\n                    \"abbreviation\": \"GB\",\n                    \"score\": 17.0,\n                    \"winner\": false,\n                    \"record\": \"2-1\",\n                    \"name\": \"Packers\",\n                    \"lineup\": []\n                },\n                {\n                    \"id\": \"8\",\n                    \"type\": \"team\",\n                    \"homeAway\": \"away\",\n                    \"abbreviation\": \"DET\",\n                    \"score\": 34.0,\n                    \"winner\": false,\n                    \"record\": \"2-1\",\n                    \"name\": \"Lions\",\n                    \"lineup\": []\n                }\n            ]\n        },\n        ...\n]\n</code></pre> Scheduled Event <pre><code>\"events\": [\n    {\n            \"id\": \"401547227\",\n            \"competitionId\": \"401547227\",\n            \"uid\": \"s:20~l:28~e:401547227~c:401547227\",\n            \"date\": \"2023-10-01T13:30:00Z\",\n            \"timeValid\": true,\n            \"period\": 0,\n            \"clock\": \"0:00\",\n            \"links\": [\n                {\n                    \"language\": \"en-US\",\n                    \"rel\": [\n                        \"summary\",\n                        \"desktop\",\n                        \"event\"\n                    ],\n                    \"href\": \"https://www.espn.com/nfl/game/_/gameId/401547227\",\n                    \"text\": \"Gamecast\",\n                    \"shortText\": \"Summary\",\n                    \"isExternal\": false,\n                    \"isPremium\": false\n                }\n            ],\n            \"status\": \"pre\",\n            \"summary\": \"10/1 - 9:30 AM EDT\",\n            \"lastPlay\": {},\n            \"percentComplete\": 0,\n            \"scoringPlays\": [],\n            \"odds\": \"JAX -3.0\",\n            \"fullStatus\": {\n                \"clock\": 0.0,\n                \"displayClock\": \"0:00\",\n                \"period\": 0,\n                \"type\": {\n                    \"id\": \"1\",\n                    \"name\": \"STATUS_SCHEDULED\",\n                    \"state\": \"pre\",\n                    \"completed\": false,\n                    \"description\": \"Scheduled\",\n                    \"detail\": \"Sun, October 1st at 9:30 AM EDT\",\n                    \"shortDetail\": \"10/1 - 9:30 AM EDT\"\n                }\n            },\n            \"link\": \"https://www.espn.com/nfl/game/_/gameId/401547227\",\n            \"broadcasts\": [\n                {\n                    \"type\": \"Web\",\n                    \"lang\": \"en\",\n                    \"region\": \"us\",\n                    \"typeId\": 4,\n                    \"isNational\": true,\n                    \"shortName\": \"ESPN+\"\n                }\n            ],\n            \"broadcast\": \"ESPN+\",\n            \"fantasySource\": {\n                \"id\": \"0\",\n                \"description\": \"none\",\n                \"state\": \"none\"\n            },\n            \"competitors\": [\n                {\n                    \"id\": \"30\",\n                    \"type\": \"team\",\n                    \"homeAway\": \"home\",\n                    \"abbreviation\": \"JAX\",\n                    \"score\": \"\",\n                    \"winner\": false,\n                    \"record\": \"1-2\",\n                    \"name\": \"Jaguars\",\n                    \"lineup\": []\n                },\n                {\n                    \"id\": \"1\",\n                    \"type\": \"team\",\n                    \"homeAway\": \"away\",\n                    \"abbreviation\": \"ATL\",\n                    \"score\": \"\",\n                    \"winner\": false,\n                    \"record\": \"2-1\",\n                    \"name\": \"Falcons\",\n                    \"lineup\": []\n                }\n            ]\n        },\n        ...\n]\n</code></pre> Completed Event <pre><code>\"events\": [\n    {\n            \"id\": \"401547426\",\n            \"competitionId\": \"401547426\",\n            \"uid\": \"s:20~l:28~e:401547426~c:401547426\",\n            \"date\": \"2023-09-22T00:15:00Z\",\n            \"timeValid\": true,\n            \"period\": 4,\n            \"clock\": \"0:00\",\n            \"links\": [\n                {\n                    \"language\": \"en-US\",\n                    \"rel\": [\n                        \"summary\",\n                        \"desktop\",\n                        \"event\"\n                    ],\n                    \"href\": \"https://www.espn.com/nfl/game/_/gameId/401547426\",\n                    \"text\": \"Gamecast\",\n                    \"shortText\": \"Summary\",\n                    \"isExternal\": false,\n                    \"isPremium\": false\n                }\n            ],\n            \"status\": \"post\",\n            \"summary\": \"Final\",\n            \"lastPlay\": {\n                \"playId\": \"4015474264282\",\n                \"playType\": {\n                    \"id\": \"66\",\n                    \"text\": \"End of Game\",\n                    \"abbreviation\": \"EG\"\n                },\n                \"text\": \"END GAME\",\n                \"shortText\": \"End Quarter 4\",\n                \"scoringPlay\": false,\n                \"players\": [],\n                \"period\": 4,\n                \"clock\": 0.0,\n                \"homeScore\": 30,\n                \"awayScore\": 12,\n                \"start\": {\n                    \"down\": 0,\n                    \"distance\": 0,\n                    \"yardLine\": 0,\n                    \"yardsToEndzone\": 0\n                },\n                \"end\": {\n                    \"down\": 2,\n                    \"distance\": 11,\n                    \"yardLine\": 59,\n                    \"yardsToEndzone\": 41,\n                    \"team\": \"25\"\n                }\n            },\n            \"drive\": {\n                \"id\": \"40154742621\",\n                \"start\": {\n                    \"period\": {\n                        \"type\": \"quarter\",\n                        \"number\": 4\n                    },\n                    \"clock\": {\n                        \"value\": 121.0,\n                        \"displayValue\": \"2:01\"\n                    },\n                    \"yardLine\": 49,\n                    \"text\": \"SF 49\"\n                },\n                \"end\": {\n                    \"period\": {\n                        \"type\": \"quarter\",\n                        \"number\": 4\n                    },\n                    \"yardLine\": 60,\n                    \"text\": \"NYG 40\"\n                },\n                \"teamId\": \"25\",\n                \"numberOfPlays\": 4,\n                \"isRedZone\": false,\n                \"plays\": [\n                    {\n                        \"playId\": \"4015474264187\",\n                        \"playType\": {\n                            \"id\": \"5\",\n                            \"text\": \"Rush\",\n                            \"abbreviation\": \"RUSH\"\n                        },\n                        \"text\": \"J.Mason right end to NYG 46 for 5 yards (I.Simmons).\",\n                        \"shortText\": \"Jordan Mason 5 Yd Rush\",\n                        \"scoringPlay\": false,\n                        \"players\": [\n                            {\n                                \"playerId\": \"4360569\",\n                                \"order\": 1,\n                                \"position\": \"9\"\n                            },\n                            {\n                                \"playerId\": \"4035462\",\n                                \"order\": 2,\n                                \"position\": \"36\"\n                            }\n                        ],\n                        \"period\": 4,\n                        \"clock\": 121.0,\n                        \"homeScore\": 30,\n                        \"awayScore\": 12,\n                        \"sequenceNumber\": \"418700\",\n                        \"start\": {\n                            \"down\": 1,\n                            \"distance\": 10,\n                            \"yardLine\": 49,\n                            \"yardsToEndzone\": 51,\n                            \"downDistanceText\": \"1st &amp; 10 at SF 49\",\n                            \"shortDownDistanceText\": \"1st &amp; 10\",\n                            \"possessionText\": \"SF 49\",\n                            \"team\": \"25\"\n                        },\n                        \"end\": {\n                            \"down\": 2,\n                            \"distance\": 11,\n                            \"yardLine\": 54,\n                            \"yardsToEndzone\": 46,\n                            \"downDistanceText\": \"2nd &amp; 11 at NYG 46\",\n                            \"shortDownDistanceText\": \"2nd &amp; 11\",\n                            \"possessionText\": \"NYG 46\",\n                            \"team\": \"25\"\n                        },\n                        \"wallclock\": \"2023-09-22T03:22:05Z\"\n                    },\n                    ...\n                ]\n            },\n            \"percentComplete\": 100,\n            \"scoringPlays\": [\n                {\n                    \"playId\": \"401547426380\",\n                    \"playType\": {\n                        \"id\": \"59\",\n                        \"text\": \"Field Goal Good\",\n                        \"abbreviation\": \"FG\"\n                    },\n                    \"text\": \"J.Moody 28 yard field goal is GOOD, Center-T.Pepper, Holder-M.Wishnowsky.\",\n                    \"shortText\": \"Jake Moody 28 Yd Field Goal  \",\n                    \"scoringPlay\": true,\n                    \"players\": [\n                        {\n                            \"playerId\": \"4372066\",\n                            \"order\": 1,\n                            \"position\": \"22\"\n                        },\n                        {\n                            \"playerId\": \"4372066\",\n                            \"order\": 2,\n                            \"position\": \"22\"\n                        }\n                    ],\n                    \"period\": 1,\n                    \"clock\": 524.0,\n                    \"homeScore\": 3,\n                    \"awayScore\": 0,\n                    \"sequenceNumber\": \"38000\",\n                    \"start\": {\n                        \"down\": 4,\n                        \"distance\": 10,\n                        \"yardLine\": 89,\n                        \"yardsToEndzone\": 11,\n                        \"downDistanceText\": \"4th &amp; 10 at NYG 11\",\n                        \"shortDownDistanceText\": \"4th &amp; 10\",\n                        \"possessionText\": \"NYG 11\",\n                        \"team\": \"25\"\n                    },\n                    \"end\": {\n                        \"down\": -1,\n                        \"distance\": 10,\n                        \"yardLine\": 100,\n                        \"yardsToEndzone\": 65,\n                        \"team\": \"25\"\n                    },\n                    \"wallclock\": \"2023-09-22T00:26:06Z\"\n                },\n                ... // More scoring plays\n            ],\n            \"odds\": \"SF -10.5\",\n            \"fullStatus\": {\n                \"clock\": 0.0,\n                \"displayClock\": \"0:00\",\n                \"period\": 4,\n                \"type\": {\n                    \"id\": \"3\",\n                    \"name\": \"STATUS_FINAL\",\n                    \"state\": \"post\",\n                    \"completed\": true,\n                    \"description\": \"Final\",\n                    \"detail\": \"Final\",\n                    \"shortDetail\": \"Final\"\n                }\n            },\n            \"link\": \"https://www.espn.com/nfl/game/_/gameId/401547426\",\n            \"broadcasts\": [\n                {\n                    \"type\": \"Web\",\n                    \"lang\": \"en\",\n                    \"region\": \"us\",\n                    \"typeId\": 4,\n                    \"isNational\": true,\n                    \"shortName\": \"PRIME VIDEO\"\n                }\n            ],\n            \"broadcast\": \"PRIME VIDEO\",\n            \"fantasySource\": {\n                \"id\": \"3\",\n                \"description\": \"scrubbed\",\n                \"state\": \"full\"\n            },\n            \"competitors\": [\n                {\n                    \"id\": \"25\",\n                    \"type\": \"team\",\n                    \"homeAway\": \"home\",\n                    \"abbreviation\": \"SF\",\n                    \"score\": 30.0,\n                    \"winner\": true,\n                    \"record\": \"3-0\",\n                    \"name\": \"49ers\",\n                    \"lineup\": []\n                },\n                {\n                    \"id\": \"19\",\n                    \"type\": \"team\",\n                    \"homeAway\": \"away\",\n                    \"abbreviation\": \"NYG\",\n                    \"score\": 12.0,\n                    \"winner\": false,\n                    \"record\": \"1-2\",\n                    \"name\": \"Giants\",\n                    \"lineup\": []\n                }\n            ]\n        },,\n        ...\n]\n</code></pre>"},{"location":"projects/espn/league-info-json-views/","title":"League Info JSON Views","text":"<p>Let's break down each json view and the data that is actually returned. </p>"},{"location":"projects/espn/league-info-json-views/#league-information","title":"League Information","text":"<p>We have the following json views regarding our <code>League</code></p> <ul> <li>(No view paramter)<ul> <li>Basic league information including the League id, current scoring period, basic <code>team</code> information, and basic <code>member</code> information</li> </ul> </li> <li>mStatus</li> <li>mSettings</li> <li>mTeam</li> <li>mStandings</li> <li>mRoster</li> <li>mMatchupScore</li> <li>mScoreboard</li> <li>mBoxScore</li> <li>modular</li> <li> <p>mLiveScoring</p> </li> <li> <p>mSchedule</p> </li> <li>mNav</li> </ul>"},{"location":"projects/espn/league-info-json-views/#no-view-parameter","title":"(No view parameter)","text":"<p>With no view parameter, we see a high level view of the <code>League</code> object and some of its fields like <code>id</code>, <code>members</code>, <code>teams</code> and just a fiew other parameters.  Nothing particularly detailed. <pre><code>{\n    \"gameId\": 1,\n    \"id\": 695660,\n    \"members\": [\n        {\n            \"displayName\": VALUE,\n            \"id\": GUID,\n            \"isLeagueManager\": false\n        }, ...\n    ],\n    \"scoringPeriodId\": 4,\n    \"seasonId\": 2023,\n    \"segmentId\": 0,\n    \"settings\": {\n        \"name\": \"AHS Alum\"\n    },\n    \"status\": {\n        \"currentMatchupPeriod\": 4,\n        \"isActive\": true,\n        \"latestScoringPeriod\": 4\n    },\n    \"teams\": [\n        {\n            \"abbrev\": \"DICK\",\n            \"id\": 1,\n            \"location\": \"Richard\",\n            \"nickname\": \"Buttana\",\n            \"owners\": [\n                GUID\n            ]\n        },...\n    ]\n}\n</code></pre></p>"},{"location":"projects/espn/league-info-json-views/#mstatus","title":"mStatus","text":"<p>mStatus fleshes out the <code>Status</code> field we got a taste of in our previous search.  I think the most interesting parameters here include <code>finalScoringPeriod</code>, <code>previousSeasons</code>, <code>teamsJoined</code>. </p> <p>Info</p> <p>The only unique field to this view is <code>lastUpdateInfo</code>.  Otherwise, the entire status object is returned in other views such as <code>mTeam</code>.</p> <p>In any case, the full response can be seen below so we know exactly what the view returns.</p> mStatus json view <pre><code>{\n    \"draftDetail\": {\n        \"drafted\": true,\n        \"inProgress\": false\n    },\n    \"gameId\": 1,\n    \"id\": 695660,\n    \"scoringPeriodId\": 4,\n    \"seasonId\": 2023,\n    \"segmentId\": 0,\n    \"status\": {\n        \"activatedDate\": 1690375312281,\n        \"createdAsLeagueType\": 0,\n        \"currentLeagueType\": 0,\n        \"currentMatchupPeriod\": 4,\n        \"finalScoringPeriod\": 17,\n        \"firstScoringPeriod\": 1,\n        \"isActive\": true,\n        \"isExpired\": false,\n        \"isFull\": true,\n        \"isPlayoffMatchupEdited\": true,\n        \"isToBeDeleted\": false,\n        \"isViewable\": true,\n        \"isWaiverOrderEdited\": false,\n        \"lastUpdateInfo\": {\n            \"clientAddress\": null,\n            \"platform\": \"lm-processor\",\n            \"source\": \"NightlyLeagueUpdateTaskProcessor\"\n        },\n        \"latestScoringPeriod\": 4,\n        \"previousSeasons\": [\n            2014,\n            2015,\n            2016,\n            2017,\n            2018,\n            2019,\n            2020,\n            2021,\n            2022\n        ],\n        \"standingsUpdateDate\": 1695714108553,\n        \"teamsJoined\": 16,\n        \"transactionScoringPeriod\": 4,\n        \"waiverLastExecutionDate\": 1695714107284,\n        \"waiverProcessStatus\": {\n            \"2023-09-05T07:31:30.748+0000\": 3,\n            \"2023-09-13T08:41:11.851+0000\": 7,\n            \"2023-09-14T07:43:12.340+0000\": 1,\n            \"2023-09-20T07:40:58.921+0000\": 9\n        }\n    }\n}\n</code></pre>"},{"location":"projects/espn/league-info-json-views/#msettings","title":"mSettings","text":"<p>You guessed it - mSettings fleshes out the <code>settings</code> object within the league.  Here we will get the following sub settings objects: <code>acquisitionSettings</code>, <code>draftSettings</code>, <code>financeSettings</code>, <code>rosterSettings</code>, <code>scheduleSettings</code>, <code>scoringSettings</code>, <code>tradeSettings</code>.</p> <p>For our use case, <code>scoringSettings</code> may be useful if we need to actually apply these settings to stats to calculate fantasy points.  However, as well will see, this isn't really necessary as we will see appliedStats fields that have already made these calculations on the back end.</p> mSettings json view <pre><code>{\n    \"draftDetail\": {\n        \"drafted\": true,\n        \"inProgress\": false\n    },\n    \"gameId\": 1,\n    \"id\": 695660,\n    \"scoringPeriodId\": 4,\n    \"seasonId\": 2023,\n    \"segmentId\": 0,\n    \"settings\": {\n        \"acquisitionSettings\": {\n            \"acquisitionBudget\": 100,\n            \"acquisitionLimit\": -1,\n            \"acquisitionType\": \"WAIVERS_TRADITIONAL\",\n            \"isUsingAcquisitionBudget\": false,\n            \"matchupAcquisitionLimit\": 0.0,\n            \"matchupLimitPerScoringPeriod\": false,\n            \"minimumBid\": 1,\n            \"waiverHours\": 24,\n            \"waiverOrderReset\": true,\n            \"waiverProcessDays\": [\n                \"FRIDAY\",\n                \"WEDNESDAY\",\n                \"SUNDAY\",\n                \"THURSDAY\",\n                \"MONDAY\",\n                \"SATURDAY\"\n            ],\n            \"waiverProcessHour\": 11\n        },\n        \"draftSettings\": {\n            \"auctionBudget\": 200,\n            \"availableDate\": 1693789200000,\n            \"date\": 1693792800000,\n            \"isTradingEnabled\": false,\n            \"keeperCount\": 0,\n            \"keeperCountFuture\": 0,\n            \"keeperOrderType\": \"TRADITIONAL\",\n            \"leagueSubType\": \"NONE\",\n            \"orderType\": \"DRAFT_START\",\n            \"pickOrder\": [\n                21,\n                10,\n                2,\n                5,\n                22,\n                1,\n                9,\n                11,\n                16,\n                23,\n                19,\n                18,\n                20,\n                6,\n                4,\n                3\n            ],\n            \"timePerSelection\": 60,\n            \"type\": \"SNAKE\"\n        },\n        \"financeSettings\": {\n            \"entryFee\": 0.0,\n            \"miscFee\": 0.0,\n            \"perLoss\": 0.0,\n            \"perTrade\": 0.0,\n            \"playerAcquisition\": 0.0,\n            \"playerDrop\": 0.0,\n            \"playerMoveToActive\": 0.0,\n            \"playerMoveToIR\": 0.0\n        },\n        \"isCustomizable\": true,\n        \"isPublic\": false,\n        \"name\": \"AHS Alum\",\n        \"restrictionType\": \"NONE\",\n        \"rosterSettings\": {\n            \"isBenchUnlimited\": true,\n            \"isUsingUndroppableList\": true,\n            \"lineupLocktimeType\": \"INDIVIDUAL_GAME\",\n            \"lineupSlotCounts\": {\n                \"0\": 1,\n                \"1\": 0,\n                \"2\": 2,\n                \"3\": 0,\n                \"4\": 2,\n                \"5\": 0,\n                \"6\": 1,\n                \"7\": 0,\n                \"8\": 0,\n                \"9\": 0,\n                \"10\": 0,\n                \"11\": 0,\n                \"12\": 0,\n                \"13\": 0,\n                \"14\": 0,\n                \"15\": 0,\n                \"16\": 1,\n                \"17\": 1,\n                \"18\": 0,\n                \"19\": 0,\n                \"20\": 5,\n                \"21\": 1,\n                \"22\": 0,\n                \"23\": 1,\n                \"24\": 0\n            },\n            \"lineupSlotStatLimits\": {},\n            \"moveLimit\": -1,\n            \"positionLimits\": {\n                \"0\": 0,\n                \"1\": 3,\n                \"2\": 8,\n                \"3\": 8,\n                \"4\": 3,\n                \"5\": 3,\n                \"6\": 0,\n                \"7\": 0,\n                \"8\": 0,\n                \"9\": 0,\n                \"10\": 0,\n                \"11\": 0,\n                \"12\": 0,\n                \"13\": 0,\n                \"14\": 0,\n                \"15\": -1,\n                \"16\": 3,\n                \"17\": 0\n            },\n            \"rosterLocktimeType\": \"INDIVIDUAL_GAME\",\n            \"universeIds\": [\n                0\n            ]\n        },\n        \"scheduleSettings\": {\n            \"divisions\": [\n                {\n                    \"id\": 0,\n                    \"name\": \"Barton Hills Zilker\",\n                    \"size\": 4\n                },\n                {\n                    \"id\": 1,\n                    \"name\": \"Oak Hill Travis Country\",\n                    \"size\": 4\n                },\n                {\n                    \"id\": 2,\n                    \"name\": \"Band Nerds\",\n                    \"size\": 4\n                },\n                {\n                    \"id\": 3,\n                    \"name\": \"The Pit Orchestra\",\n                    \"size\": 4\n                }\n            ],\n            \"matchupPeriodCount\": 14,\n            \"matchupPeriodLength\": 1,\n            \"matchupPeriods\": {\n                \"1\": [\n                    1\n                ],\n                \"2\": [\n                    2\n                ],\n                \"3\": [\n                    3\n                ],\n                \"4\": [\n                    4\n                ],\n                \"5\": [\n                    5\n                ],\n                \"6\": [\n                    6\n                ],\n                \"7\": [\n                    7\n                ],\n                \"8\": [\n                    8\n                ],\n                \"9\": [\n                    9\n                ],\n                \"10\": [\n                    10\n                ],\n                \"11\": [\n                    11\n                ],\n                \"12\": [\n                    12\n                ],\n                \"13\": [\n                    13\n                ],\n                \"14\": [\n                    14\n                ],\n                \"15\": [\n                    15\n                ],\n                \"16\": [\n                    16\n                ],\n                \"17\": [\n                    17\n                ]\n            },\n            \"periodTypeId\": 1,\n            \"playoffMatchupPeriodLength\": 1,\n            \"playoffSeedingRule\": \"TOTAL_POINTS_SCORED\",\n            \"playoffSeedingRuleBy\": 0,\n            \"playoffTeamCount\": 6\n        },\n        \"scoringSettings\": {\n            \"allowOutOfPositionScoring\": false,\n            \"homeTeamBonus\": 0,\n            \"matchupTieRule\": \"NONE\",\n            \"matchupTieRuleBy\": 0,\n            \"playerRankType\": \"STANDARD\",\n            \"playoffHomeTeamBonus\": 3,\n            \"playoffMatchupTieRule\": \"NONE\",\n            \"playoffMatchupTieRuleBy\": 0,\n            \"scoringItems\": [\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": -1.0,\n                    \"statId\": 68\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": -1.0,\n                    \"statId\": 72\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": -1.0\n                    },\n                    \"statId\": 122\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": -3.0\n                    },\n                    \"statId\": 134\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 6.0,\n                    \"statId\": 25\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 1.0\n                    },\n                    \"statId\": 131\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 1.0\n                    },\n                    \"statId\": 106\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": -5.0\n                    },\n                    \"statId\": 135\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": -7.0\n                    },\n                    \"statId\": 136\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 6.0,\n                    \"statId\": 43\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 6.0,\n                    \"pointsOverrides\": {\n                        \"16\": 6.0\n                    },\n                    \"statId\": 102\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.1,\n                    \"statId\": 24\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 6.0,\n                    \"pointsOverrides\": {\n                        \"16\": 6.0\n                    },\n                    \"statId\": 103\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 7.0\n                    },\n                    \"statId\": 128\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 6.0,\n                    \"pointsOverrides\": {\n                        \"16\": 6.0\n                    },\n                    \"statId\": 101\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 6.0,\n                    \"pointsOverrides\": {\n                        \"16\": 6.0\n                    },\n                    \"statId\": 104\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": -7.0\n                    },\n                    \"statId\": 125\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 5.0\n                    },\n                    \"statId\": 129\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": -5.0\n                    },\n                    \"statId\": 124\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": -1.0,\n                    \"statId\": 85\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.04,\n                    \"statId\": 3\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 1.0,\n                    \"statId\": 86\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": -1.0\n                    },\n                    \"statId\": 133\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.1,\n                    \"statId\": 42\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": -1.0,\n                    \"statId\": 88\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 3.0\n                    },\n                    \"statId\": 130\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 5.0,\n                    \"statId\": 4\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": -3.0\n                    },\n                    \"statId\": 123\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 5.0\n                    },\n                    \"statId\": 90\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 2.0,\n                    \"pointsOverrides\": {\n                        \"16\": 2.0\n                    },\n                    \"statId\": 206\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 7.0\n                    },\n                    \"statId\": 89\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.04,\n                    \"pointsOverrides\": {\n                        \"16\": 0.01\n                    },\n                    \"statId\": 114\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 1.0,\n                    \"pointsOverrides\": {\n                        \"16\": 1.0\n                    },\n                    \"statId\": 209\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 3.0\n                    },\n                    \"statId\": 95\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 6.0,\n                    \"pointsOverrides\": {\n                        \"16\": 6.0\n                    },\n                    \"statId\": 93\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 2.0\n                    },\n                    \"statId\": 98\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 3.0\n                    },\n                    \"statId\": 91\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 2.0\n                    },\n                    \"statId\": 96\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 2.0,\n                    \"statId\": 19\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 2.0\n                    },\n                    \"statId\": 97\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": -2.0,\n                    \"statId\": 20\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 6.0,\n                    \"statId\": 63\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 0.1\n                    },\n                    \"statId\": 112\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 3.0,\n                    \"statId\": 80\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 2.0,\n                    \"statId\": 26\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 4.0,\n                    \"statId\": 77\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 1.0\n                    },\n                    \"statId\": 92\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 1.0\n                    },\n                    \"statId\": 99\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.04,\n                    \"pointsOverrides\": {\n                        \"16\": 0.04\n                    },\n                    \"statId\": 115\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 2.0,\n                    \"statId\": 44\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 5.0,\n                    \"statId\": 201\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 0.0,\n                    \"pointsOverrides\": {\n                        \"16\": 0.1\n                    },\n                    \"statId\": 113\n                },\n                {\n                    \"isReverseItem\": false,\n                    \"leagueRanking\": 0.0,\n                    \"leagueTotal\": 0.0,\n                    \"points\": 5.0,\n                    \"statId\": 198\n                }\n            ],\n            \"scoringType\": \"H2H_POINTS\"\n        },\n        \"size\": 16,\n        \"tradeSettings\": {\n            \"allowOutOfUniverse\": false,\n            \"deadlineDate\": 1701417600000,\n            \"max\": -1,\n            \"revisionHours\": 48,\n            \"vetoVotesRequired\": 4\n        }\n    },\n    \"status\": {\n        \"activatedDate\": 1690375312281,\n        \"createdAsLeagueType\": 0,\n        \"currentLeagueType\": 0,\n        \"currentMatchupPeriod\": 4,\n        \"finalScoringPeriod\": 17,\n        \"firstScoringPeriod\": 1,\n        \"isActive\": true,\n        \"isExpired\": false,\n        \"isFull\": true,\n        \"isPlayoffMatchupEdited\": true,\n        \"isToBeDeleted\": false,\n        \"isViewable\": true,\n        \"isWaiverOrderEdited\": false,\n        \"latestScoringPeriod\": 4,\n        \"previousSeasons\": [\n            2014,\n            2015,\n            2016,\n            2017,\n            2018,\n            2019,\n            2020,\n            2021,\n            2022\n        ],\n        \"standingsUpdateDate\": 1695714108553,\n        \"teamsJoined\": 16,\n        \"transactionScoringPeriod\": 4,\n        \"waiverLastExecutionDate\": 1695714107284,\n        \"waiverProcessStatus\": {\n            \"2023-09-05T07:31:30.748+0000\": 3,\n            \"2023-09-13T08:41:11.851+0000\": 7,\n            \"2023-09-14T07:43:12.340+0000\": 1,\n            \"2023-09-20T07:40:58.921+0000\": 9\n        }\n    }\n}\n</code></pre>"},{"location":"projects/espn/league-info-json-views/#mteam","title":"mTeam","text":"<p>mTeam gives us a few more fields about the <code>members</code> such as <code>firstName</code>, <code>lastName</code>, and <code>notificationSettings</code>.  As expected though, we see a lot more information about the <code>teams</code> array including:</p> <ul> <li>currentProjectedRank</li> <li>divisionId</li> <li>draftDayProjectedRank</li> <li>draftStrategy</li> <li>pendingTransactions<ul> <li>waiver claims, or pending trades.  In this case you will see my claims (today is Tuesday)</li> </ul> </li> <li>playoffSeed</li> <li>points</li> <li>primaryOwner</li> <li>rankCalculatedFinal</li> <li>rankFinal</li> <li>record</li> <li>transaction counter<ul> <li>details number of roster transactions</li> </ul> </li> <li>valuesByStat<ul> <li>a <code>StatLine</code> object showing total values for the season of passing yards, passing TDs, etc</li> </ul> </li> </ul> mTeam json view <pre><code>{\n    \"draftDetail\": {\n        \"drafted\": true,\n        \"inProgress\": false\n    },\n    \"gameId\": 1,\n    \"id\": 695660,\n    \"members\": [\n        {\n            \"displayName\": \"Wildebeast214\",\n            \"firstName\": \"Thomas\",\n            \"id\": GUID,\n            \"lastName\": \"Wilde\",\n            \"notificationSettings\": [\n                {\n                    \"enabled\": true,\n                    \"id\": \"1fbc7858-9606-4338-897b-fdabcca555a9\",\n                    \"type\": \"TEAM_PLAYER_STARTBENCH\"\n                },...\n            ]\n        } ...\n    ],\n    \"scoringPeriodId\": 4,\n    \"seasonId\": 2023,\n    \"segmentId\": 0,\n    \"status\": {\n        \"activatedDate\": 1690375312281,\n        \"createdAsLeagueType\": 0,\n        \"currentLeagueType\": 0,\n        \"currentMatchupPeriod\": 4,\n        \"finalScoringPeriod\": 17,\n        \"firstScoringPeriod\": 1,\n        \"isActive\": true,\n        \"isExpired\": false,\n        \"isFull\": true,\n        \"isPlayoffMatchupEdited\": true,\n        \"isToBeDeleted\": false,\n        \"isViewable\": true,\n        \"isWaiverOrderEdited\": false,\n        \"latestScoringPeriod\": 4,\n        \"previousSeasons\": [\n            2014,\n            2015,\n            ...\n        ],\n        \"standingsUpdateDate\": 1695714108553,\n        \"teamsJoined\": 16,\n        \"transactionScoringPeriod\": 4,\n        \"waiverLastExecutionDate\": 1695714107284,\n        \"waiverProcessStatus\": {\n            \"2023-09-05T07:31:30.748+0000\": 3,\n            \"2023-09-13T08:41:11.851+0000\": 7,\n            \"2023-09-14T07:43:12.340+0000\": 1,\n            \"2023-09-20T07:40:58.921+0000\": 9\n        }\n    },\n    \"teams\": [\n        {\n            \"abbrev\": \"DICK\",\n            \"currentProjectedRank\": 1,\n            \"divisionId\": 3,\n            \"draftDayProjectedRank\": 15,\n            \"draftStrategy\": {\n                \"futureKeeperPlayerIds\": [],\n                \"keeperPlayerIds\": []\n            },\n            \"id\": 1,\n            \"isActive\": false,\n            \"location\": \"Richard\",\n            \"logo\": \"https://s3.amazonaws.com/wildebeastmedia.com/richard+buttana.png\",\n            \"logoType\": \"CUSTOM_VALID\",\n            \"name\": \"Richard Buttana\",\n            \"nickname\": \"Buttana\",\n            \"owners\": [\n                GUID\n            ],\n            \"pendingTransactions\": [\n                {\n                    \"bidAmount\": 0,\n                    \"executionType\": \"EXECUTE\",\n                    \"id\": \"3370e5c7-74d9-470c-9874-02b6d1685e3c\",\n                    \"isActingAsTeamOwner\": false,\n                    \"isLeagueManager\": false,\n                    \"isPending\": true,\n                    \"items\": [\n                        {\n                            \"fromLineupSlotId\": -1,\n                            \"fromTeamId\": 0,\n                            \"isKeeper\": false,\n                            \"overallPickNumber\": 0,\n                            \"playerId\": 4429025,\n                            \"toLineupSlotId\": -1,\n                            \"toTeamId\": 1,\n                            \"type\": \"ADD\"\n                        },\n                        {\n                            \"fromLineupSlotId\": 20,\n                            \"fromTeamId\": 1,\n                            \"isKeeper\": false,\n                            \"overallPickNumber\": 0,\n                            \"playerId\": 3924365,\n                            \"toLineupSlotId\": -1,\n                            \"toTeamId\": 0,\n                            \"type\": \"DROP\"\n                        }\n                    ],\n                    \"memberId\": GUID,\n                    \"processDate\": 1695798000000,\n                    \"proposedDate\": 1695752700012,\n                    \"rating\": 0,\n                    \"scoringPeriodId\": 4,\n                    \"skipTransactionCounters\": false,\n                    \"status\": \"PENDING\",\n                    \"subOrder\": 2,\n                    \"teamId\": 1,\n                    \"type\": \"WAIVER\"\n                }, ...\n            ],\n            \"playoffSeed\": 3,\n            \"points\": 302.28999999999996,\n            \"pointsAdjusted\": 0.0,\n            \"pointsDelta\": 0.0,\n            \"primaryOwner\": GUID,\n            \"rankCalculatedFinal\": 0,\n            \"rankFinal\": 0,\n            \"record\": {\n                \"away\": {\n                    \"gamesBack\": 0.0,\n                    \"losses\": 0,\n                    \"percentage\": 1.0,\n                    \"pointsAgainst\": 0.0,\n                    \"pointsFor\": 0.0,\n                    \"streakLength\": 1,\n                    \"streakType\": \"WIN\",\n                    \"ties\": 0,\n                    \"wins\": 1\n                },\n                \"division\": {\n                    \"gamesBack\": 0.0,\n                    \"losses\": 0,\n                    \"percentage\": 1.0,\n                    \"pointsAgainst\": 0.0,\n                    \"pointsFor\": 0.0,\n                    \"streakLength\": 3,\n                    \"streakType\": \"WIN\",\n                    \"ties\": 0,\n                    \"wins\": 3\n                },\n                \"home\": {\n                    \"gamesBack\": 0.0,\n                    \"losses\": 0,\n                    \"percentage\": 1.0,\n                    \"pointsAgainst\": 0.0,\n                    \"pointsFor\": 0.0,\n                    \"streakLength\": 2,\n                    \"streakType\": \"WIN\",\n                    \"ties\": 0,\n                    \"wins\": 2\n                },\n                \"overall\": {\n                    \"gamesBack\": 0.0,\n                    \"losses\": 0,\n                    \"percentage\": 1.0,\n                    \"pointsAgainst\": 215.28,\n                    \"pointsFor\": 302.28999999999996,\n                    \"streakLength\": 3,\n                    \"streakType\": \"WIN\",\n                    \"ties\": 0,\n                    \"wins\": 3\n                }\n            },\n            \"tradeBlock\": {},\n            \"transactionCounter\": {\n                \"acquisitionBudgetSpent\": 0,\n                \"acquisitions\": 6,\n                \"drops\": 8,\n                \"matchupAcquisitionTotals\": {\n                    \"1\": 1,\n                    \"2\": 3,\n                    \"3\": 2\n                },\n                \"misc\": 0,\n                \"moveToActive\": 11,\n                \"moveToIR\": 2,\n                \"paid\": 0.0,\n                \"teamCharges\": 0.0,\n                \"trades\": 0\n            },\n            \"valuesByStat\": {\n                \"128\": 0.0,\n                \"129\": 0.0,\n                \"130\": 2.0,\n                \"3\": 1024.0,\n                \"131\": 0.0,\n                \"4\": 8.0,\n                \"133\": 0.0,\n                \"134\": 0.0,\n                \"135\": 0.0,\n                \"136\": 0.0,\n                \"19\": 0.0,\n                \"20\": 2.0,\n                \"24\": 651.0,\n                \"25\": 1.0,\n                \"26\": 0.0,\n                \"42\": 670.0,\n                \"43\": 3.0,\n                \"44\": 0.0,\n                \"63\": 0.0,\n                \"68\": 5.0,\n                \"198\": 2.0,\n                \"72\": 1.0,\n                \"201\": 0.0,\n                \"77\": 4.0,\n                \"206\": 0.0,\n                \"80\": 1.0,\n                \"209\": 0.0,\n                \"85\": 1.0,\n                \"86\": 4.0,\n                \"88\": 0.0,\n                \"89\": 0.0,\n                \"90\": 0.0,\n                \"91\": 2.0,\n                \"92\": 0.0,\n                \"93\": 0.0,\n                \"95\": 1.0,\n                \"96\": 4.0,\n                \"97\": 0.0,\n                \"98\": 0.0,\n                \"99\": 12.0,\n                \"101\": 0.0,\n                \"102\": 0.0,\n                \"103\": 0.0,\n                \"104\": 0.0,\n                \"106\": 4.0,\n                \"112\": 15.0,\n                \"113\": 8.0,\n                \"114\": 21.0,\n                \"115\": 43.0,\n                \"122\": 0.0,\n                \"123\": 0.0,\n                \"124\": 0.0,\n                \"125\": 0.0\n            },\n            \"waiverRank\": 14\n        }, ...\n    ]\n}\n</code></pre>"},{"location":"projects/espn/league-info-json-views/#mstandings","title":"mStandings","text":"<p>mStandings adds a <code>currentSimulationResults</code> object to our <code>teams</code> array.  This object includes </p> <ul> <li><code>divisionWinPct</code>: Percent chance to win division</li> <li><code>playoffPct</code>    : Percent chance to make playoffs</li> <li><code>rank</code>          : Projected final rank</li> <li><code>modeRecord</code>    : An object that shows our project final record</li> </ul> <p>We also see a <code>schedule</code> object which is an array of <code>match</code>'s.  This view gives us an overview of each <code>match</code>, i.e. home team id and points and away team id and points.</p> mStandings json view <pre><code>{\n    \"draftDetail\": {\n        \"drafted\": true,\n        \"inProgress\": false\n    },\n    \"gameId\": 1,\n    \"id\": 695660,\n    \"schedule\": [\n        {\n            \"away\": {\n                \"gamesPlayed\": 0,\n                \"teamId\": 3,\n                \"totalPoints\": 48.06\n            },\n            \"home\": {\n                \"gamesPlayed\": 0,\n                \"teamId\": 1,\n                \"totalPoints\": 91.05\n            },\n            \"matchupPeriodId\": 1\n        },\n        ...,\n        // Note: future matches also shown\n        {\n            \"away\": {\n                \"gamesPlayed\": 0,\n                \"teamId\": 3,\n                \"totalPoints\": 0.0\n            },\n            \"home\": {\n                \"gamesPlayed\": 0,\n                \"teamId\": 18,\n                \"totalPoints\": 0.0\n            },\n            \"matchupPeriodId\": 5\n        },...\n    ],\n    \"scoringPeriodId\": 4,\n    \"seasonId\": 2023,\n    \"segmentId\": 0,\n    \"status\": { OMMITTED FOR BREVITY\n    },\n    \"teams\": [\n        {\n            \"currentSimulationResults\": {\n                \"divisionWinPct\": 0.6205,\n                \"modeRecord\": {\n                    \"gamesBack\": 0.0,\n                    \"losses\": 5,\n                    \"percentage\": 0.0,\n                    \"pointsAgainst\": 0.0,\n                    \"pointsFor\": 0.0,\n                    \"streakLength\": 0,\n                    \"streakType\": \"NONE\",\n                    \"ties\": 0,\n                    \"wins\": 9\n                },\n                \"playoffClinchType\": \"UNKNOWN\",\n                \"playoffPct\": 0.7415,\n                \"rank\": 1\n            },\n            \"id\": 1,\n            \"playoffClinchType\": \"UNKNOWN\"\n        }, ...\n    ]\n}\n</code></pre>"},{"location":"projects/espn/league-info-json-views/#mroster","title":"mRoster","text":"<p>mRoster populates the <code>roster</code> object for each team which of course describes each player on each teams roster.  The way this is structured is as follows</p> <ul> <li><code>Roster</code><ul> <li>some fields...</li> <li>List&lt;<code>RosterEntry</code>&gt;</li> </ul> </li> <li><code>Roster Entry</code><ul> <li>slot information, acquisition, etc.</li> <li><code>PlayerPoolEntry</code></li> </ul> </li> <li><code>PlayerPoolEntry</code><ul> <li>Info about the player in regards to the league, i.e. <code>status</code>: <code>ONTEAM</code></li> <li><code>Player</code></li> </ul> </li> <li><code>Player</code>     Everything you could want to know about the player</li> </ul> <p>Info</p> <p>If you want to query <code>PlayerPoolEntry</code> specifically, check out kona_player_card json view. </p> <p>It should be noted that the <code>stats</code> array within the player shows <code>appliedStats</code> which are calculated fantasy points for each of the actual stats.  Therefore, this <code>player</code> object contains more fields than would be expected from simply retrieving the <code>player</code> from the espn api.  When we create the SpringBoot entity, we may represent this as <code>FantasyPlayer extends Player</code> and the <code>FantasyPlayer</code> object would also be defined by this particular league id.</p> <p>Let's break down the <code>stats</code> array, which is an array of what I call <code>StatLine</code> objects.  Here we will see the StatLine objects have unique <code>id</code> values that designate the the time periord and whether the stat line is a projection or actual.  The <code>id</code> value is a concatenation of <code>statSourceId</code> + <code>statSplitTypeId</code> + <code>externalId</code>.  </p> <ul> <li><code>statSourceId</code> can have either <code>0</code> meaning <code>actual</code> or <code>1</code> meaning projection.  </li> <li><code>statSplitTypeId</code> can have <code>0</code> which means <code>year</code>, <code>1</code> which means <code>week</code>, or <code>2</code> which I have not yet discerned.</li> <li><code>externalId</code><ul> <li>The year if a year stat</li> <li>The year plus scoringPeriod for projected stats</li> <li>Seemingly a unique identifier for the actual week stats.</li> </ul> </li> </ul> <p>Here is a break down of what each <code>id</code> represents.  </p> <ul> <li><code>002023</code><ul> <li><code>\"externalId\": \"2023\"</code></li> <li><code>\"statSourceId\": 0</code></li> <li><code>\"statSplitTypeId\": 0</code></li> <li>These are the total stats so far in 2023 (current year)</li> </ul> </li> <li><code>122023</code><ul> <li>I have not actually deduced what these stats represent</li> </ul> </li> <li><code>002022</code><ul> <li>These are the total stats for 2022 (previous year)</li> </ul> </li> <li><code>102023</code><ul> <li>These are the projected stats for 2023 (current year)</li> </ul> </li> <li><code>102022</code><ul> <li>These were the projected stats for 2022 (previous year)</li> </ul> </li> <li><code>1120233</code><ul> <li>These are the Week 3 projected stats (previous week)</li> </ul> </li> <li><code>01401547438</code><ul> <li>These are the Week 3 actual stats (previous week)</li> </ul> </li> <li><code>1120234</code><ul> <li>These are the Week 4 projected stats (coming week)</li> </ul> </li> </ul> <p>Note</p> <p>Even though we don't know how the <code>id</code> is built for the week actuals, we could still query this using the <code>scoringPeriodId</code>, <code>statSourceId</code>, and <code>statSplitTypeId</code>.</p> <p>Tip</p> <p>Other GET params can be added here including <code>scoringPeriodId</code> and <code>rosterForTeamId</code>.</p> <ul> <li><code>scoringPeriodId</code>: Can be used to get the actual and projected stats for a particular week, i.e. Week 2.</li> <li><code>rosterForTeamId</code>: This shortens the response to only the <code>Roster</code> for a particular team.</li> </ul> mRoster JSON view <pre><code>{\n    \"draftDetail\": {\n        \"drafted\": true,\n        \"inProgress\": false\n    },\n    \"gameId\": 1,\n    \"id\": 695660,\n    \"scoringPeriodId\": 4,\n    \"seasonId\": 2023,\n    \"segmentId\": 0,\n    \"status\": { ... // Ommitted\n    },\n    \"teams\": [\n        {\n            \"id\": 1,\n            \"roster\": {\n                \"appliedStatTotal\": 128.48000000000002,\n                \"entries\": [\n                    {\n                        \"acquisitionDate\": 1693799220114,\n                        \"acquisitionType\": \"DRAFT\",\n                        \"injuryStatus\": \"NORMAL\",\n                        \"lineupSlotId\": 6,\n                        \"pendingTransactionIds\": null,\n                        \"playerId\": 15847,\n                        \"playerPoolEntry\": {\n                            \"appliedStatTotal\": 12.9,\n                            \"id\": 15847,\n                            \"keeperValue\": 2,\n                            \"keeperValueFuture\": 1,\n                            \"lineupLocked\": false,\n                            \"onTeamId\": 1,\n                            \"player\": {\n                                \"active\": true,\n                                \"defaultPositionId\": 4,\n                                \"draftRanksByRankType\": {\n                                    \"STANDARD\": {\n                                        \"auctionValue\": 57,\n                                        \"published\": false,\n                                        \"rank\": 5,\n                                        \"rankSourceId\": 0,\n                                        \"rankType\": \"STANDARD\",\n                                        \"slotId\": 0\n                                    },\n                                    \"PPR\": {\n                                        \"auctionValue\": 57,\n                                        \"published\": false,\n                                        \"rank\": 5,\n                                        \"rankSourceId\": 0,\n                                        \"rankType\": \"PPR\",\n                                        \"slotId\": 0\n                                    }\n                                },\n                                \"droppable\": false,\n                                \"eligibleSlots\": [\n                                    5,\n                                    6,\n                                    23,\n                                    7,\n                                    20,\n                                    21\n                                ],\n                                \"firstName\": \"Travis\",\n                                \"fullName\": \"Travis Kelce\",\n                                \"id\": 15847,\n                                \"injured\": false,\n                                \"injuryStatus\": \"ACTIVE\",\n                                \"lastName\": \"Kelce\",\n                                \"lastNewsDate\": 1695601802000,\n                                \"lastVideoDate\": 1695607613000,\n                                \"outlooks\": {\n                                    \"outlooksByWeek\": {\n                                        \"1\": \"It's amazing to consider that Kelce has finished six of the last seven seasons as the top fantasy tight end. A hyperextended knee suffered in Tuesday's practice, however, puts Kelce's status up in the air against the Lions. Monitor the news headed into Thursday night's kickoff.\",\n                                        \"2\": \"Given how close to playing it seems Kelce was last week and the extended rest since that Thursday game, the mustached-man is poised to pounce on a young Jacksonville defense.\",\n                                        \"3\": \"Kelce made his 2023 debut in Week 2 after a knee injury kept him out of the opener. He ended up with four catches for 26 yards and a touchdown in a 17-9 win over the Jaguars. The Chiefs get the Bears at home in Week 3 and Chicago's defense hasn't done much of anything thus far. Kelce should be primed for a big day at home on Sunday afternoon.\",\n                                        \"4\": \"After being somewhat limited in his return from injury in Week 2, Kelce swiftly regained top tight end status with seven catches for 69 yards in Week 3, including a tailor-made three-yard scoring strike in the third quarter, bringing those in attendance much joy. Kelce tops the tight end charts again in Week 4 when the Chiefs visit the Jets.\"\n                                    }\n                                },\n                                \"ownership\": {\n                                    \"auctionValueAverage\": 53.481751824817515,\n                                    \"averageDraftPosition\": 7.273834185938359,\n                                    \"percentChange\": -0.0011883992198846727,\n                                    \"percentOwned\": 99.93245561484213,\n                                    \"percentStarted\": 98.40130614492573\n                                },\n                                \"proTeamId\": 12,\n                                \"rankings\": {\n                                    \"0\": [\n                                        {\n                                            \"auctionValue\": 0,\n                                            \"published\": true,\n                                            \"rank\": 1,\n                                            \"rankSourceId\": 9,\n                                            \"rankType\": \"PPR\",\n                                            \"slotId\": 6\n                                        }, ...\n                                    ],\n                                    \"1\": [],\n                                    \"2\": [\n                                        {\n                                            \"auctionValue\": 0,\n                                            \"published\": true,\n                                            \"rank\": 1,\n                                            \"rankSourceId\": 9,\n                                            \"rankType\": \"PPR\",\n                                            \"slotId\": 6\n                                        },...\n                                    ],\n                                    \"3\": [\n                                        {\n                                            \"auctionValue\": 0,\n                                            \"published\": true,\n                                            \"rank\": 1,\n                                            \"rankSourceId\": 9,\n                                            \"rankType\": \"PPR\",\n                                            \"slotId\": 6\n                                        }, ...\n                                    ],\n                                    \"4\": [\n                                        {\n                                            \"auctionValue\": 0,\n                                            \"published\": true,\n                                            \"rank\": 1,\n                                            \"rankSourceId\": 9,\n                                            \"rankType\": \"PPR\",\n                                            \"slotId\": 6\n                                        }, ...\n                                    ]\n                                },\n                                \"seasonOutlook\": \"Kelce is fresh off a dominant 2022 season in which he led the tight end position in all fantasy-relevant categories and scored 100.9 more fantasy points than the next-closest player at the position. Kelce set new career-best marks in targets, receptions and TDs and has now finished no lower than second among TEs in catches, yards and fantasy points each of the past seven seasons. Incredibly, Kelce was a top-10 fantasy scorer in 76% of his games, whereas only two other tight ends were over 50%. Kansas City didn't make any major offseason adds at wideout, so Kelce remains locked in as Patrick Mahomes' top target. Kelce is the clear-cut No. 1 TE in fantasy and the 33-year-old should be selected in the middle of the first round in drafts.\",\n                                \"stats\": [\n                                    {\n                                        \"appliedAverage\": 10.75,\n                                        \"appliedStats\": {\n                                            \"42\": 9.5,\n                                            \"43\": 12.0\n                                        },\n                                        \"appliedTotal\": 21.5,\n                                        \"externalId\": \"2023\",\n                                        \"id\": \"002023\",\n                                        \"proTeamId\": 0,\n                                        \"scoringPeriodId\": 0,\n                                        \"seasonId\": 2023,\n                                        \"statSourceId\": 0,\n                                        \"statSplitTypeId\": 0,\n                                        \"stats\": {\n                                            \"41\": 11.0,\n                                            \"42\": 95.0,\n                                            \"43\": 2.0,\n                                            \"47\": 18.0,\n                                            \"48\": 8.0,\n                                            \"49\": 4.0,\n                                            \"50\": 3.0,\n                                            \"210\": 2.0,\n                                            \"51\": 1.0,\n                                            \"53\": 11.0,\n                                            \"213\": 5.0,\n                                            \"54\": 1.0,\n                                            \"183\": 2.0,\n                                            \"58\": 17.0,\n                                            \"59\": 35.0,\n                                            \"155\": 2.0,\n                                            \"60\": 8.63636364,\n                                            \"61\": 47.5,\n                                            \"158\": 12.0\n                                        }\n                                    },\n                                    {\n                                        \"appliedAverage\": 11.490647893764288,\n                                        \"appliedStats\": {\n                                            \"68\": -1.111583956,\n                                            \"72\": -0.618897562,\n                                            \"24\": 0.7513780767,\n                                            \"25\": 0.989157522,\n                                            \"42\": 103.608106,\n                                            \"26\": 0.016962604,\n                                            \"43\": 56.46344792399999,\n                                            \"44\": 0.74115409,\n                                            \"63\": 0.029345814\n                                        },\n                                        \"appliedTotal\": 160.86907051270003,\n                                        \"externalId\": \"2023\",\n                                        \"id\": \"122023\",\n                                        \"proTeamId\": 0,\n                                        \"scoringPeriodId\": 0,\n                                        \"seasonId\": 2023,\n                                        \"statSourceId\": 1,\n                                        \"statSplitTypeId\": 2,\n                                        \"stats\": {\n                                            \"23\": 2.988330708,\n                                            \"24\": 7.513780767,\n                                            \"25\": 0.164859587,\n                                            \"26\": 0.008481302,\n                                            \"27\": 1.0,\n                                            \"35\": 0.005491231,\n                                            \"36\": 0.003843861,\n                                            \"37\": 1.24341E-4,\n                                            \"38\": 4.24327E-6,\n                                            \"39\": 2.51437391,\n                                            \"40\": 0.536698626,\n                                            \"42\": 1036.08106,\n                                            \"43\": 9.410574654,\n                                            \"44\": 0.370577045,\n                                            \"45\": 0.18871946,\n                                            \"46\": 0.123328167,\n                                            \"47\": 207.0,\n                                            \"48\": 103.0,\n                                            \"49\": 51.0,\n                                            \"50\": 41.0,\n                                            \"51\": 20.0,\n                                            \"53\": 89.55446972,\n                                            \"54\": 17.0,\n                                            \"55\": 8.0,\n                                            \"56\": 3.576782082,\n                                            \"57\": 0.110622126,\n                                            \"58\": 123.1237595,\n                                            \"60\": 11.56928363,\n                                            \"61\": 74.00579002,\n                                            \"62\": 0.379058348,\n                                            \"63\": 0.004890969,\n                                            \"66\": 0.035894532,\n                                            \"67\": 1.075689424,\n                                            \"68\": 1.111583956,\n                                            \"70\": 0.016511485,\n                                            \"71\": 0.602386078,\n                                            \"72\": 0.618897562,\n                                            \"73\": 0.618897562,\n                                            \"210\": 14.0,\n                                            \"212\": 2.264503458,\n                                            \"213\": 51.8847794\n                                        }\n                                    },\n                                    {\n                                        \"appliedAverage\": 12.13529411764706,\n                                        \"appliedStats\": {\n                                            \"68\": -1.0,\n                                            \"72\": -1.0,\n                                            \"24\": 0.5,\n                                            \"42\": 133.8,\n                                            \"43\": 72.0,\n                                            \"44\": 2.0\n                                        },\n                                        \"appliedTotal\": 206.3,\n                                        \"externalId\": \"2022\",\n                                        \"id\": \"002022\",\n                                        \"proTeamId\": 0,\n                                        \"scoringPeriodId\": 0,\n                                        \"seasonId\": 2022,\n                                        \"statSourceId\": 0,\n                                        \"statSplitTypeId\": 0,\n                                        \"stats\": {\n                                            \"23\": 2.0,\n                                            \"24\": 5.0,\n                                            \"39\": 2.5,\n                                            \"40\": 0.29411765,\n                                            \"41\": 110.0,\n                                            \"42\": 1338.0,\n                                            \"43\": 12.0,\n                                            \"44\": 1.0,\n                                            \"47\": 262.0,\n                                            \"48\": 126.0,\n                                            \"49\": 58.0,\n                                            \"50\": 46.0,\n                                            \"51\": 20.0,\n                                            \"52\": 6.0,\n                                            \"53\": 110.0,\n                                            \"54\": 15.0,\n                                            \"55\": 2.0,\n                                            \"56\": 6.0,\n                                            \"58\": 152.0,\n                                            \"59\": 648.0,\n                                            \"60\": 12.16363636,\n                                            \"61\": 78.70588235,\n                                            \"67\": 1.0,\n                                            \"68\": 1.0,\n                                            \"71\": 1.0,\n                                            \"72\": 1.0,\n                                            \"73\": 1.0,\n                                            \"108\": 2.0,\n                                            \"109\": 2.0,\n                                            \"155\": 14.0,\n                                            \"156\": 3.0,\n                                            \"158\": 74.0,\n                                            \"183\": 8.0,\n                                            \"184\": 2.0,\n                                            \"186\": 2.0,\n                                            \"210\": 17.0,\n                                            \"213\": 75.0\n                                        }\n                                    },\n                                    {\n                                        \"appliedAverage\": 11.824199424285714,\n                                        \"appliedStats\": {\n                                            \"68\": -1.176153911,\n                                            \"72\": -0.654538485,\n                                            \"24\": 1.358639976,\n                                            \"25\": 2.410928928,\n                                            \"42\": 107.0965893,\n                                            \"26\": 0.043933748,\n                                            \"43\": 55.565732280000006,\n                                            \"44\": 0.862609642,\n                                            \"63\": 0.031050462\n                                        },\n                                        \"appliedTotal\": 165.53879194,\n                                        \"externalId\": \"2023\",\n                                        \"id\": \"102023\",\n                                        \"proTeamId\": 0,\n                                        \"scoringPeriodId\": 0,\n                                        \"seasonId\": 2023,\n                                        \"statSourceId\": 1,\n                                        \"statSplitTypeId\": 0,\n                                        \"stats\": {\n                                            \"23\": 3.419791636,\n                                            \"24\": 13.58639976,\n                                            \"25\": 0.401821488,\n                                            \"26\": 0.021966874,\n                                            \"27\": 2.0,\n                                            \"28\": 1.0,\n                                            \"35\": 0.00628401,\n                                            \"36\": 0.004398807,\n                                            \"37\": 4.10219E-4,\n                                            \"38\": 1.39992E-5,\n                                            \"39\": 3.972873557,\n                                            \"40\": 0.962369983,\n                                            \"42\": 1070.965893,\n                                            \"43\": 9.26095538,\n                                            \"44\": 0.431304821,\n                                            \"45\": 0.211463495,\n                                            \"46\": 0.138191394,\n                                            \"47\": 214.0,\n                                            \"48\": 107.0,\n                                            \"49\": 53.0,\n                                            \"50\": 42.0,\n                                            \"51\": 21.0,\n                                            \"53\": 94.49865715,\n                                            \"54\": 18.0,\n                                            \"55\": 9.0,\n                                            \"56\": 3.252048847,\n                                            \"57\": 0.10057883,\n                                            \"58\": 128.0626205,\n                                            \"60\": 11.33313345,\n                                            \"61\": 75.86008407,\n                                            \"62\": 0.453271695,\n                                            \"63\": 0.005175077,\n                                            \"66\": 0.041077053,\n                                            \"67\": 1.135076858,\n                                            \"68\": 1.176153911,\n                                            \"70\": 0.018895444,\n                                            \"71\": 0.635643041,\n                                            \"72\": 0.654538485,\n                                            \"73\": 0.654538485,\n                                            \"210\": 14.11764706,\n                                            \"212\": 2.916179038,\n                                            \"213\": 53.77726794\n                                        }\n                                    },\n                                    {\n                                        \"appliedAverage\": 8.774414761143749,\n                                        \"appliedStats\": {\n                                            \"68\": -0.91224375,\n                                            \"72\": -0.509012438,\n                                            \"24\": 0.7134166963,\n                                            \"25\": 1.4354572079999999,\n                                            \"42\": 97.30215108,\n                                            \"26\": 0.01947259,\n                                            \"43\": 41.81034978,\n                                            \"44\": 0.506961774,\n                                            \"63\": 0.024083238\n                                        },\n                                        \"appliedTotal\": 140.39063617829999,\n                                        \"externalId\": \"2022\",\n                                        \"id\": \"102022\",\n                                        \"proTeamId\": 0,\n                                        \"scoringPeriodId\": 0,\n                                        \"seasonId\": 2022,\n                                        \"statSourceId\": 1,\n                                        \"statSplitTypeId\": 0,\n                                        \"stats\": {\n                                            \"23\": 1.784783634,\n                                            \"24\": 7.134166963,\n                                            \"25\": 0.239242868,\n                                            \"26\": 0.009736295,\n                                            \"27\": 1.0,\n                                            \"35\": 0.003276317,\n                                            \"36\": 0.002293422,\n                                            \"37\": 7.95E-5,\n                                            \"38\": 2.71E-6,\n                                            \"39\": 3.997216708,\n                                            \"40\": 0.444252155,\n                                            \"42\": 973.0215108,\n                                            \"43\": 6.96839163,\n                                            \"44\": 0.253480887,\n                                            \"45\": 0.206009451,\n                                            \"46\": 0.134627177,\n                                            \"47\": 194.0,\n                                            \"48\": 97.0,\n                                            \"49\": 48.0,\n                                            \"50\": 38.0,\n                                            \"51\": 19.0,\n                                            \"53\": 86.50713219,\n                                            \"54\": 17.0,\n                                            \"55\": 8.0,\n                                            \"56\": 2.343468438,\n                                            \"57\": 0.072478405,\n                                            \"58\": 118.7592554,\n                                            \"60\": 11.24787617,\n                                            \"61\": 60.59108309,\n                                            \"62\": 0.263217182,\n                                            \"63\": 0.004013873,\n                                            \"66\": 0.018440621,\n                                            \"67\": 0.893803129,\n                                            \"68\": 0.91224375,\n                                            \"70\": 0.008482685,\n                                            \"71\": 0.500529753,\n                                            \"72\": 0.509012438,\n                                            \"73\": 0.509012438,\n                                            \"210\": 16.05882353\n                                        }\n                                    },\n                                    {\n                                        \"appliedStats\": {\n                                            \"68\": -0.07548465,\n                                            \"72\": -0.041979593,\n                                            \"24\": 0.0569742836,\n                                            \"25\": 0.083897556,\n                                            \"42\": 7.3469394900000005,\n                                            \"26\": 0.00142154,\n                                            \"43\": 4.693743942,\n                                            \"44\": 0.061347176,\n                                            \"63\": 0.001992\n                                        },\n                                        \"appliedTotal\": 12.1288517446,\n                                        \"externalId\": \"20233\",\n                                        \"id\": \"1120233\",\n                                        \"proTeamId\": 0,\n                                        \"scoringPeriodId\": 3,\n                                        \"seasonId\": 2023,\n                                        \"statSourceId\": 1,\n                                        \"statSplitTypeId\": 1,\n                                        \"stats\": {\n                                            \"23\": 0.242941915,\n                                            \"24\": 0.569742836,\n                                            \"25\": 0.013982926,\n                                            \"26\": 7.1077E-4,\n                                            \"35\": 4.46534E-4,\n                                            \"36\": 3.12573E-4,\n                                            \"37\": 1.0E-5,\n                                            \"38\": 3.42E-7,\n                                            \"39\": 2.345181297,\n                                            \"40\": 0.569742836,\n                                            \"42\": 73.4693949,\n                                            \"43\": 0.782290657,\n                                            \"44\": 0.030673588,\n                                            \"45\": 0.015333527,\n                                            \"46\": 0.01002046,\n                                            \"47\": 14.0,\n                                            \"48\": 7.0,\n                                            \"49\": 3.0,\n                                            \"50\": 2.0,\n                                            \"51\": 1.0,\n                                            \"53\": 6.041388568,\n                                            \"54\": 1.0,\n                                            \"56\": 0.251401146,\n                                            \"57\": 0.00778,\n                                            \"58\": 8.438543881,\n                                            \"60\": 12.16101134,\n                                            \"61\": 73.4693949,\n                                            \"62\": 0.031384358,\n                                            \"63\": 3.32E-4,\n                                            \"66\": 0.002918113,\n                                            \"67\": 0.072566538,\n                                            \"68\": 0.07548465,\n                                            \"70\": 0.001342332,\n                                            \"71\": 0.040637261,\n                                            \"72\": 0.041979593,\n                                            \"73\": 0.041979593,\n                                            \"210\": 1.0,\n                                            \"212\": 0.166303092,\n                                            \"213\": 3.655290271\n                                        }\n                                    },\n                                    {\n                                        \"appliedStats\": {\n                                            \"42\": 6.9,\n                                            \"43\": 6.0\n                                        },\n                                        \"appliedTotal\": 12.9,\n                                        \"externalId\": \"401547438\",\n                                        \"id\": \"01401547438\",\n                                        \"proTeamId\": 12,\n                                        \"scoringPeriodId\": 3,\n                                        \"seasonId\": 2023,\n                                        \"statSourceId\": 0,\n                                        \"statSplitTypeId\": 1,\n                                        \"stats\": {\n                                            \"41\": 7.0,\n                                            \"42\": 69.0,\n                                            \"43\": 1.0,\n                                            \"47\": 13.0,\n                                            \"48\": 6.0,\n                                            \"49\": 3.0,\n                                            \"50\": 2.0,\n                                            \"51\": 1.0,\n                                            \"53\": 7.0,\n                                            \"54\": 1.0,\n                                            \"58\": 8.0,\n                                            \"59\": 21.0,\n                                            \"60\": 9.857,\n                                            \"61\": 69.0,\n                                            \"155\": 1.0,\n                                            \"158\": 6.0,\n                                            \"183\": 1.0,\n                                            \"210\": 1.0,\n                                            \"213\": 4.0\n                                        }\n                                    },\n                                    {\n                                        \"appliedStats\": {\n                                            \"68\": -0.078420659,\n                                            \"72\": -0.043651875,\n                                            \"24\": 0.0518019616,\n                                            \"25\": 0.05828664,\n                                            \"42\": 7.198392986000001,\n                                            \"26\": 0.001008234,\n                                            \"43\": 3.382483302,\n                                            \"44\": 0.044778604,\n                                            \"63\": 0.00207\n                                        },\n                                        \"appliedTotal\": 10.6167491936,\n                                        \"externalId\": \"20234\",\n                                        \"id\": \"1120234\",\n                                        \"proTeamId\": 0,\n                                        \"scoringPeriodId\": 4,\n                                        \"seasonId\": 2023,\n                                        \"statSourceId\": 1,\n                                        \"statSplitTypeId\": 1,\n                                        \"stats\": {\n                                            \"23\": 0.219533387,\n                                            \"24\": 0.518019616,\n                                            \"25\": 0.00971444,\n                                            \"26\": 5.04117E-4,\n                                            \"35\": 4.03421E-4,\n                                            \"36\": 2.82395E-4,\n                                            \"37\": 7.94E-6,\n                                            \"38\": 2.71E-7,\n                                            \"39\": 2.359639339,\n                                            \"40\": 0.518019616,\n                                            \"42\": 71.98392986,\n                                            \"43\": 0.563747217,\n                                            \"44\": 0.022389302,\n                                            \"45\": 0.012684494,\n                                            \"46\": 0.008289317,\n                                            \"47\": 14.0,\n                                            \"48\": 7.0,\n                                            \"49\": 3.0,\n                                            \"50\": 2.0,\n                                            \"51\": 1.0,\n                                            \"53\": 6.3092289,\n                                            \"54\": 1.0,\n                                            \"56\": 0.240265762,\n                                            \"57\": 0.00743,\n                                            \"58\": 8.674229038,\n                                            \"60\": 11.40930706,\n                                            \"61\": 71.98392986,\n                                            \"62\": 0.022893419,\n                                            \"63\": 3.45E-4,\n                                            \"66\": 0.00263694,\n                                            \"67\": 0.075783719,\n                                            \"68\": 0.078420659,\n                                            \"70\": 0.001212992,\n                                            \"71\": 0.042438883,\n                                            \"72\": 0.043651875,\n                                            \"73\": 0.043651875,\n                                            \"210\": 1.0,\n                                            \"212\": 0.159952334,\n                                            \"213\": 3.586010794\n                                        }\n                                    }\n                                ],\n                                \"universeId\": 1\n                            },\n                            \"ratings\": {\n                                \"0\": {\n                                    \"positionalRanking\": 4,\n                                    \"totalRanking\": 150,\n                                    \"totalRating\": 21.5\n                                }\n                            },\n                            \"rosterLocked\": false,\n                            \"status\": \"ONTEAM\",\n                            \"tradeLocked\": false\n                        },\n                        \"status\": \"NORMAL\"\n                    },\n                    // Other roster entries\n                    ...\n                ],\n                \"tradeReservedEntries\": 0\n            }\n        },\n        // All other teams\n        ...\n    ]\n}\n</code></pre>"},{"location":"projects/espn/league-info-json-views/#mlivescoring","title":"mLiveScoring","text":"<p>All this view does is contain a <code>matchupPeriodId</code> id for each match.  Basically you'd just want to pair it with mScoreBoard</p> mLiveScoring json view <pre><code>{\n    \"draftDetail\": {\n        \"drafted\": true,\n        \"inProgress\": false\n    },\n    \"gameId\": 1,\n    \"id\": 695660,\n    \"schedule\": [\n        {\n            \"matchupPeriodId\": 1\n        },\n        {\n            \"matchupPeriodId\": 1\n        },\n        {\n            \"matchupPeriodId\": 1\n        },\n        {\n            \"matchupPeriodId\": 1\n        },\n        {\n            \"matchupPeriodId\": 1\n        },\n        {\n            \"matchupPeriodId\": 1\n        },\n        {\n            \"matchupPeriodId\": 1\n        },\n        {\n            \"matchupPeriodId\": 1\n        },\n        {\n            \"matchupPeriodId\": 2\n        },\n        {\n            \"matchupPeriodId\": 2\n        },\n        {\n            \"matchupPeriodId\": 2\n        },\n        {\n            \"matchupPeriodId\": 2\n        },\n        {\n            \"matchupPeriodId\": 2\n        },\n        {\n            \"matchupPeriodId\": 2\n        },\n        {\n            \"matchupPeriodId\": 2\n        },\n        {\n            \"matchupPeriodId\": 2\n        },\n        {\n            \"matchupPeriodId\": 3\n        },\n        {\n            \"matchupPeriodId\": 3\n        },\n        {\n            \"matchupPeriodId\": 3\n        },\n        {\n            \"matchupPeriodId\": 3\n        },\n        {\n            \"matchupPeriodId\": 3\n        },\n        {\n            \"matchupPeriodId\": 3\n        },\n        {\n            \"matchupPeriodId\": 3\n        },\n        {\n            \"matchupPeriodId\": 3\n        },\n        {\n            \"matchupPeriodId\": 4\n        },\n        {\n            \"matchupPeriodId\": 4\n        },\n        {\n            \"matchupPeriodId\": 4\n        },\n        {\n            \"matchupPeriodId\": 4\n        },\n        {\n            \"matchupPeriodId\": 4\n        },\n        {\n            \"matchupPeriodId\": 4\n        },\n        {\n            \"matchupPeriodId\": 4\n        },\n        {\n            \"matchupPeriodId\": 4\n        },\n        {\n            \"matchupPeriodId\": 5\n        },\n        {\n            \"matchupPeriodId\": 5\n        },\n        {\n            \"matchupPeriodId\": 5\n        },\n        {\n            \"matchupPeriodId\": 5\n        },\n        {\n            \"matchupPeriodId\": 5\n        },\n        {\n            \"matchupPeriodId\": 5\n        },\n        {\n            \"matchupPeriodId\": 5\n        },\n        {\n            \"matchupPeriodId\": 5\n        },\n        {\n            \"matchupPeriodId\": 6\n        },\n        {\n            \"matchupPeriodId\": 6\n        },\n        {\n            \"matchupPeriodId\": 6\n        },\n        {\n            \"matchupPeriodId\": 6\n        },\n        {\n            \"matchupPeriodId\": 6\n        },\n        {\n            \"matchupPeriodId\": 6\n        },\n        {\n            \"matchupPeriodId\": 6\n        },\n        {\n            \"matchupPeriodId\": 6\n        },\n        {\n            \"matchupPeriodId\": 7\n        },\n        {\n            \"matchupPeriodId\": 7\n        },\n        {\n            \"matchupPeriodId\": 7\n        },\n        {\n            \"matchupPeriodId\": 7\n        },\n        {\n            \"matchupPeriodId\": 7\n        },\n        {\n            \"matchupPeriodId\": 7\n        },\n        {\n            \"matchupPeriodId\": 7\n        },\n        {\n            \"matchupPeriodId\": 7\n        },\n        {\n            \"matchupPeriodId\": 8\n        },\n        {\n            \"matchupPeriodId\": 8\n        },\n        {\n            \"matchupPeriodId\": 8\n        },\n        {\n            \"matchupPeriodId\": 8\n        },\n        {\n            \"matchupPeriodId\": 8\n        },\n        {\n            \"matchupPeriodId\": 8\n        },\n        {\n            \"matchupPeriodId\": 8\n        },\n        {\n            \"matchupPeriodId\": 8\n        },\n        {\n            \"matchupPeriodId\": 9\n        },\n        {\n            \"matchupPeriodId\": 9\n        },\n        {\n            \"matchupPeriodId\": 9\n        },\n        {\n            \"matchupPeriodId\": 9\n        },\n        {\n            \"matchupPeriodId\": 9\n        },\n        {\n            \"matchupPeriodId\": 9\n        },\n        {\n            \"matchupPeriodId\": 9\n        },\n        {\n            \"matchupPeriodId\": 9\n        },\n        {\n            \"matchupPeriodId\": 10\n        },\n        {\n            \"matchupPeriodId\": 10\n        },\n        {\n            \"matchupPeriodId\": 10\n        },\n        {\n            \"matchupPeriodId\": 10\n        },\n        {\n            \"matchupPeriodId\": 10\n        },\n        {\n            \"matchupPeriodId\": 10\n        },\n        {\n            \"matchupPeriodId\": 10\n        },\n        {\n            \"matchupPeriodId\": 10\n        },\n        {\n            \"matchupPeriodId\": 11\n        },\n        {\n            \"matchupPeriodId\": 11\n        },\n        {\n            \"matchupPeriodId\": 11\n        },\n        {\n            \"matchupPeriodId\": 11\n        },\n        {\n            \"matchupPeriodId\": 11\n        },\n        {\n            \"matchupPeriodId\": 11\n        },\n        {\n            \"matchupPeriodId\": 11\n        },\n        {\n            \"matchupPeriodId\": 11\n        },\n        {\n            \"matchupPeriodId\": 12\n        },\n        {\n            \"matchupPeriodId\": 12\n        },\n        {\n            \"matchupPeriodId\": 12\n        },\n        {\n            \"matchupPeriodId\": 12\n        },\n        {\n            \"matchupPeriodId\": 12\n        },\n        {\n            \"matchupPeriodId\": 12\n        },\n        {\n            \"matchupPeriodId\": 12\n        },\n        {\n            \"matchupPeriodId\": 12\n        },\n        {\n            \"matchupPeriodId\": 13\n        },\n        {\n            \"matchupPeriodId\": 13\n        },\n        {\n            \"matchupPeriodId\": 13\n        },\n        {\n            \"matchupPeriodId\": 13\n        },\n        {\n            \"matchupPeriodId\": 13\n        },\n        {\n            \"matchupPeriodId\": 13\n        },\n        {\n            \"matchupPeriodId\": 13\n        },\n        {\n            \"matchupPeriodId\": 13\n        },\n        {\n            \"matchupPeriodId\": 14\n        },\n        {\n            \"matchupPeriodId\": 14\n        },\n        {\n            \"matchupPeriodId\": 14\n        },\n        {\n            \"matchupPeriodId\": 14\n        },\n        {\n            \"matchupPeriodId\": 14\n        },\n        {\n            \"matchupPeriodId\": 14\n        },\n        {\n            \"matchupPeriodId\": 14\n        },\n        {\n            \"matchupPeriodId\": 14\n        }\n    ],\n    \"scoringPeriodId\": 4,\n    \"seasonId\": 2023,\n    \"segmentId\": 0,\n    \"status\": {\n        \"activatedDate\": 1690375312281,\n        \"createdAsLeagueType\": 0,\n        \"currentLeagueType\": 0,\n        \"currentMatchupPeriod\": 4,\n        \"finalScoringPeriod\": 17,\n        \"firstScoringPeriod\": 1,\n        \"isActive\": true,\n        \"isExpired\": false,\n        \"isFull\": true,\n        \"isPlayoffMatchupEdited\": true,\n        \"isToBeDeleted\": false,\n        \"isViewable\": true,\n        \"isWaiverOrderEdited\": false,\n        \"latestScoringPeriod\": 4,\n        \"previousSeasons\": [\n            2014,\n            2015,\n            2016,\n            2017,\n            2018,\n            2019,\n            2020,\n            2021,\n            2022\n        ],\n        \"standingsUpdateDate\": 1695714108553,\n        \"teamsJoined\": 16,\n        \"transactionScoringPeriod\": 4,\n        \"waiverLastExecutionDate\": 1695714107284,\n        \"waiverProcessStatus\": {\n            \"2023-09-05T07:31:30.748+0000\": 3,\n            \"2023-09-13T08:41:11.851+0000\": 7,\n            \"2023-09-14T07:43:12.340+0000\": 1,\n            \"2023-09-20T07:40:58.921+0000\": 9\n        }\n    }\n}\n</code></pre>"},{"location":"projects/espn/league-info-json-views/#mnav","title":"mNav","text":"<p>This view really doesn't add much other than <code>isLeagueCreator</code> and <code>isLeagueManager</code> to our `members array.</p>"},{"location":"projects/espn/league-info-json-views/#modular","title":"modular","text":"<p>Reduces the league info.</p>"},{"location":"projects/espn/league-info-json-views/#mboxscore","title":"mBoxScore","text":"<p>No different than without the view parameter</p>"},{"location":"projects/espn/league-info-json-views/#mmatchupscore","title":"mMatchupScore","text":"<p>mMatchupScore mainly deals with the <code>schedule</code> array, so let's break that down.</p> <p>We previously saw the structure of the schedule in mStandings.  We now get an <code>id</code> value for the match, a <code>playoffTierType</code>, and a <code>winner</code> designation.  The total score is also broken down in a <code>pointsBySocringPeriod</code> object which has a score for each scoring period.  This would be useful for playoff matches that involve 2 week scoring periods.</p> <p>We also get a <code>Roster</code> object called <code>rosterForCurrentScoringPeriod</code> if the scoring period is the current scoring period.  This Roster is a boiled down view of what would be shown in mRoster, only showing us this weeks projected stats.  Note that although future matches are shown, the Rosters are not included for the future matches.  Note that this view returns 21,573 lines of code for me.</p> mMatchupScore json view <pre><code>{\n    \"draftDetail\": {\n        \"drafted\": true,\n        \"inProgress\": false\n    },\n    \"gameId\": 1,\n    \"id\": 695660,\n    \"schedule\": [\n        {\n            \"away\": {\n                \"adjustment\": 0.0,\n                \"cumulativeScore\": {\n                    \"losses\": 0,\n                    \"statBySlot\": null,\n                    \"ties\": 0,\n                    \"wins\": 0\n                },\n                \"pointsByScoringPeriod\": {\n                    \"1\": 48.06\n                },\n                \"teamId\": 3,\n                \"tiebreak\": 0.0,\n                \"totalPoints\": 48.06\n            },\n            \"home\": {\n                \"adjustment\": 0.0,\n                \"cumulativeScore\": {\n                    \"losses\": 0,\n                    \"statBySlot\": null,\n                    \"ties\": 0,\n                    \"wins\": 0\n                },\n                \"pointsByScoringPeriod\": {\n                    \"1\": 91.05\n                },\n                \"teamId\": 1,\n                \"tiebreak\": 0.0,\n                \"totalPoints\": 91.05\n            },\n            \"id\": 1,\n            \"matchupPeriodId\": 1,\n            \"playoffTierType\": \"NONE\",\n            \"winner\": \"HOME\"\n        },\n        ... // continues like this for previous matches\n        {\n            \"away\": { ...\n            },\n            \"home\": {\n                \"adjustment\": 0.0,\n                \"cumulativeScore\": {\n                    \"losses\": 0,\n                    \"statBySlot\": null,\n                    \"ties\": 0,\n                    \"wins\": 0\n                },\n                \"rosterForCurrentScoringPeriod\": {\n                    \"appliedStatTotal\": 0.0,\n                    \"entries\": [\n                        {\n                            \"lineupSlotId\": 4,\n                            \"playerPoolEntry\": {\n                                \"player\": {\n                                    \"stats\": [\n                                        {\n                                            \"appliedStats\": {\n                                                \"68\": -0.114782457,\n                                                \"72\": -0.064278176,\n                                                \"42\": 8.449198075,\n                                                \"43\": 1.7520858780000002,\n                                                \"44\": 0.028024874,\n                                                \"63\": 0.00303\n                                            },\n                                            \"appliedTotal\": 10.053278194,\n                                            \"proTeamId\": 0,\n                                            \"scoringPeriodId\": 4,\n                                            \"seasonId\": 2023,\n                                            \"statSourceId\": 1,\n                                            \"statSplitTypeId\": 1,\n                                            \"stats\": {\n                                                \"42\": 84.49198075,\n                                                \"43\": 0.292014313,\n                                                \"44\": 0.014012437,\n                                                \"45\": 0.016632843,\n                                                \"46\": 0.010869563,\n                                                \"47\": 16.0,\n                                                \"48\": 8.0,\n                                                \"49\": 4.0,\n                                                \"50\": 3.0,\n                                                \"51\": 1.0,\n                                                \"53\": 5.739122871,\n                                                \"54\": 1.0,\n                                                \"56\": 0.333424577,\n                                                \"57\": 0.0103,\n                                                \"58\": 9.50243504,\n                                                \"60\": 14.72210696,\n                                                \"61\": 84.49198075,\n                                                \"62\": 0.014012437,\n                                                \"63\": 5.05E-4,\n                                                \"67\": 0.114782457,\n                                                \"68\": 0.114782457,\n                                                \"71\": 0.064278176,\n                                                \"72\": 0.064278176,\n                                                \"73\": 0.064278176,\n                                                \"210\": 1.0,\n                                                \"213\": 3.689871996\n                                            },\n                                            \"variance\": {\n                                                \"23\": 0.309561125,\n                                                \"24\": 2.961189065,\n                                                \"25\": 0.016224972,\n                                                \"26\": 0.197283324,\n                                                \"35\": 0.07,\n                                                \"36\": 0.06,\n                                                \"42\": 29.43187548,\n                                                \"43\": 0.427792632,\n                                                \"44\": 0.27543558,\n                                                \"45\": 0.22,\n                                                \"46\": 0.18,\n                                                \"53\": 1.80050828,\n                                                \"58\": 3.45134245,\n                                                \"63\": 0.001,\n                                                \"68\": 0.323380833,\n                                                \"72\": 0.323380833\n                                            }\n                                        }\n                                    ]\n                                }\n                            }\n                        },\n                        ... // rest of players on roster\n                    ]\n                },\n                \"rosterForMatchupPeriodDelayed\": {\n                    \"entries\": []\n                },\n                \"teamId\": 16,\n                \"tiebreak\": 0.0,\n                \"totalPoints\": 0.0,\n                \"totalPointsLive\": 0.0\n            },\n            \"id\": 25,\n            \"matchupPeriodId\": 4,\n            \"playoffTierType\": \"NONE\",\n            \"winner\": \"UNDECIDED\"\n        },\n        ... // All other matches this week with player projections\n        {\n            \"away\": {\n                \"adjustment\": 0.0,\n                \"teamId\": 3,\n                \"tiebreak\": 0.0,\n                \"totalPoints\": 0.0\n            },\n            \"home\": {\n                \"adjustment\": 0.0,\n                \"teamId\": 18,\n                \"tiebreak\": 0.0,\n                \"totalPoints\": 0.0\n            },\n            \"id\": 33,\n            \"matchupPeriodId\": 5,\n            \"playoffTierType\": \"NONE\",\n            \"winner\": \"UNDECIDED\"\n        },\n        ... // all other future mathces\n    ]\n}\n</code></pre>"},{"location":"projects/espn/league-info-json-views/#mscoreboard","title":"mScoreboard","text":"<p>Much like mMatchupScore, <code>mScoreboard</code> also deals with the schedule.  However, this time we do not have a null value for <code>scoreBySlot</code> within the <code>cumulativeScore</code> object the way we did for mMatchupSocre.  Instead we have a <code>Statline</code> object showing the to values for each stat, i.e. Rushing TDs, Rushing Yards etc.  We also get the projected stats for players for the current week with some additional details like the players <code>fullName</code> so that's convenient to see.  We also see <code>totalPointsLive</code> and <code>totalProjectedPointsLive</code> for the current scoring period.</p> <p>Info</p> <p>If you want to see the <code>rosterForCurrentScoringPeriod</code> for previous weeks you need to explicity set <code>scoringPeriodId</code> as a GET parameter, with the scoring period as the value.</p> <p>Alternatively, you can also set the <code>x-fantasy-filter</code> header to <code>{\"schedule\":{\"filterMatchupPeriodIds\":{\"value\":[1]}}}</code> where <code>1</code> is the scoring period.  </p> <p>Total Projected Points Live</p> <p>Probably the best part is that we get <code>totalPointsLive</code> and <code>totalProjectedPointsLive</code> for the current <code>scoringPeriodId</code></p> mScoreboard json view <pre><code>{\n    \"draftDetail\": {\n        \"drafted\": true,\n        \"inProgress\": false\n    },\n    \"id\": 695660,\n    \"schedule\": [\n        {\n            \"away\": {\n                \"cumulativeScore\": {\n                    \"losses\": 0,\n                    \"scoreByStat\": {\n                        \"128\": {\n                            \"ineligible\": false,\n                            \"rank\": 0.0,\n                            \"result\": null,\n                            \"score\": 0.0\n                        },\n                        \"129\": {\n                            \"ineligible\": false,\n                            \"rank\": 0.0,\n                            \"result\": null,\n                            \"score\": 0.0\n                        },\n                        \"130\": {\n                            \"ineligible\": false,\n                            \"rank\": 0.0,\n                            \"result\": null,\n                            \"score\": 0.0\n                        },\n                        \"3\": {\n                            \"ineligible\": false,\n                            \"rank\": 0.0,\n                            \"result\": null,\n                            \"score\": 229.0\n                        },\n                        ... // all other stat Ids and their total for the match\n                    },\n                    \"statBySlot\": null,\n                    \"ties\": 0,\n                    \"wins\": 0\n                },\n                \"teamId\": 3,\n                \"tiebreak\": 0.0,\n                \"totalPoints\": 48.06\n            },\n            \"home\": {\n                ...\n            }\n            \"id\": 1,\n            \"winner\": \"HOME\"\n        },\n        ... // similar for previous weeks\n        {\n            \"home\": {\n                \"cumulativeScore\": {\n                    \"losses\": 0,\n                    \"scoreByStat\": {\n                        \"128\": {\n                            \"ineligible\": false,\n                            \"rank\": 0.0,\n                            \"result\": null,\n                            \"score\": 0.0\n                        },\n                        ...\n                    },\n                    \"statBySlot\": null,\n                    \"ties\": 0,\n                    \"wins\": 0\n                },\n                \"rosterForCurrentScoringPeriod\": {\n                    \"entries\": [\n                        {\n                            \"injuryStatus\": \"NORMAL\",\n                            \"lineupSlotId\": 4,\n                            \"playerId\": 4361370,\n                            \"playerPoolEntry\": {\n                                \"appliedStatTotal\": 0.0,\n                                \"id\": 4361370,\n                                \"onTeamId\": 16,\n                                \"player\": {\n                                    \"active\": true,\n                                    \"defaultPositionId\": 3,\n                                    \"eligibleSlots\": [\n                                        3,\n                                        4,\n                                        5,\n                                        23,\n                                        7,\n                                        20,\n                                        21\n                                    ],\n                                    \"firstName\": \"Chris\",\n                                    \"fullName\": \"Chris Olave\",\n                                    \"id\": 4361370,\n                                    \"injured\": false,\n                                    \"injuryStatus\": \"ACTIVE\",\n                                    \"jersey\": \"12\",\n                                    \"lastName\": \"Olave\",\n                                    \"proTeamId\": 18,\n                                    \"stats\": [\n                                        {\n                                            \"appliedStats\": {\n                                                \"68\": -0.114782457,\n                                                \"72\": -0.064278176,\n                                                \"42\": 8.449198075,\n                                                \"43\": 1.7520858780000002,\n                                                \"44\": 0.028024874,\n                                                \"63\": 0.00303\n                                            },\n                                            \"appliedTotal\": 10.053278194,\n                                            \"appliedTotalCeiling\": 15.473331027999999,\n                                            \"externalId\": \"20234\",\n                                            \"id\": \"1120234\",\n                                            \"lastUpdateInfo\": {},\n                                            \"proTeamId\": 0,\n                                            \"scoringPeriodId\": 4,\n                                            \"seasonId\": 2023,\n                                            \"statSourceId\": 1,\n                                            \"statSplitTypeId\": 1,\n                                            \"stats\": {\n                                                \"42\": 84.49198075,\n                                                \"43\": 0.292014313,\n                                                \"44\": 0.014012437,\n                                                \"45\": 0.016632843,\n                                                \"46\": 0.010869563,\n                                                \"47\": 16.0,\n                                                \"48\": 8.0,\n                                                \"49\": 4.0,\n                                                \"50\": 3.0,\n                                                \"51\": 1.0,\n                                                \"53\": 5.739122871,\n                                                \"54\": 1.0,\n                                                \"56\": 0.333424577,\n                                                \"57\": 0.0103,\n                                                \"58\": 9.50243504,\n                                                \"60\": 14.72210696,\n                                                \"61\": 84.49198075,\n                                                \"62\": 0.014012437,\n                                                \"63\": 5.05E-4,\n                                                \"67\": 0.114782457,\n                                                \"68\": 0.114782457,\n                                                \"71\": 0.064278176,\n                                                \"72\": 0.064278176,\n                                                \"73\": 0.064278176,\n                                                \"210\": 1.0,\n                                                \"213\": 3.689871996\n                                            },\n                                            \"variance\": {\n                                                \"23\": 0.309561125,\n                                                \"24\": 2.961189065,\n                                                \"25\": 0.016224972,\n                                                \"26\": 0.197283324,\n                                                \"35\": 0.07,\n                                                \"36\": 0.06,\n                                                \"42\": 29.43187548,\n                                                \"43\": 0.427792632,\n                                                \"44\": 0.27543558,\n                                                \"45\": 0.22,\n                                                \"46\": 0.18,\n                                                \"53\": 1.80050828,\n                                                \"58\": 3.45134245,\n                                                \"63\": 0.001,\n                                                \"68\": 0.323380833,\n                                                \"72\": 0.323380833\n                                            }\n                                        }\n                                    ],\n                                    \"universeId\": 2\n                                },\n                                \"status\": \"ONTEAM\"\n                            },\n                            \"status\": \"NORMAL\"\n                        },\n\n                    ]\n                },\n                \"rosterForMatchupPeriod\": {\n                    \"entries\": []\n                },\n                \"teamId\": 16,\n                \"tiebreak\": 0.0,\n                \"totalPoints\": 0.0,\n                \"totalPointsLive\": 0.0,\n                \"totalProjectedPointsLive\": 92.4308868695\n            },\n            \"id\": 25,\n            \"winner\": \"UNDECIDED\"\n        },\n        {\n            \"away\": {\n                \"teamId\": 10,\n                \"tiebreak\": 0.0,\n                \"totalPoints\": 0.0\n            },\n            \"home\": {\n                \"teamId\": 4,\n                \"tiebreak\": 0.0,\n                \"totalPoints\": 0.0\n            },\n            \"id\": 110,\n            \"winner\": \"UNDECIDED\"\n        },\n        ... // other future weeks\n    ]\n}\n</code></pre> <p>Warning</p> <p>This view does not provide a <code>matchupPeriodId</code> but just the match <code>id</code>.  However, that is literally all that mLiveScoring provides, so you might as well group those together.</p>"},{"location":"projects/espn/league-info-json-views/#mmatchup","title":"mMatchup","text":"<p>mMatchup is effectively the combination of mMatchupScore, mScoreBoard, and a somewhat reduced view of mRoster.  It returns an absolute monstor of a json view: 213,565 lines.  Obviously the <code>teams</code> array of Rosters that gets returned won't have some of the details that mRoster provides such as the previous years stats and projection.  </p>"},{"location":"projects/espn/player-info-json-views/","title":"Player Info JSON Views","text":""},{"location":"projects/espn/player-info-json-views/#player-json-view","title":"Player JSON view","text":"<p>The basic non-league dependent player api is the following</p> <p><code>https://lm-api-reads.fantasy.espn.com/apis/v3/games/ffl/seasons/2023/players</code></p> <p>with a GET parameter of <code>players_wl</code>.  So the full request URL will look like </p> <p><code>https://lm-api-reads.fantasy.espn.com/apis/v3/games/ffl/seasons/2023/players?view=players_wl</code></p> Player JSON view <pre><code>[\n    {\n        \"defaultPositionId\": 2,\n        \"droppable\": true,\n        \"eligibleSlots\": [\n            25,\n            2,\n            3,\n            23,\n            7,\n            20,\n            21\n        ],\n        \"firstName\": \"Israel\",\n        \"fullName\": \"Israel Abanikanda\",\n        \"id\": 4429202,\n        \"lastName\": \"Abanikanda\",\n        \"ownership\": {\n            \"percentOwned\": 0.15320107924160353\n        },\n        \"proTeamId\": 20,\n        \"universeId\": 1\n    },\n    ...\n}\n</code></pre> <p>As is, this is not particularly useful because this endpoint only returns players with last names starting from 'AA' to 'Al'.  Not alot.  This is where the <code>Header</code> <code>x-fantasy-filter</code> comes in handy.</p> <p>Let's say we want the top 20 fantasy players for 2023 ranked by espn.  We can do this by passing the value following value for the <code>x-fantasy-filter</code> header.</p> <p><code>{\"limit\": 20, \"sortDraftRanks\": {\"sortPriority\": 100,  \"sortAsc\": true,  \"value\": \"STANDARD\"}}</code></p> <p>Now we see Justin Jefferson as the first player in our array.  What if we just want to see Ryan Tannehill's player info?  We can pass this value <code>{\"filterIds\":{\"value\":[14876]}}</code> which includes his player id.  </p>"},{"location":"projects/espn/player-info-json-views/#player-pool-entry-json-view","title":"Player Pool Entry JSON view","text":"<p>This is great, but what we really need is to be able to pull any <code>PlayerPoolEntry</code> value that we would see in our mRoster.  If you recall from the mRoster json view, a <code>Team</code> has a <code>Roster</code> object, with an array called <code>entries</code> of <code>RosterEntry</code>.  Within the <code>RosterEntry</code> we have the <code>PlayerPoolEntry</code> which has information about the <code>Player</code> as it pertains to the specific league.  </p> <p>With that said we are going to use the same request URL as outlined in our first page but our view parameter is going to be <code>kona_playercard</code>.  This is the view you see in the <code>Network</code> tab of the browser when you click on a player to see his fantasy points for the year and the current projection.</p> <p>Info</p> <p>Request URL is <code>https://lm-api-reads.fantasy.espn.com/apis/v3/games/ffl/seasons/2023/segments/0/leagues/695660?view=kona_playercard</code> and don't forget your <code>Cookie</code> header <code>espnAuth={\"swid\":\"{VALUE}\"};espn_s2=VALUE;</code></p> <p>This will an array of <code>PlayerPoolEntry</code>, with all the same information seen in mRoster.</p> kona_playercard JSON view <pre><code>{\n    \"players\": [\n        {\n            \"appliedStatTotal\": 0.0,\n            \"draftAuctionValue\": 0,\n            \"id\": 2573401,\n            \"keeperValue\": 14,\n            \"keeperValueFuture\": 7,\n            \"lineupLocked\": false,\n            \"onTeamId\": 6,\n            \"player\": {\n                \"active\": true,\n                \"defaultPositionId\": 4,\n                \"draftRanksByRankType\": {\n                    \"STANDARD\": {\n                        \"auctionValue\": 1,\n                        \"rank\": 168,\n                        \"rankSourceId\": 0,\n                        \"rankType\": \"STANDARD\",\n                        \"slotId\": 0\n                    },\n                    \"PPR\": {\n                        \"auctionValue\": 2,\n                        \"rank\": 143,\n                        \"rankSourceId\": 0,\n                        \"rankType\": \"PPR\",\n                        \"slotId\": 0\n                    }\n                },\n                \"droppable\": true,\n                \"eligibleSlots\": [\n                    5,\n                    6,\n                    23,\n                    7,\n                    20,\n                    21\n                ],\n                \"firstName\": \"Tyler\",\n                \"fullName\": \"Tyler Higbee\",\n                ...\n</code></pre> <p>We can pass a similar <code>x-fantasy-filter</code> as before, but the value is slightly different, since we are targeting this <code>players</code> array.  So if we want to see Ryan Tannehills <code>PoolPlayerEntry</code> with all the fantasy stats, we would use <code>{\"players\":{\"filterIds\":{\"value\":[14876]}}}</code> as the value for the <code>x-fantasy-filter</code> header.</p> <p>Note</p> <ul> <li>The <code>x-fantasy-filter</code> for the non-league specific api is <ul> <li><code>{\"filterIds\":{\"value\":[14876]}}</code></li> </ul> </li> <li>The <code>x-fantasy-filter</code> for the league specific <code>kona_player_card</code> json view is<ul> <li><code>{\"players\":{\"filterIds\":{\"value\":[14876]}}}</code></li> </ul> </li> </ul> <p>Tip</p> <p>Just like for mRoster, you can set the <code>scoringPeriodId</code> as a GET parameter so that you can see the players fantasy stats for a particular week or scoring period.</p>"},{"location":"software-development/angular/configuration/","title":"Environment Configuration","text":"","tags":["Angular","Configuration"]},{"location":"software-development/angular/configuration/#different-files-for-production-and-development","title":"Different files for production and development","text":"<p>Inside <code>angular.json</code>, and <code>fileReplacements</code> block within the <code>configurations</code> blocks for <code>production</code> and <code>development</code>.</p> <pre><code>\"configurations\": {\n            \"production\": {\n              ...,\n              \"fileReplacements\": [{\n                \"replace\": \"src/app/environments/environment.ts\",\n                \"with\": \"src/app/environments/environment.prod.ts\"\n              }]\n            },\n            \"development\": {\n              ...,\n              \"fileReplacements\": [{\n                \"replace\": \"src/app/environments/environment.ts\",\n                \"with\": \"src/app/environments/environment.dev.ts\"\n              }]\n            }\n</code></pre> <p>Now when we build we can pass a configuration switch</p> <pre><code>ng build --configuration production --base-href ./\n</code></pre> <p>You can also customize <code>npm</code> scripts in <code>package.json</code> to do this for you.</p> <pre><code>\"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build --configuration production --base-href ./\",\n    \"dev\": \"ng build --configuration development --base-href ./ &amp;&amp; node post-build.js &lt;path&gt;\",\n    \"prod\": \"ng build --configuration production --base-href ./ &amp;&amp; node post-build.js &lt;path&gt;\",\n    \"test\": \"ng test\"\n  }\n</code></pre> <p>So if I run</p> <pre><code>npm run build\n</code></pre> <p>this will run my custom <code>ng build</code> command.</p> <p>Additional Scripts</p> <p>You can create additional scripts, note that I added <code>dev</code> and <code>prod</code> which also run a javascript file as well.</p>","tags":["Angular","Configuration"]},{"location":"software-development/angular/project-structure/","title":"Project Structure","text":"","tags":["Angular","Project Structure"]},{"location":"software-development/angular/project-structure/#project-tree","title":"Project Tree","text":"<pre><code>\u251c\u2500\u2500 project\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 app\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u251c\u2500\u2500 components\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u251c\u2500\u2500 dialogs\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u251c\u2500\u2500 example-dialog.component.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u251c\u2500\u2500 example-dialog.component.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2514\u2500\u2500 example-dialog.component.scss\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u251c\u2500\u2500 layout\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u251c\u2500\u2500 pages\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u251c\u2500\u2500 fragments\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2514\u2500\u2500 widgets\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u251c\u2500\u2500 environments\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u251c\u2500\u2500 environment.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2514\u2500\u2500 environment.prod.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u251c\u2500\u2500 guards\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2514\u2500\u2500 auth.guard.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u251c\u2500\u2500 interceptors\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u251c\u2500\u2500 http-request.interceptor.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2514\u2500\u2500 jwt.interceptor.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u251c\u2500\u2500 models\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2514\u2500\u2500 example-entity.model.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u251c\u2500\u2500 services\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u251c\u2500\u2500 api\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u251c\u2500\u2500 interfaces\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u251c\u2500\u2500 api-endpoint-interface.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2514\u2500\u2500 api-endpoint-impl.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u251c\u2500\u2500 controllers\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2514\u2500\u2500 example-entity.service.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2514\u2500\u2500 cache\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502       \u2514\u2500\u2500 example-entity-cache.service.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u251c\u2500\u2500 app\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2514\u2500\u2500 version-historyy.service.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u251c\u2500\u2500 auth\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2514\u2500\u2500 auth.service.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u251c\u2500\u2500 layout\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2514\u2500\u2500 device-type.service.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u251c\u2500\u2500 preferences\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2514\u2500\u2500 theme.service.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2514\u2500\u2500 ui-state\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502       \u2514\u2500\u2500 example-page-state.service.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2514\u2500\u2500 utility\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 widgets\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0        \u251c\u2500\u2500 interfaces\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0        \u2502   \u251c\u2500\u2500 abstract-autocomplete-filter.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0        \u2502   \u2514\u2500\u2500 abstract-mat-select-options.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0        \u2514\u2500\u2500 impl\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0            \u251c\u2500\u2500 example-entity-autocomplete-filter.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0            \u2514\u2500\u2500 example-entity-mat-select-options.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 assets\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 favicon.ico\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 index.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 main.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 styles.scss\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 .gitignore\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 angular.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 package.json\n\u2514\u2500\u2500\n</code></pre>","tags":["Angular","Project Structure"]},{"location":"software-development/angular/project-structure/#components","title":"Components","text":"","tags":["Angular","Project Structure"]},{"location":"software-development/angular/project-structure/#dialogs","title":"Dialogs","text":"","tags":["Angular","Project Structure"]},{"location":"software-development/angular/project-structure/#layout","title":"Layout","text":"","tags":["Angular","Project Structure"]},{"location":"software-development/angular/project-structure/#pages","title":"Pages","text":"","tags":["Angular","Project Structure"]},{"location":"software-development/angular/project-structure/#fragments","title":"Fragments","text":"","tags":["Angular","Project Structure"]},{"location":"software-development/angular/project-structure/#widgets","title":"Widgets","text":"","tags":["Angular","Project Structure"]},{"location":"software-development/angular/project-structure/#environments","title":"Environments","text":"","tags":["Angular","Project Structure"]},{"location":"software-development/angular/setup/","title":"Setup","text":"","tags":["Angular"]},{"location":"software-development/angular/setup/#versioning","title":"Versioning","text":"<p>To check global angular version.</p> <pre><code>ng version\n</code></pre> <p>Update angular cli globally</p> <pre><code>npm uninstall -g @angular/cli\nnpm install -g @angular/cli@latest\n</code></pre> <p>Update a local project</p> <pre><code>rm -rf node_modules\nnpm uninstall --save-dev @angular/cli\nnpm install --save-dev @angular/cli@latest\nnpm install\n</code></pre> <p>Check anything else that may need to be updated or migrated here</p>","tags":["Angular"]},{"location":"software-development/angular/setup/#creating-a-project","title":"Creating a project","text":"<pre><code>ng new &lt;project-name&gt;\n</code></pre> <p>Select sass (scss)</p> <p>Install Angular material</p> <pre><code>ng add @angular/material\n</code></pre>","tags":["Angular"]},{"location":"software-development/angular/setup/#serving","title":"Serving","text":"<pre><code># Optional port\nng serve --port 4401\n</code></pre>","tags":["Angular"]},{"location":"software-development/angular/components/alerts/","title":"Alerts","text":"","tags":["Angular","ng-bootstrap","material","alerts","notifications"]},{"location":"software-development/angular/components/alerts/#ng-bootstrap","title":"Ng Bootstrap","text":"","tags":["Angular","ng-bootstrap","material","alerts","notifications"]},{"location":"software-development/angular/components/component-communication/","title":"Communication","text":"","tags":["Angular","Components","Component Communication"]},{"location":"software-development/angular/components/component-communication/#using-input-and-output","title":"Using <code>@Input</code> and <code>@Output</code>","text":"<p>In this approach, the child component, which is embedded in the parent component, has both <code>@Input</code> and <code>@Output</code> properties which can be referenced in the html selector.</p> <ul> <li> <p>Type into the parent input</p> <ul> <li>Value is updated in the child component</li> </ul> </li> <li> <p>Type into the child input</p> <ul> <li>Value is emitted to the parent when submitted</li> </ul> </li> </ul> parent.component.htmlparent.component.tschild.component.htmlchild.component.ts <pre><code>&lt;fieldset&gt;\n  &lt;legend&gt;\n    &lt;h1&gt;Parent Component&lt;/h1&gt;\n  &lt;/legend&gt;\n\n  &lt;p&gt;Parent Input&lt;/p&gt;\n  &lt;input type=\"text\" [(ngModel)]=\"inputText\" /&gt;\n\n  &lt;p&gt;Received message from child: {{ receivedMessage }}&lt;/p&gt;\n\n  &lt;app-child\n    [parentInput]=\"inputText\"\n    (childOutput)=\"onMessageReceived($event)\"\n  &gt;&lt;/app-child&gt;\n&lt;/fieldset&gt;\n</code></pre> <pre><code>export class ParentComponent implements OnInit {\n  // Text that will be sent to child, and binded with []\n  inputText!: string;\n\n  // Message set from @Output method `onMessageReceived`\n  receivedMessage: string = '';\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * Method invoked by `@Output` from child\n   */\n  onMessageReceived(message: string) {\n    this.receivedMessage = message;\n  }\n}\n</code></pre> <pre><code>&lt;fieldset&gt;\n\n  &lt;legend&gt;\n    &lt;h1&gt;Child Component&lt;/h1&gt;\n  &lt;/legend&gt;\n\n  &lt;p&gt;Parent input: {{ parentInput }}&lt;/p&gt;\n  &lt;input type=\"text\" [(ngModel)]=\"parentInput\" /&gt;\n\n  &lt;p&gt;Child Message to send to parent: {{ message }}&lt;/p&gt;\n\n  &lt;input type=\"text\" [(ngModel)]=\"message\" (keyup.enter)=\"sendMessage()\" /&gt;\n\n  &lt;button (click)=\"sendMessage()\"&gt;Send to Parent&lt;/button&gt;\n\n&lt;/fieldset&gt;\n</code></pre> <pre><code>export class ChildComponent implements OnInit {\n\n  @Input() parentInput: string = '';  \n  @Output() childOutput = new EventEmitter&lt;string&gt;();\n\n  message: string = '';\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  sendMessage() {\n    this.childOutput.emit(this.message);\n  }\n}\n</code></pre> <p>View the full demo on StackBlitz </p>","tags":["Angular","Components","Component Communication"]},{"location":"software-development/angular/components/component-communication/#using-a-service","title":"Using a <code>Service</code>","text":"<p>Components can communicate with any number of other components with the use of a <code>Service</code> that can be injected into each component.  In the following example we have a parent component with a son and daughter component.  The son or daughter component can emit values that all other components listen to and print.</p> parent.component.htmlparent.component.tsbrother.component.htmlbrother.component.tsui.service.ts <pre><code>&lt;fieldset&gt;\n  &lt;legend&gt;\n    &lt;h1&gt;Parent Component&lt;/h1&gt;\n  &lt;/legend&gt;\n\n  &lt;div *ngIf=\"brotherMessage$ | async as brotherMessage\"&gt;\n    &lt;p&gt;Son said: {{ brotherMessage }}&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;div *ngIf=\"sisterMessage$ | async as sisterMessage\"&gt;\n    &lt;p&gt;Daughter said: {{ sisterMessage }}&lt;/p&gt;\n  &lt;/div&gt;\n\n  &lt;app-brother&gt;&lt;/app-brother&gt;\n  &lt;app-sister&gt;&lt;/app-sister&gt;\n&lt;/fieldset&gt;\n</code></pre> <pre><code>export class ParentComponent{\n  inputText!: string;\n\n  brotherMessage$: Observable&lt;string&gt;;\n  sisterMessage$: Observable&lt;string&gt;;\n\n  constructor(private uiService: UiService) {\n    this.brotherMessage$ = this.uiService.brotherMessage$;\n    this.sisterMessage$ = this.uiService.sisterMessage$;\n  }\n}\n</code></pre> <pre><code>&lt;fieldset&gt;\n  &lt;legend&gt;\n    &lt;h1&gt;Brother Component&lt;/h1&gt;\n  &lt;/legend&gt;\n  &lt;p&gt;Message to send to anybody&lt;/p&gt;\n  &lt;input type=\"text\" [(ngModel)]=\"inputText\" (keyup.enter)=\"onClick()\" /&gt;\n  &lt;button (click)=\"onClick()\"&gt;Submit&lt;/button&gt;\n\n  &lt;div *ngIf=\"sisterMessage$ | async as sisterMessage\"&gt;\n    &lt;p&gt;Sister said: {{ sisterMessage }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/fieldset&gt;\n</code></pre> <pre><code>export class BrotherComponent {\n\n  inputText!: string;\n\n  sisterMessage$?: Observable&lt;string&gt;;\n\n  constructor(private uiService: UiService) {\n    this.sisterMessage$ = this.uiService.sisterMessage$;\n  }\n\n  onClick(): void {\n    this.uiService.brotherSpeak(this.inputText);\n  }\n}\n</code></pre> <pre><code>@Injectable()\nexport class UiService {\n  private brotherMessage = new Subject&lt;string&gt;();\n  public brotherMessage$ = this.brotherMessage.asObservable();\n\n  private sisterMessage = new Subject&lt;string&gt;();\n  public sisterMessage$ = this.sisterMessage.asObservable();\n\n  constructor() {}\n\n  brotherSpeak(message: string): void {\n    this.brotherMessage.next(message);\n  }\n\n  sisterSpeak(message: string): void {\n    this.sisterMessage.next(message);\n  }\n}\n</code></pre> <p>View the full demo on StackBlitz </p>","tags":["Angular","Components","Component Communication"]},{"location":"software-development/angular/components/component-communication/#template-selector-reference","title":"Template selector reference","text":"<p>The instance of the child selector can be used throughout the parent template.  </p> <ul> <li>Parent component displays the message property of the child component</li> </ul> parent.component.html <pre><code>&lt;fieldset&gt;\n\n  &lt;legend&gt;\n    &lt;h1&gt;Parent Component&lt;/h1&gt;\n  &lt;/legend&gt;\n\n  &lt;p&gt;Received message from child: {{ child1.message }}&lt;/p&gt;\n\n  &lt;app-child #child1&gt;&lt;/app-child&gt;\n\n&lt;/fieldset&gt;\n</code></pre> <p>View the full demo on StackBlitz </p>","tags":["Angular","Components","Component Communication"]},{"location":"software-development/angular/components/component-communication/#using-viewchild","title":"Using <code>@ViewChild</code>","text":"<p>By injecting the child component programatically, all of it's public methods can be accessed within the parent component.</p> parent.component.htmlparent.component.tschild.component.htmlchild.component.ts <pre><code>&lt;fieldset&gt;\n  &lt;legend&gt;\n    &lt;h1&gt;Parent Component&lt;/h1&gt;\n  &lt;/legend&gt;\n\n  &lt;p&gt;Received message from child: {{ receivedMessage }}&lt;/p&gt;\n\n  &lt;app-child #child1&gt;&lt;/app-child&gt;\n&lt;/fieldset&gt;\n</code></pre> <pre><code>export class ParentComponent{\n  receivedMessage: string = '';\n\n  // @ViewChild(ChildComponent) childComponent!: ChildComponent; \n  @ViewChild('child1') childComponent!: ChildComponent;\n\n  constructor() {}\n\n  ngAfterViewInit() {\n    this.childComponent.message$.subscribe((message) =&gt; {\n      this.receivedMessage = message;\n    });\n  }\n}\n</code></pre> <pre><code>&lt;fieldset&gt;\n\n  &lt;legend&gt;\n    &lt;h1&gt;Child Component&lt;/h1&gt;\n  &lt;/legend&gt;\n\n  &lt;p&gt;Child Message to send to parent: {{ message }}&lt;/p&gt;\n\n  &lt;input type=\"text\" [(ngModel)]=\"message\" (keyup.enter)=\"sendMessage()\" /&gt;\n\n  &lt;button (click)=\"sendMessage()\"&gt;Send to Parent&lt;/button&gt;\n\n&lt;/fieldset&gt;\n</code></pre> <pre><code>export class ChildComponent{\n\n  @Input() parentInput: string = '';\n\n  message: string = '';\n\n  private messageSubject = new Subject&lt;string&gt;();\n\n  message$ = this.messageSubject.asObservable().pipe(\n    debounceTime(300), // Optional: Debounce to emit only after 300ms of no changes\n    distinctUntilChanged() // Optional: Only emit if the value actually changes\n  );\n\n  constructor() {}\n\n  sendMessage() {\n    this.messageSubject.next(this.message);\n  }\n}\n</code></pre> <p>View the full demo on StackBlitz </p>","tags":["Angular","Components","Component Communication"]},{"location":"software-development/angular/components/snippets/component-service/brother.component.html/","title":"Brother.component.html","text":"<pre><code>&lt;fieldset&gt;\n  &lt;legend&gt;\n    &lt;h1&gt;Brother Component&lt;/h1&gt;\n  &lt;/legend&gt;\n  &lt;p&gt;Message to send to anybody&lt;/p&gt;\n  &lt;input type=\"text\" [(ngModel)]=\"inputText\" (keyup.enter)=\"onClick()\" /&gt;\n  &lt;button (click)=\"onClick()\"&gt;Submit&lt;/button&gt;\n\n  &lt;div *ngIf=\"sisterMessage$ | async as sisterMessage\"&gt;\n    &lt;p&gt;Sister said: {{ sisterMessage }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/fieldset&gt;\n</code></pre>"},{"location":"software-development/angular/components/snippets/component-service/brother.component.ts/","title":"Brother.component.ts","text":"<pre><code>export class BrotherComponent {\n\n  inputText!: string;\n\n  sisterMessage$?: Observable&lt;string&gt;;\n\n  constructor(private uiService: UiService) {\n    this.sisterMessage$ = this.uiService.sisterMessage$;\n  }\n\n  onClick(): void {\n    this.uiService.brotherSpeak(this.inputText);\n  }\n}\n</code></pre>"},{"location":"software-development/angular/components/snippets/component-service/parent.component.html/","title":"Parent.component.html","text":"<pre><code>&lt;fieldset&gt;\n  &lt;legend&gt;\n    &lt;h1&gt;Parent Component&lt;/h1&gt;\n  &lt;/legend&gt;\n\n  &lt;div *ngIf=\"brotherMessage$ | async as brotherMessage\"&gt;\n    &lt;p&gt;Son said: {{ brotherMessage }}&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;div *ngIf=\"sisterMessage$ | async as sisterMessage\"&gt;\n    &lt;p&gt;Daughter said: {{ sisterMessage }}&lt;/p&gt;\n  &lt;/div&gt;\n\n  &lt;app-brother&gt;&lt;/app-brother&gt;\n  &lt;app-sister&gt;&lt;/app-sister&gt;\n&lt;/fieldset&gt;\n</code></pre>"},{"location":"software-development/angular/components/snippets/component-service/parent.component.ts/","title":"Parent.component.ts","text":"<pre><code>export class ParentComponent{\n  inputText!: string;\n\n  brotherMessage$: Observable&lt;string&gt;;\n  sisterMessage$: Observable&lt;string&gt;;\n\n  constructor(private uiService: UiService) {\n    this.brotherMessage$ = this.uiService.brotherMessage$;\n    this.sisterMessage$ = this.uiService.sisterMessage$;\n  }\n}\n</code></pre>"},{"location":"software-development/angular/components/snippets/component-service/ui.service.ts/","title":"Ui.service.ts","text":"<pre><code>@Injectable()\nexport class UiService {\n  private brotherMessage = new Subject&lt;string&gt;();\n  public brotherMessage$ = this.brotherMessage.asObservable();\n\n  private sisterMessage = new Subject&lt;string&gt;();\n  public sisterMessage$ = this.sisterMessage.asObservable();\n\n  constructor() {}\n\n  brotherSpeak(message: string): void {\n    this.brotherMessage.next(message);\n  }\n\n  sisterSpeak(message: string): void {\n    this.sisterMessage.next(message);\n  }\n}\n</code></pre>"},{"location":"software-development/angular/components/snippets/input-output/child.component.html/","title":"Child.component.html","text":"<pre><code>&lt;fieldset&gt;\n\n  &lt;legend&gt;\n    &lt;h1&gt;Child Component&lt;/h1&gt;\n  &lt;/legend&gt;\n\n  &lt;p&gt;Parent input: {{ parentInput }}&lt;/p&gt;\n  &lt;input type=\"text\" [(ngModel)]=\"parentInput\" /&gt;\n\n  &lt;p&gt;Child Message to send to parent: {{ message }}&lt;/p&gt;\n\n  &lt;input type=\"text\" [(ngModel)]=\"message\" (keyup.enter)=\"sendMessage()\" /&gt;\n\n  &lt;button (click)=\"sendMessage()\"&gt;Send to Parent&lt;/button&gt;\n\n&lt;/fieldset&gt;\n</code></pre>"},{"location":"software-development/angular/components/snippets/input-output/child.component.ts/","title":"Child.component.ts","text":"<pre><code>export class ChildComponent implements OnInit {\n\n  @Input() parentInput: string = '';  \n  @Output() childOutput = new EventEmitter&lt;string&gt;();\n\n  message: string = '';\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  sendMessage() {\n    this.childOutput.emit(this.message);\n  }\n}\n</code></pre>"},{"location":"software-development/angular/components/snippets/input-output/parent.component.html/","title":"Parent.component.html","text":"<pre><code>&lt;fieldset&gt;\n  &lt;legend&gt;\n    &lt;h1&gt;Parent Component&lt;/h1&gt;\n  &lt;/legend&gt;\n\n  &lt;p&gt;Parent Input&lt;/p&gt;\n  &lt;input type=\"text\" [(ngModel)]=\"inputText\" /&gt;\n\n  &lt;p&gt;Received message from child: {{ receivedMessage }}&lt;/p&gt;\n\n  &lt;app-child\n    [parentInput]=\"inputText\"\n    (childOutput)=\"onMessageReceived($event)\"\n  &gt;&lt;/app-child&gt;\n&lt;/fieldset&gt;\n</code></pre>"},{"location":"software-development/angular/components/snippets/input-output/parent.component.ts/","title":"Parent.component.ts","text":"<pre><code>export class ParentComponent implements OnInit {\n  // Text that will be sent to child, and binded with []\n  inputText!: string;\n\n  // Message set from @Output method `onMessageReceived`\n  receivedMessage: string = '';\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * Method invoked by `@Output` from child\n   */\n  onMessageReceived(message: string) {\n    this.receivedMessage = message;\n  }\n}\n</code></pre>"},{"location":"software-development/angular/components/snippets/template-reference/parent.component.html/","title":"Parent.component.html","text":"<pre><code>&lt;fieldset&gt;\n\n  &lt;legend&gt;\n    &lt;h1&gt;Parent Component&lt;/h1&gt;\n  &lt;/legend&gt;\n\n  &lt;p&gt;Received message from child: {{ child1.message }}&lt;/p&gt;\n\n  &lt;app-child #child1&gt;&lt;/app-child&gt;\n\n&lt;/fieldset&gt;\n</code></pre>"},{"location":"software-development/angular/components/snippets/view-child/child.component.html/","title":"Child.component.html","text":"<pre><code>&lt;fieldset&gt;\n\n  &lt;legend&gt;\n    &lt;h1&gt;Child Component&lt;/h1&gt;\n  &lt;/legend&gt;\n\n  &lt;p&gt;Child Message to send to parent: {{ message }}&lt;/p&gt;\n\n  &lt;input type=\"text\" [(ngModel)]=\"message\" (keyup.enter)=\"sendMessage()\" /&gt;\n\n  &lt;button (click)=\"sendMessage()\"&gt;Send to Parent&lt;/button&gt;\n\n&lt;/fieldset&gt;\n</code></pre>"},{"location":"software-development/angular/components/snippets/view-child/child.component.ts/","title":"Child.component.ts","text":"<pre><code>export class ChildComponent{\n\n  @Input() parentInput: string = '';\n\n  message: string = '';\n\n  private messageSubject = new Subject&lt;string&gt;();\n\n  message$ = this.messageSubject.asObservable().pipe(\n    debounceTime(300), // Optional: Debounce to emit only after 300ms of no changes\n    distinctUntilChanged() // Optional: Only emit if the value actually changes\n  );\n\n  constructor() {}\n\n  sendMessage() {\n    this.messageSubject.next(this.message);\n  }\n}\n</code></pre>"},{"location":"software-development/angular/components/snippets/view-child/parent.component.html/","title":"Parent.component.html","text":"<pre><code>&lt;fieldset&gt;\n  &lt;legend&gt;\n    &lt;h1&gt;Parent Component&lt;/h1&gt;\n  &lt;/legend&gt;\n\n  &lt;p&gt;Received message from child: {{ receivedMessage }}&lt;/p&gt;\n\n  &lt;app-child #child1&gt;&lt;/app-child&gt;\n&lt;/fieldset&gt;\n</code></pre>"},{"location":"software-development/angular/components/snippets/view-child/parent.component.ts/","title":"Parent.component.ts","text":"<pre><code>export class ParentComponent{\n  receivedMessage: string = '';\n\n  // @ViewChild(ChildComponent) childComponent!: ChildComponent; \n  @ViewChild('child1') childComponent!: ChildComponent;\n\n  constructor() {}\n\n  ngAfterViewInit() {\n    this.childComponent.message$.subscribe((message) =&gt; {\n      this.receivedMessage = message;\n    });\n  }\n}\n</code></pre>"},{"location":"software-development/angular/libraries/chart.js/","title":"Chart.js","text":"","tags":["Angular","chart.js","charts"]},{"location":"software-development/angular/libraries/chart.js/#stackblitz-examples","title":"StackBlitz examples","text":"<p>Simple lineChart:</p> <p>Simple bar chart:</p> <p>How to take an example from chartjs and use in Angular.</p> <p>This is an example from chartjs that I ported to Angular</p>","tags":["Angular","chart.js","charts"]},{"location":"software-development/angular/material/mat-table/","title":"Table","text":"<p>In the following examples, we will be using the GitHub api to perform searches for repos.  I chose this api because it supports pagination and I wanted to demonstrate using pagination to trigger api calls.</p>","tags":["Angular","Material","table","api","github api","mat-card","mat-table"]},{"location":"software-development/angular/material/mat-table/#mat-table-with-api","title":"Mat Table with Api","text":"<p>We're using the dynamic column approach with the columns defined in <code>table-example.component.ts</code>.  </p> table-example.component.htmltable-example.component.tsgit-hub-api.service.ts <pre><code>&lt;mat-form-field class=\"example-form-field\" appearance=\"fill\"&gt;\n  &lt;mat-label&gt;Search all GitHub Repositories&lt;/mat-label&gt;\n  &lt;input matInput type=\"text\" [(ngModel)]=\"query\" (keydown.enter)=\"search()\" /&gt;\n  &lt;button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"search()\"&gt;\n    &lt;mat-icon&gt;search&lt;/mat-icon&gt;\n  &lt;/button&gt;\n&lt;/mat-form-field&gt;\n\n@switch(loading) {\n    &lt;!-- Show Loading Spinner --&gt;\n    @case(true) {\n        &lt;mat-spinner\n            [style.position]=\"'absolute'\"\n            [style.top]=\"'50%'\"\n            [style.left]=\"'50%'\"\n        &gt;&lt;/mat-spinner&gt;\n    }\n    &lt;!-- Show Table  --&gt;\n    @case(false) {\n        &lt;div class=\"table-container\"&gt;\n            &lt;table\n                mat-table\n                [dataSource]=\"searchResult.items\"\n                class=\"mat-elevation-z8 demo-table\"&gt;\n\n                @for (column of columns; track column) {\n                    &lt;ng-container [matColumnDef]=\"column.columnDef\"&gt;\n                        &lt;th mat-header-cell *matHeaderCellDef&gt;\n                            {{ column.header }}\n                        &lt;/th&gt;\n                        &lt;td mat-cell *matCellDef=\"let row\"&gt;\n                            {{ column.cell(row) }}\n                        &lt;/td&gt;\n                    &lt;/ng-container&gt;\n                }\n\n                &lt;tr mat-header-row *matHeaderRowDef=\"displayedColumns\"&gt;&lt;/tr&gt;\n                &lt;tr mat-row *matRowDef=\"let row; columns: displayedColumns\"&gt;&lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/div&gt;\n    } \n}\n</code></pre> <pre><code>@Component({\n  selector: 'app-table-example',\n  templateUrl: './table-example.component.html',\n  styleUrls: ['./table-example.component.css'],\n  standalone: true,\n  imports: [\n    MatTableModule,\n    FormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    NgIf,\n  ],\n})\nexport class TableExampleComponent implements OnInit {\n  query: string = '';\n  loading: boolean = false;\n  searchResult: GitHubSearchResult = {\n    items: [],\n  };\n\n  columns = [\n    {\n      columnDef: 'full_name',\n      header: 'Name',\n      cell: (element: GitHub) =&gt; `${element.full_name}`,\n    },\n    {\n      columnDef: 'html_url',\n      header: 'URL',\n      cell: (element: GitHub) =&gt; `${element.html_url}`,\n    },\n    {\n      columnDef: 'license.name',\n      header: 'License',\n      cell: (element: GitHub) =&gt; `${element.license?.name}`,\n    },\n    {\n      columnDef: 'watchers_count',\n      header: 'Watchers',\n      cell: (element: GitHub) =&gt; `${element.watchers_count}`,\n    },\n  ];\n  displayedColumns = this.columns.map((c) =&gt; c.columnDef);\n\n  constructor(private gitHubApiService: GitHubApiService) {}\n\n  ngOnInit() {}\n\n  search(): void {\n    this.loading = true;\n    this.gitHubApiService\n      .get(this.query, 0, 10)\n      .pipe(take(1))\n      .subscribe({\n        next: (data) =&gt; {\n          this.searchResult = data;\n        },\n        complete: () =&gt; {\n          this.loading = false;\n        },\n      });\n  }\n}\n</code></pre> <pre><code>const baseUrl = 'https://api.github.com/search/repositories';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GitHubApiService {\n  constructor(private http: HttpClient) {}\n\n  get(\n    query: string,\n    page: number = 0,\n    per_page: number = 5\n  ): Observable&lt;GitHubSearchResult&gt; {\n    const params = new HttpParams()\n      .set('q', query)\n      .set('page', page)\n      .set('per_page', per_page);\n\n    return this.http.get&lt;GitHubSearchResult&gt;(baseUrl, { params: params });\n  }\n}\n</code></pre> <p>If the stack blitz has trouble loading, try opening it in a new tab .</p>","tags":["Angular","Material","table","api","github api","mat-card","mat-table"]},{"location":"software-development/angular/material/mat-table/#pagination","title":"Pagination","text":"<p>In the prior example, we hard coded a page value of <code>0</code> and a page size of <code>10</code>.  Now let's give those options to the user.</p> table-example.component.htmltable-example.component.ts Only Added Content<pre><code>&lt;!-- Adding mat-paginator under table --&gt;\n&lt;mat-paginator\n  *ngIf=\"showPaginator\"\n  [length]=\"resultsLength\"\n  [pageSize]=\"pageSize\"\n  [pageSizeOptions]=\"pageSizeOptions\"\n  [pageIndex]=\"pageIndex\"\n  showFirstLastButtons=\"true\"\n  aria-label=\"Select page\"\n  (page)=\"handlePageEvent($event)\"&gt;\n&lt;/mat-paginator&gt;\n</code></pre> Only Added Content<pre><code>export class TableExampleComponent implements OnInit {\n\n// Initial Content\n\n  resultsLength: number = 0;\n  pageSizeOptions: number[] = [5, 25, 50];\n  pageIndex?: number = 0;\n  pageSize?: number = 5;\n\n  search(): void {\n    this.loading = true;\n    this.gitHubApiService\n      .get(this.query, this.pageIndex, this.pageSize)\n      .pipe(take(1))\n      .subscribe({\n        next: (data) =&gt; {\n          this.searchResult = data;\n          this.resultsLength = data.total_count || 0;\n        },\n        complete: () =&gt; {\n          this.loading = false;\n        },\n      });\n  }\n\n  public handlePageEvent(event?: PageEvent): void {\n    this.pageIndex = event?.pageIndex;\n    this.pageSize = event?.pageSize;\n\n    this.search();\n  }\n\n  get showPaginator(): boolean {\n    return this.searchResult.items.length &gt; 0 &amp;&amp; !this.loading;\n  } \n</code></pre> <p>Feel free to see this particular example in StackBlitz .  Otherwise, it will effectively be incorporated in the next demo.</p>","tags":["Angular","Material","table","api","github api","mat-card","mat-table"]},{"location":"software-development/angular/material/mat-table/#dynamic-cards-or-table","title":"Dynamic Cards or Table","text":"<p>Just to spice things up, let's add a toggle button which will toggle between a mat-card view and a mat-table view.  This is a great example that shows us how to either us cards within a for loop, or simply a table.</p> Only Added Content<pre><code>&lt;!-- Only added content --&gt;\n&lt;mat-button-toggle-group\n  #toggleButton=\"matButtonToggleGroup\"\n  name=\"view\"\n  aria-label=\"View\"\n  value=\"card\"\n&gt;\n  &lt;mat-button-toggle value=\"card\"&gt;Cards&lt;/mat-button-toggle&gt;\n  &lt;mat-button-toggle value=\"table\"&gt;Table&lt;/mat-button-toggle&gt;\n&lt;/mat-button-toggle-group&gt;\n\n@if (!loading &amp;&amp; toggleButton.value === 'card'){\n&lt;!--  --&gt;\n@for (github of searchResult.items; track github) {\n&lt;mat-card&gt;\n  &lt;mat-card-header&gt;\n    &lt;mat-card-title&gt;{{ github?.full_name }}&lt;/mat-card-title&gt;\n    &lt;mat-card-subtitle&gt;{{ github?.full_name }}&lt;/mat-card-subtitle&gt;\n  &lt;/mat-card-header&gt;\n\n  &lt;mat-card-content&gt;\n    &lt;p&gt;\n      &lt;b&gt;URL:&lt;/b&gt; {{ github?.html_url }}\n      &lt;br /&gt;\n      &lt;b&gt;License:&lt;/b&gt; {{ github?.license?.name }}\n      &lt;br /&gt;\n      &lt;b&gt;Watchers:&lt;/b&gt; {{ github?.watchers_count }}\n      &lt;br /&gt;\n    &lt;/p&gt;\n  &lt;/mat-card-content&gt;\n&lt;/mat-card&gt;\n}\n&lt;!--  --&gt;\n}\n</code></pre> <p>If the stack blitz has trouble loading, try opening it in a new tab .</p>","tags":["Angular","Material","table","api","github api","mat-card","mat-table"]},{"location":"software-development/angular/material/snippets/mat-table/git-hub-api.service.ts/","title":"Git hub api.service.ts","text":"<pre><code>const baseUrl = 'https://api.github.com/search/repositories';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GitHubApiService {\n  constructor(private http: HttpClient) {}\n\n  get(\n    query: string,\n    page: number = 0,\n    per_page: number = 5\n  ): Observable&lt;GitHubSearchResult&gt; {\n    const params = new HttpParams()\n      .set('q', query)\n      .set('page', page)\n      .set('per_page', per_page);\n\n    return this.http.get&lt;GitHubSearchResult&gt;(baseUrl, { params: params });\n  }\n}\n</code></pre>"},{"location":"software-development/angular/material/snippets/mat-table/table-example.component.html/","title":"Table example.component.html","text":"<pre><code>&lt;mat-form-field class=\"example-form-field\" appearance=\"fill\"&gt;\n  &lt;mat-label&gt;Search all GitHub Repositories&lt;/mat-label&gt;\n  &lt;input matInput type=\"text\" [(ngModel)]=\"query\" (keydown.enter)=\"search()\" /&gt;\n  &lt;button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"search()\"&gt;\n    &lt;mat-icon&gt;search&lt;/mat-icon&gt;\n  &lt;/button&gt;\n&lt;/mat-form-field&gt;\n\n@switch(loading) {\n    &lt;!-- Show Loading Spinner --&gt;\n    @case(true) {\n        &lt;mat-spinner\n            [style.position]=\"'absolute'\"\n            [style.top]=\"'50%'\"\n            [style.left]=\"'50%'\"\n        &gt;&lt;/mat-spinner&gt;\n    }\n    &lt;!-- Show Table  --&gt;\n    @case(false) {\n        &lt;div class=\"table-container\"&gt;\n            &lt;table\n                mat-table\n                [dataSource]=\"searchResult.items\"\n                class=\"mat-elevation-z8 demo-table\"&gt;\n\n                @for (column of columns; track column) {\n                    &lt;ng-container [matColumnDef]=\"column.columnDef\"&gt;\n                        &lt;th mat-header-cell *matHeaderCellDef&gt;\n                            {{ column.header }}\n                        &lt;/th&gt;\n                        &lt;td mat-cell *matCellDef=\"let row\"&gt;\n                            {{ column.cell(row) }}\n                        &lt;/td&gt;\n                    &lt;/ng-container&gt;\n                }\n\n                &lt;tr mat-header-row *matHeaderRowDef=\"displayedColumns\"&gt;&lt;/tr&gt;\n                &lt;tr mat-row *matRowDef=\"let row; columns: displayedColumns\"&gt;&lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/div&gt;\n    } \n}\n</code></pre>"},{"location":"software-development/angular/material/snippets/mat-table/table-example.component.ts/","title":"Table example.component.ts","text":"<pre><code>@Component({\n  selector: 'app-table-example',\n  templateUrl: './table-example.component.html',\n  styleUrls: ['./table-example.component.css'],\n  standalone: true,\n  imports: [\n    MatTableModule,\n    FormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    NgIf,\n  ],\n})\nexport class TableExampleComponent implements OnInit {\n  query: string = '';\n  loading: boolean = false;\n  searchResult: GitHubSearchResult = {\n    items: [],\n  };\n\n  columns = [\n    {\n      columnDef: 'full_name',\n      header: 'Name',\n      cell: (element: GitHub) =&gt; `${element.full_name}`,\n    },\n    {\n      columnDef: 'html_url',\n      header: 'URL',\n      cell: (element: GitHub) =&gt; `${element.html_url}`,\n    },\n    {\n      columnDef: 'license.name',\n      header: 'License',\n      cell: (element: GitHub) =&gt; `${element.license?.name}`,\n    },\n    {\n      columnDef: 'watchers_count',\n      header: 'Watchers',\n      cell: (element: GitHub) =&gt; `${element.watchers_count}`,\n    },\n  ];\n  displayedColumns = this.columns.map((c) =&gt; c.columnDef);\n\n  constructor(private gitHubApiService: GitHubApiService) {}\n\n  ngOnInit() {}\n\n  search(): void {\n    this.loading = true;\n    this.gitHubApiService\n      .get(this.query, 0, 10)\n      .pipe(take(1))\n      .subscribe({\n        next: (data) =&gt; {\n          this.searchResult = data;\n        },\n        complete: () =&gt; {\n          this.loading = false;\n        },\n      });\n  }\n}\n</code></pre>"},{"location":"software-development/angular/material/snippets/paginator/table-example.component.html/","title":"Table example.component.html","text":"Only Added Content<pre><code>&lt;!-- Adding mat-paginator under table --&gt;\n&lt;mat-paginator\n  *ngIf=\"showPaginator\"\n  [length]=\"resultsLength\"\n  [pageSize]=\"pageSize\"\n  [pageSizeOptions]=\"pageSizeOptions\"\n  [pageIndex]=\"pageIndex\"\n  showFirstLastButtons=\"true\"\n  aria-label=\"Select page\"\n  (page)=\"handlePageEvent($event)\"&gt;\n&lt;/mat-paginator&gt;\n</code></pre>"},{"location":"software-development/angular/material/snippets/paginator/table-example.component.ts/","title":"Table example.component.ts","text":"Only Added Content<pre><code>export class TableExampleComponent implements OnInit {\n\n// Initial Content\n\n  resultsLength: number = 0;\n  pageSizeOptions: number[] = [5, 25, 50];\n  pageIndex?: number = 0;\n  pageSize?: number = 5;\n\n  search(): void {\n    this.loading = true;\n    this.gitHubApiService\n      .get(this.query, this.pageIndex, this.pageSize)\n      .pipe(take(1))\n      .subscribe({\n        next: (data) =&gt; {\n          this.searchResult = data;\n          this.resultsLength = data.total_count || 0;\n        },\n        complete: () =&gt; {\n          this.loading = false;\n        },\n      });\n  }\n\n  public handlePageEvent(event?: PageEvent): void {\n    this.pageIndex = event?.pageIndex;\n    this.pageSize = event?.pageSize;\n\n    this.search();\n  }\n\n  get showPaginator(): boolean {\n    return this.searchResult.items.length &gt; 0 &amp;&amp; !this.loading;\n  } \n</code></pre>"},{"location":"software-development/angular/material/snippets/paginator-cards/table-example.component.html/","title":"Table example.component.html","text":"Only Added Content<pre><code>&lt;!-- Only added content --&gt;\n&lt;mat-button-toggle-group\n  #toggleButton=\"matButtonToggleGroup\"\n  name=\"view\"\n  aria-label=\"View\"\n  value=\"card\"\n&gt;\n  &lt;mat-button-toggle value=\"card\"&gt;Cards&lt;/mat-button-toggle&gt;\n  &lt;mat-button-toggle value=\"table\"&gt;Table&lt;/mat-button-toggle&gt;\n&lt;/mat-button-toggle-group&gt;\n\n@if (!loading &amp;&amp; toggleButton.value === 'card'){\n&lt;!--  --&gt;\n@for (github of searchResult.items; track github) {\n&lt;mat-card&gt;\n  &lt;mat-card-header&gt;\n    &lt;mat-card-title&gt;{{ github?.full_name }}&lt;/mat-card-title&gt;\n    &lt;mat-card-subtitle&gt;{{ github?.full_name }}&lt;/mat-card-subtitle&gt;\n  &lt;/mat-card-header&gt;\n\n  &lt;mat-card-content&gt;\n    &lt;p&gt;\n      &lt;b&gt;URL:&lt;/b&gt; {{ github?.html_url }}\n      &lt;br /&gt;\n      &lt;b&gt;License:&lt;/b&gt; {{ github?.license?.name }}\n      &lt;br /&gt;\n      &lt;b&gt;Watchers:&lt;/b&gt; {{ github?.watchers_count }}\n      &lt;br /&gt;\n    &lt;/p&gt;\n  &lt;/mat-card-content&gt;\n&lt;/mat-card&gt;\n}\n&lt;!--  --&gt;\n}\n</code></pre>"},{"location":"software-development/angular/material/snippets/paginator-cards/table-example.component.ts/","title":"Table example.component.ts","text":"Only Added Content<pre><code>export class TableExampleComponent implements OnInit {\n\n// Initial Content\n\n  resultsLength: number = 0;\n  pageSizeOptions: number[] = [5, 25, 50];\n  pageIndex?: number = 0;\n  pageSize?: number = 5;\n\n  search(): void {\n    this.loading = true;\n    this.gitHubApiService\n      .get(this.query, this.pageIndex, this.pageSize)\n      .pipe(take(1))\n      .subscribe({\n        next: (data) =&gt; {\n          this.searchResult = data;\n          this.resultsLength = data.total_count || 0;\n        },\n        complete: () =&gt; {\n          this.loading = false;\n        },\n      });\n  }\n\n  public handlePageEvent(event?: PageEvent): void {\n    this.pageIndex = event?.pageIndex;\n    this.pageSize = event?.pageSize;\n\n    this.search();\n  }\n\n  get showPaginator(): boolean {\n    return this.searchResult.items.length &gt; 0 &amp;&amp; !this.loading;\n  } \n</code></pre>"},{"location":"software-development/angular/ng-bootstrap/table/","title":"Table","text":"","tags":["Angular","ng-bootstrap","table","ngIf","ngSwitch","ng-container","ngComponentOutlet","api"]},{"location":"software-development/angular/ng-bootstrap/table/#table-with-api-data","title":"Table with API data","text":"<p>ng-bootstrap provides examples of how to create tables.  However, the examples could be greatly improved by making their table service generic and provide examples of actually fetching data from an api.   </p> <p>Changes in the code include</p> <ul> <li>Convert the table service into a generic abstract utility class, <code>filterable-table.ts</code>, that takes an array of results in the constructor instead of   having a hard coded array.</li> <li>Extend the utility class when you need to implement a new table filter, i.e. <code>CountryTableFilter</code>.</li> <li>Instantiate the table filter in your table component, i.e. <code>CountryTableComponent</code>, with the array being bound by an asynchronous observable.</li> </ul> Filterable Table Utility Class filterable-table.tscountry-table-filter.ts <pre><code>interface SearchResult&lt;T&gt; {\n    displayedResults: T[];\n    total: number;\n}\n\ninterface State {\n    page: number;\n    pageSize: number;\n    searchTerm: string;\n    sortColumn: string;\n    sortDirection: SortDirection;\n}\n\nfunction compare(v1: any, v2: any) {\n    return v1 &lt; v2 ? -1 : v1 &gt; v2 ? 1 : 0;\n}\n\nexport abstract class FilterableTable&lt;T&gt; {\n    private _loading$ = new BehaviorSubject&lt;boolean&gt;(true);\n    private _search$ = new Subject&lt;void&gt;();\n    private _displayedResults$ = new BehaviorSubject&lt;T[]&gt;([]);\n    private _total$ = new BehaviorSubject&lt;number&gt;(0);\n\n    // public allValues: T[] = [];\n\n    private _state: State = {\n        page: 1,\n        pageSize: 4,\n        searchTerm: '',\n        sortColumn: '',\n        sortDirection: '',\n    };\n\n    constructor(public allValues: T[]) {\n        // this.allValues = allValues;\n        this._search$\n        .pipe(\n            tap(() =&gt; this._loading$.next(true)),\n            debounceTime(200),\n            switchMap(() =&gt; this._search()),\n            delay(200),\n            tap(() =&gt; this._loading$.next(false))\n        )\n        .subscribe((result) =&gt; {\n            this._displayedResults$.next(result.displayedResults);\n            this._total$.next(result.total);\n        });\n\n        this._search$.next();\n    }\n\n    get displayedResults$() {\n        return this._displayedResults$.asObservable();\n    }\n    get total$() {\n        return this._total$.asObservable();\n    }\n    get loading$() {\n        return this._loading$.asObservable();\n    }\n    get page() {\n        return this._state.page;\n    }\n    get pageSize() {\n        return this._state.pageSize;\n    }\n    get searchTerm() {\n        return this._state.searchTerm;\n    }\n\n    set page(page: number) {\n        this._set({ page });\n    }\n    set pageSize(pageSize: number) {\n        this._set({ pageSize });\n    }\n    set searchTerm(searchTerm: string) {\n        this._set({ searchTerm });\n    }\n    set sortColumn(sortColumn: string) {\n        this._set({ sortColumn });\n    }\n    set sortDirection(sortDirection: SortDirection) {\n        this._set({ sortDirection });\n    }\n\n    private _set(patch: Partial&lt;State&gt;) {\n        Object.assign(this._state, patch);\n        this._search$.next();\n    }\n\n    sort(apiResp: T[], column: string, direction: string): T[] {\n        console.log(`sourting on column ${column}`);\n        if (direction === '') {\n        return apiResp;\n        } else {\n        return [...apiResp].sort((a: T, b: T) =&gt; {\n            const res = compare(\n            this.getProperty(a, column),\n            this.getProperty(b, column)\n            );\n            return direction === 'asc' ? res : -res;\n        });\n        }\n    }\n\n    /**\n        * Ability to get nested properties, i.e. `name.common`\n        */\n    getProperty(object: any, propertyName: string) {\n        var parts = propertyName.split('.'),\n        length = parts.length,\n        i,\n        property = object || this;\n\n        for (i = 0; i &lt; length; i++) {\n        property = property[parts[i]];\n        }\n\n        return property;\n    }\n\n    abstract matches(resp: T, term: string): boolean;\n\n    private _search(): Observable&lt;SearchResult&lt;T&gt;&gt; {\n        const { sortColumn, sortDirection, pageSize, page, searchTerm } =\n        this._state;\n\n        // console.log(`allValues size ${this.allValues.length}`)\n        // console.log(`searchTerm: ${searchTerm}`)\n\n        // 1. sort\n        let displayResults: T[] = this.sort(\n        this.allValues,\n        sortColumn,\n        sortDirection\n        );\n\n        // 2. filter\n        displayResults = displayResults.filter((country) =&gt;\n        this.matches(country, searchTerm)\n        );\n        const total = displayResults.length;\n\n        // 3. paginate\n        displayResults = displayResults.slice(\n        (page - 1) * pageSize,\n        (page - 1) * pageSize + pageSize\n        );\n\n        // console.log(`displayResults size ${displayResults.length}`)\n        return of({ displayedResults: displayResults, total });\n    }\n}\n</code></pre> <pre><code>export class CountryTableFilter extends FilterableTable&lt;Country&gt; {\n    matches(country: Country, input: string): boolean {\n        return (\n            country.name.common.toLowerCase().includes(input.toLowerCase()) ||\n            country.region.toLowerCase().includes(input.toLowerCase())\n        );\n    }\n}\n</code></pre> Search Component search-page.component.htmlsearch-page.component.ts <pre><code>&lt;div class=\"input-group mb-3\"&gt;\n    &lt;input\n        type=\"text\"\n        class=\"form-control\"\n        [(ngModel)]=\"searchTerm\"\n        placeholder=\"Search country names\"\n        (keydown.enter)=\"onSearch()\"\n    /&gt;\n    &lt;div class=\"input-group-append\"&gt;\n        &lt;button class=\"btn btn-primary\" (click)=\"onSearch()\"&gt;Search&lt;/button&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;div *ngIf=\"apiResults$ | async as apiResults\"&gt;\n    &lt;app-country-table [apiResults]=\"apiResults\"&gt;&lt;/app-country-table&gt;\n&lt;/div&gt;\n</code></pre> <pre><code>@Component({\n    selector: 'app-search-page',\n    templateUrl: './search-page.component.html',\n    standalone: true,\n    imports: [FormsModule, CountryTableComponent, NgIf, NgFor, AsyncPipe],\n})\nexport class SearchPageComponent implements OnInit {\n    searchTerm = '';\n\n    apiResults$?: Observable&lt;Country[]&gt;;\n\n    constructor(private apiService: CountryApiService) {}\n\n    ngOnInit() {}\n\n    onSearch(): void {\n        console.log(`Searching ${this.searchTerm}`);\n        this.apiResults$ = this.apiService.findByName(this.searchTerm);\n    }\n}\n</code></pre> Table Component country-table.component.htmlcountry-table.component.ts <pre><code>&lt;form&gt;\n&lt;div class=\"mb-3 row\"&gt;\n    &lt;label\n    for=\"table-complete-search\"\n    class=\"col-xs-3 col-sm-auto col-form-label\"\n    &gt;Full text search:&lt;/label\n    &gt;\n    &lt;div class=\"col-xs-3 col-sm-auto\"&gt;\n    &lt;input\n        id=\"table-complete-search\"\n        type=\"text\"\n        class=\"form-control\"\n        name=\"searchTerm\"\n        [(ngModel)]=\"tableHelper.searchTerm\"\n    /&gt;\n    &lt;/div&gt;\n    &lt;span class=\"col col-form-label\" *ngIf=\"tableHelper.loading$ | async\"\n    &gt;Loading...&lt;/span\n    &gt;\n&lt;/div&gt;\n\n&lt;table class=\"table table-striped\"&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;\n        &lt;th sortable=\"name.common\" scope=\"col\" (sort)=\"onSort($event)\"&gt;\n        Country\n        &lt;/th&gt;\n        &lt;th sortable=\"region\" scope=\"col\" (sort)=\"onSort($event)\"&gt;Region&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    &lt;tr *ngFor=\"let country of countries$ | async\"&gt;\n        &lt;td&gt;\n        &lt;ngb-highlight\n            [result]=\"country.name.common\"\n            [term]=\"tableHelper.searchTerm\"\n        &gt;&lt;/ngb-highlight&gt;\n        &lt;/td&gt;\n        &lt;td&gt;\n        &lt;ngb-highlight\n            [result]=\"country.region\"\n            [term]=\"tableHelper.searchTerm\"\n        &gt;&lt;/ngb-highlight&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;div class=\"d-flex justify-content-between p-2\"&gt;\n    &lt;ngb-pagination\n    [collectionSize]=\"(total$ | async)!\"\n    [(page)]=\"tableHelper!.page\"\n    [pageSize]=\"tableHelper!.pageSize\"\n    &gt;\n    &lt;/ngb-pagination&gt;\n\n    &lt;select\n    class=\"form-select\"\n    style=\"width: auto\"\n    name=\"pageSize\"\n    [(ngModel)]=\"tableHelper!.pageSize\"\n    &gt;\n    &lt;option [ngValue]=\"2\"&gt;2 items per page&lt;/option&gt;\n    &lt;option [ngValue]=\"4\"&gt;4 items per page&lt;/option&gt;\n    &lt;option [ngValue]=\"6\"&gt;6 items per page&lt;/option&gt;\n    &lt;/select&gt;\n&lt;/div&gt;\n&lt;/form&gt;\n</code></pre> <pre><code>@Component({\n    selector: 'app-country-table',\n    templateUrl: './country-table.component.html',\n    standalone: true,\n    imports: [ FormsModule, AsyncPipe, NgbHighlight, NgbdSortableHeader, NgbPaginationModule, NgIf, NgFor],\n})\nexport class CountryTableComponent implements OnInit {\n    countries$!: Observable&lt;Country[]&gt;;\n    total$!: Observable&lt;number&gt;;\n\n    @ViewChildren(NgbdSortableHeader) headers!: QueryList&lt;NgbdSortableHeader&gt;;\n\n    @Input() apiResults!: Country[];\n\n    public tableHelper!: CountryTableFilter;\n\n    constructor() {}\n\n    ngOnInit(): void {\n        console.log(`part table initialize with results ${this.apiResults}`);\n        this.tableHelper = new CountryTableFilter(this.apiResults);\n\n        this.countries$ = this.tableHelper.displayedResults$;\n        this.total$ = this.tableHelper.total$;\n    }\n\n    onSort({ column, direction }: SortEvent) {\n        // resetting other headers\n        this.headers.forEach((header) =&gt; {\n        if (header.sortable !== column) {\n            header.direction = '';\n        }\n        });\n\n        this.tableHelper!.sortColumn = column.toString();\n        this.tableHelper!.sortDirection = direction;\n    }\n\n    identify(index: number, item: Country) {\n        return item.name.official;\n    }\n}\n</code></pre> Country API Service <pre><code>const baseUrl = 'https://restcountries.com/v3.1';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CountryApiService {\n    constructor(private http: HttpClient) {}\n\n    findByName(query: string): Observable&lt;Country[]&gt; {\n        const params = new HttpParams()\n            .set('fields', 'name,region');\n\n        const url = `${baseUrl}/name/${query}`;\n        return this.http.get&lt;Country[]&gt;(url, { params: params });\n    }\n}\n</code></pre> filterable-table.tscountry-table-filter.tssearch-page.component.htmlsearch-page.component.tscountry-table.component.htmlcountry-table.component.tscountry-api.service.ts <pre><code>interface SearchResult&lt;T&gt; {\n    displayedResults: T[];\n    total: number;\n}\n\ninterface State {\n    page: number;\n    pageSize: number;\n    searchTerm: string;\n    sortColumn: string;\n    sortDirection: SortDirection;\n}\n\nfunction compare(v1: any, v2: any) {\n    return v1 &lt; v2 ? -1 : v1 &gt; v2 ? 1 : 0;\n}\n\nexport abstract class FilterableTable&lt;T&gt; {\n    private _loading$ = new BehaviorSubject&lt;boolean&gt;(true);\n    private _search$ = new Subject&lt;void&gt;();\n    private _displayedResults$ = new BehaviorSubject&lt;T[]&gt;([]);\n    private _total$ = new BehaviorSubject&lt;number&gt;(0);\n\n    // public allValues: T[] = [];\n\n    private _state: State = {\n        page: 1,\n        pageSize: 4,\n        searchTerm: '',\n        sortColumn: '',\n        sortDirection: '',\n    };\n\n    constructor(public allValues: T[]) {\n        // this.allValues = allValues;\n        this._search$\n        .pipe(\n            tap(() =&gt; this._loading$.next(true)),\n            debounceTime(200),\n            switchMap(() =&gt; this._search()),\n            delay(200),\n            tap(() =&gt; this._loading$.next(false))\n        )\n        .subscribe((result) =&gt; {\n            this._displayedResults$.next(result.displayedResults);\n            this._total$.next(result.total);\n        });\n\n        this._search$.next();\n    }\n\n    get displayedResults$() {\n        return this._displayedResults$.asObservable();\n    }\n    get total$() {\n        return this._total$.asObservable();\n    }\n    get loading$() {\n        return this._loading$.asObservable();\n    }\n    get page() {\n        return this._state.page;\n    }\n    get pageSize() {\n        return this._state.pageSize;\n    }\n    get searchTerm() {\n        return this._state.searchTerm;\n    }\n\n    set page(page: number) {\n        this._set({ page });\n    }\n    set pageSize(pageSize: number) {\n        this._set({ pageSize });\n    }\n    set searchTerm(searchTerm: string) {\n        this._set({ searchTerm });\n    }\n    set sortColumn(sortColumn: string) {\n        this._set({ sortColumn });\n    }\n    set sortDirection(sortDirection: SortDirection) {\n        this._set({ sortDirection });\n    }\n\n    private _set(patch: Partial&lt;State&gt;) {\n        Object.assign(this._state, patch);\n        this._search$.next();\n    }\n\n    sort(apiResp: T[], column: string, direction: string): T[] {\n        console.log(`sourting on column ${column}`);\n        if (direction === '') {\n        return apiResp;\n        } else {\n        return [...apiResp].sort((a: T, b: T) =&gt; {\n            const res = compare(\n            this.getProperty(a, column),\n            this.getProperty(b, column)\n            );\n            return direction === 'asc' ? res : -res;\n        });\n        }\n    }\n\n    /**\n        * Ability to get nested properties, i.e. `name.common`\n        */\n    getProperty(object: any, propertyName: string) {\n        var parts = propertyName.split('.'),\n        length = parts.length,\n        i,\n        property = object || this;\n\n        for (i = 0; i &lt; length; i++) {\n        property = property[parts[i]];\n        }\n\n        return property;\n    }\n\n    abstract matches(resp: T, term: string): boolean;\n\n    private _search(): Observable&lt;SearchResult&lt;T&gt;&gt; {\n        const { sortColumn, sortDirection, pageSize, page, searchTerm } =\n        this._state;\n\n        // console.log(`allValues size ${this.allValues.length}`)\n        // console.log(`searchTerm: ${searchTerm}`)\n\n        // 1. sort\n        let displayResults: T[] = this.sort(\n        this.allValues,\n        sortColumn,\n        sortDirection\n        );\n\n        // 2. filter\n        displayResults = displayResults.filter((country) =&gt;\n        this.matches(country, searchTerm)\n        );\n        const total = displayResults.length;\n\n        // 3. paginate\n        displayResults = displayResults.slice(\n        (page - 1) * pageSize,\n        (page - 1) * pageSize + pageSize\n        );\n\n        // console.log(`displayResults size ${displayResults.length}`)\n        return of({ displayedResults: displayResults, total });\n    }\n}\n</code></pre> <pre><code>export class CountryTableFilter extends FilterableTable&lt;Country&gt; {\n    matches(country: Country, input: string): boolean {\n        return (\n            country.name.common.toLowerCase().includes(input.toLowerCase()) ||\n            country.region.toLowerCase().includes(input.toLowerCase())\n        );\n    }\n}\n</code></pre> <pre><code>&lt;div class=\"input-group mb-3\"&gt;\n    &lt;input\n        type=\"text\"\n        class=\"form-control\"\n        [(ngModel)]=\"searchTerm\"\n        placeholder=\"Search country names\"\n        (keydown.enter)=\"onSearch()\"\n    /&gt;\n    &lt;div class=\"input-group-append\"&gt;\n        &lt;button class=\"btn btn-primary\" (click)=\"onSearch()\"&gt;Search&lt;/button&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;div *ngIf=\"apiResults$ | async as apiResults\"&gt;\n    &lt;app-country-table [apiResults]=\"apiResults\"&gt;&lt;/app-country-table&gt;\n&lt;/div&gt;\n</code></pre> <pre><code>@Component({\n    selector: 'app-search-page',\n    templateUrl: './search-page.component.html',\n    standalone: true,\n    imports: [FormsModule, CountryTableComponent, NgIf, NgFor, AsyncPipe],\n})\nexport class SearchPageComponent implements OnInit {\n    searchTerm = '';\n\n    apiResults$?: Observable&lt;Country[]&gt;;\n\n    constructor(private apiService: CountryApiService) {}\n\n    ngOnInit() {}\n\n    onSearch(): void {\n        console.log(`Searching ${this.searchTerm}`);\n        this.apiResults$ = this.apiService.findByName(this.searchTerm);\n    }\n}\n</code></pre> <pre><code>&lt;form&gt;\n&lt;div class=\"mb-3 row\"&gt;\n    &lt;label\n    for=\"table-complete-search\"\n    class=\"col-xs-3 col-sm-auto col-form-label\"\n    &gt;Full text search:&lt;/label\n    &gt;\n    &lt;div class=\"col-xs-3 col-sm-auto\"&gt;\n    &lt;input\n        id=\"table-complete-search\"\n        type=\"text\"\n        class=\"form-control\"\n        name=\"searchTerm\"\n        [(ngModel)]=\"tableHelper.searchTerm\"\n    /&gt;\n    &lt;/div&gt;\n    &lt;span class=\"col col-form-label\" *ngIf=\"tableHelper.loading$ | async\"\n    &gt;Loading...&lt;/span\n    &gt;\n&lt;/div&gt;\n\n&lt;table class=\"table table-striped\"&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;\n        &lt;th sortable=\"name.common\" scope=\"col\" (sort)=\"onSort($event)\"&gt;\n        Country\n        &lt;/th&gt;\n        &lt;th sortable=\"region\" scope=\"col\" (sort)=\"onSort($event)\"&gt;Region&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    &lt;tr *ngFor=\"let country of countries$ | async\"&gt;\n        &lt;td&gt;\n        &lt;ngb-highlight\n            [result]=\"country.name.common\"\n            [term]=\"tableHelper.searchTerm\"\n        &gt;&lt;/ngb-highlight&gt;\n        &lt;/td&gt;\n        &lt;td&gt;\n        &lt;ngb-highlight\n            [result]=\"country.region\"\n            [term]=\"tableHelper.searchTerm\"\n        &gt;&lt;/ngb-highlight&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;div class=\"d-flex justify-content-between p-2\"&gt;\n    &lt;ngb-pagination\n    [collectionSize]=\"(total$ | async)!\"\n    [(page)]=\"tableHelper!.page\"\n    [pageSize]=\"tableHelper!.pageSize\"\n    &gt;\n    &lt;/ngb-pagination&gt;\n\n    &lt;select\n    class=\"form-select\"\n    style=\"width: auto\"\n    name=\"pageSize\"\n    [(ngModel)]=\"tableHelper!.pageSize\"\n    &gt;\n    &lt;option [ngValue]=\"2\"&gt;2 items per page&lt;/option&gt;\n    &lt;option [ngValue]=\"4\"&gt;4 items per page&lt;/option&gt;\n    &lt;option [ngValue]=\"6\"&gt;6 items per page&lt;/option&gt;\n    &lt;/select&gt;\n&lt;/div&gt;\n&lt;/form&gt;\n</code></pre> <pre><code>@Component({\n    selector: 'app-country-table',\n    templateUrl: './country-table.component.html',\n    standalone: true,\n    imports: [ FormsModule, AsyncPipe, NgbHighlight, NgbdSortableHeader, NgbPaginationModule, NgIf, NgFor],\n})\nexport class CountryTableComponent implements OnInit {\n    countries$!: Observable&lt;Country[]&gt;;\n    total$!: Observable&lt;number&gt;;\n\n    @ViewChildren(NgbdSortableHeader) headers!: QueryList&lt;NgbdSortableHeader&gt;;\n\n    @Input() apiResults!: Country[];\n\n    public tableHelper!: CountryTableFilter;\n\n    constructor() {}\n\n    ngOnInit(): void {\n        console.log(`part table initialize with results ${this.apiResults}`);\n        this.tableHelper = new CountryTableFilter(this.apiResults);\n\n        this.countries$ = this.tableHelper.displayedResults$;\n        this.total$ = this.tableHelper.total$;\n    }\n\n    onSort({ column, direction }: SortEvent) {\n        // resetting other headers\n        this.headers.forEach((header) =&gt; {\n        if (header.sortable !== column) {\n            header.direction = '';\n        }\n        });\n\n        this.tableHelper!.sortColumn = column.toString();\n        this.tableHelper!.sortDirection = direction;\n    }\n\n    identify(index: number, item: Country) {\n        return item.name.official;\n    }\n}\n</code></pre> <pre><code>const baseUrl = 'https://restcountries.com/v3.1';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CountryApiService {\n    constructor(private http: HttpClient) {}\n\n    findByName(query: string): Observable&lt;Country[]&gt; {\n        const params = new HttpParams()\n            .set('fields', 'name,region');\n\n        const url = `${baseUrl}/name/${query}`;\n        return this.http.get&lt;Country[]&gt;(url, { params: params });\n    }\n}\n</code></pre> <p>View the demo on StackBlitz </p>","tags":["Angular","ng-bootstrap","table","ngIf","ngSwitch","ng-container","ngComponentOutlet","api"]},{"location":"software-development/angular/ng-bootstrap/table/#multiple-apistables-one-parent-component","title":"Multiple APIs/Tables, One Parent Component","text":"<p>This example simply shows how you could use the same search input, but based on a repository selection, use a different api and populate a different table.</p> <p>Try searching something like <code>Tribology</code> after selecting <code>Journals</code>.</p> <p>View the demo on StackBlitz  or the updated demo using <code>ngSwitch</code> on StackBlitz </p> search-page.component.htmlsearch-page.component.ts Simple Changes to component<pre><code>&lt;!-- Using *ngIf (1) --&gt;\n&lt;div *ngIf=\"selectedOption === 'countries'\"&gt;\n    &lt;div *ngIf=\"countryResults$ | async as countryResults\"&gt;\n        &lt;app-country-table [apiResults]=\"countryResults\"&gt;&lt;/app-country-table&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;div *ngIf=\"selectedOption === 'journals'\"&gt;\n    &lt;div *ngIf=\"journals$ | async as journals\"&gt;\n        &lt;app-journal-table [apiResults]=\"journals\"&gt;&lt;/app-journal-table&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;!-- Using *ngSwitch (2) --&gt;\n&lt;div [ngSwitch]=\"selectedOption\"&gt;\n  &lt;div *ngSwitchCase=\"'countries'\"&gt;\n    &lt;div *ngIf=\"countryResults$ | async as countryResults\"&gt;\n      &lt;app-country-table [apiResults]=\"countryResults\"&gt;&lt;/app-country-table&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div *ngSwitchCase=\"'journals'\"&gt;\n    &lt;div *ngIf=\"journals$ | async as journals\"&gt;\n      &lt;app-journal-table [apiResults]=\"journals\"&gt;&lt;/app-journal-table&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre> <ol> <li>Simple methodology of selectively showing child components with ngIf statement.</li> <li>More optimized solution using ngSwitch</li> </ol> <pre><code>@Component({\n    selector: 'app-search-page',\n    templateUrl: './search-page.component.html',\n    standalone: true,\n    imports: [\n        FormsModule,\n        CountryTableComponent,\n        WikiTableComponent,\n        JournalTableComponent,\n        NgIf,\n        NgFor,\n        AsyncPipe,\n    ],\n})\nexport class SearchPageComponent implements OnInit {\n    selectedOption = 'countries';\n    searchTerm = '';\n\n    countryResults$?: Observable&lt;Country[]&gt;;\n    journals$?: Observable&lt;Journal[]&gt;;\n\n    constructor(\n        private countryApiService: CountryApiService,\n        private journalApiService: JournalApiService\n    ) {}\n\n    ngOnInit() {}\n\n    onSearch(): void {\n        console.log(`Searching ${this.searchTerm}`);\n\n        switch (this.selectedOption) {\n        case 'countries':\n            this.countryResults$ = this.countryApiService\n            .findByName(this.searchTerm)\n            .pipe(\n                tap((results) =&gt; {\n                console.log(`fetched: ${JSON.stringify(results)}`);\n                })\n            );\n            break;\n        case 'journals':\n            this.journals$ = this.journalApiService\n            .findByName(this.searchTerm)\n            .pipe(\n                map((journalApiResponse: JournalApiResponse) =&gt; {\n                return journalApiResponse.message.items;\n                })\n            );\n            break;\n        }\n    }\n}        \n</code></pre>","tags":["Angular","ng-bootstrap","table","ngIf","ngSwitch","ng-container","ngComponentOutlet","api"]},{"location":"software-development/angular/ng-bootstrap/table/#multiple-tables-with-dynamic-ngcomponentoutlet","title":"Multiple tables with Dynamic <code>NgComponentOutlet</code>","text":"<p>Another consideration is to render our various result tables dynamically using <code>NgComponentOutlet</code> within <code>ng-content</code>.</p> <p>View the demo on StackBlitz .  Also check out how to use a property to denote the current component instead of the getter method on StackBlitz .</p> search-page.component.htmlsearch-page.component.tscountry-table.component.tssearch-page-alt.component.tsfilterable-table.ts <pre><code>&lt;!-- Replacing ngSwitch with ng-container --&gt;\n&lt;div [ngSwitch]=\"selectedOption\"&gt;\n  &lt;div *ngSwitchCase=\"'countries'\"&gt;\n    &lt;div *ngIf=\"countryResults$ | async as countryResults\"&gt;\n      &lt;app-country-table [apiResults]=\"countryResults\"&gt;&lt;/app-country-table&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div *ngSwitchCase=\"'journals'\"&gt;\n    &lt;div *ngIf=\"journals$ | async as journals\"&gt;\n      &lt;app-journal-table [apiResults]=\"journals\"&gt;&lt;/app-journal-table&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;!-- Click here! (1) --&gt;\n&lt;ng-container\n  *ngComponentOutlet=\"selectedComponent; inputs: componentInput\"\n&gt;&lt;/ng-container&gt;\n</code></pre> <ol> <li>Instead of an infinite <code>ngSwitchCase</code>, we can choose to instead take a dynamic approach with <code>ngComponentOutlet</code> within an <code>ng-container</code></li> </ol> <pre><code>export class SearchPageComponent implements OnInit {\n  selectedOption = 'countries';\n  searchTerm = '';\n\n  results$: Observable&lt;any[]&gt; = of([]);\n  results: any[] = [];\n\n  loading: boolean = false;\n\n  constructor(\n    private countryApiService: CountryApiService,\n    private journalApiService: JournalApiService\n  ) {}\n\n  ngOnInit() {}\n\n  onSearch(): void {\n    console.log(`Searching ${this.searchTerm}`);\n\n    switch (this.selectedOption) {\n      case 'countries':\n        this.searchCountries();\n        break;\n      case 'journals':\n        this.searchJournals();\n        break;\n    }\n  }\n\n  private searchCountries() {\n    this.results$ = this.countryApiService.findByName(this.searchTerm);\n    this.subscribe();\n  }\n\n  private searchJournals() {\n    this.results$ = this.journalApiService.findByName(this.searchTerm)\n    .pipe(\n      map((journalApiResponse: JournalApiResponse) =&gt; {\n        return journalApiResponse.message.items;\n      })\n    );\n    this.subscribe();\n  }\n\n  private subscribe(): void {\n    this.loading = true;\n    this.results$.pipe(take(1)).subscribe({\n      next: (data) =&gt; {\n        this.results = data;\n      },\n      complete: () =&gt; {\n        this.loading = false;\n      },\n    });\n  }\n\n  get componentInput() {\n    return {\n      apiResults: this.results,\n      loading: this.loading,\n    };\n  }\n\n  get selectedComponent(): Type&lt;any&gt; {\n    switch (this.selectedOption) {\n      case 'countries':\n        return CountryTableComponent;\n      case 'journals':\n        return JournalTableComponent;\n      default:\n        return CountryTableComponent;\n    }\n  }\n}\n</code></pre> Inputs changed to setters to explicitly invoke dynamic updates<pre><code>export class CountryTableComponent implements OnInit {\n  countries$!: Observable&lt;Country[]&gt;;\n  total$!: Observable&lt;number&gt;;\n\n  @ViewChildren(NgbdSortableHeader) headers!: QueryList&lt;NgbdSortableHeader&gt;;\n\n  @Input() set apiResults(value: Country[]) {\n    if (this.tableHelper) {\n      console.log('setting value to tableHelper');\n      this.tableHelper.updateValues(value);\n    }\n  }\n  @Input() set loading(loading: boolean) {\n    if (this.tableHelper) {\n      this.tableHelper.loading = loading;\n    }\n  }\n\n  public tableHelper!: CountryTableFilter;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.tableHelper = new CountryTableFilter([]);\n\n    this.countries$ = this.tableHelper.displayedResults$;\n    this.total$ = this.tableHelper.total$;\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.tableHelper &amp;&amp; changes['apiResults']) {\n      console.log('apiResults changed to:', changes['apiResults'].currentValue);\n    }\n  }\n\n  onSort({ column, direction }: SortEvent) {\n    // resetting other headers\n    this.headers.forEach((header) =&gt; {\n      if (header.sortable !== column) {\n        header.direction = '';\n      }\n    });\n\n    this.tableHelper!.sortColumn = column.toString();\n    this.tableHelper!.sortDirection = direction;\n  }\n\n  identify(index: number, item: Country) {\n    return item.name.official;\n  }\n}\n</code></pre> Component variable instead of getter<pre><code>export class SearchPageComponent implements OnInit {\n  selectedOption = 'countries';\n  searchTerm = '';\n\n  results$: Observable&lt;any[]&gt; = of([]);\n  results: any[] = [];\n\n  loading: boolean = false;\n\n  selectedComponent?: Type&lt;any&gt;;\n\n  constructor(\n    private countryApiService: CountryApiService,\n    private journalApiService: JournalApiService\n  ) {}\n\n  ngOnInit() {}\n\n  onSearch(): void {\n    console.log(`Searching ${this.searchTerm}`);\n\n    switch (this.selectedOption) {\n      case 'countries':\n        this.searchCountries();\n        this.selectedComponent = CountryTableComponent;\n        break;\n      case 'journals':\n        this.searchJournals();\n        this.selectedComponent = JournalTableComponent;\n        break;\n    }\n  }\n\n  private searchCountries() {\n    this.results$ = this.countryApiService.findByName(this.searchTerm);\n    this.subscribe();\n  }\n\n  private searchJournals() {\n    this.results$ = this.journalApiService.findByName(this.searchTerm).pipe(\n      map((journalApiResponse: JournalApiResponse) =&gt; {\n        return journalApiResponse.message.items;\n      })\n    );\n    this.subscribe();\n  }\n\n  private subscribe(): void {\n    this.loading = true;\n    this.results$.pipe(take(1)).subscribe({\n      next: (data) =&gt; {\n        this.results = data;\n      },\n      complete: () =&gt; {\n        this.loading = false;\n      },\n    });\n  }\n\n  get componentInput() {\n    return {\n      apiResults: this.results,\n      loading: this.loading,\n    };\n  }\n}\n</code></pre> Added changes<pre><code>+ public updateValues(values: T[]){\n+     this.allValues = values;\n+     this._search$.next();\n+ }\n\n+ set loading(loading: boolean){\n+     this._loading$.next(loading);\n+ }\n</code></pre>","tags":["Angular","ng-bootstrap","table","ngIf","ngSwitch","ng-container","ngComponentOutlet","api"]},{"location":"software-development/angular/ng-bootstrap/snippets/country-api.service.ts/","title":"Country api.service.ts","text":"<pre><code>const baseUrl = 'https://restcountries.com/v3.1';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CountryApiService {\n    constructor(private http: HttpClient) {}\n\n    findByName(query: string): Observable&lt;Country[]&gt; {\n        const params = new HttpParams()\n            .set('fields', 'name,region');\n\n        const url = `${baseUrl}/name/${query}`;\n        return this.http.get&lt;Country[]&gt;(url, { params: params });\n    }\n}\n</code></pre>"},{"location":"software-development/angular/ng-bootstrap/snippets/country-table-filter.ts/","title":"Country table filter.ts","text":"<pre><code>export class CountryTableFilter extends FilterableTable&lt;Country&gt; {\n    matches(country: Country, input: string): boolean {\n        return (\n            country.name.common.toLowerCase().includes(input.toLowerCase()) ||\n            country.region.toLowerCase().includes(input.toLowerCase())\n        );\n    }\n}\n</code></pre>"},{"location":"software-development/angular/ng-bootstrap/snippets/country-table.component.html/","title":"Country table.component.html","text":"<pre><code>&lt;form&gt;\n&lt;div class=\"mb-3 row\"&gt;\n    &lt;label\n    for=\"table-complete-search\"\n    class=\"col-xs-3 col-sm-auto col-form-label\"\n    &gt;Full text search:&lt;/label\n    &gt;\n    &lt;div class=\"col-xs-3 col-sm-auto\"&gt;\n    &lt;input\n        id=\"table-complete-search\"\n        type=\"text\"\n        class=\"form-control\"\n        name=\"searchTerm\"\n        [(ngModel)]=\"tableHelper.searchTerm\"\n    /&gt;\n    &lt;/div&gt;\n    &lt;span class=\"col col-form-label\" *ngIf=\"tableHelper.loading$ | async\"\n    &gt;Loading...&lt;/span\n    &gt;\n&lt;/div&gt;\n\n&lt;table class=\"table table-striped\"&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;\n        &lt;th sortable=\"name.common\" scope=\"col\" (sort)=\"onSort($event)\"&gt;\n        Country\n        &lt;/th&gt;\n        &lt;th sortable=\"region\" scope=\"col\" (sort)=\"onSort($event)\"&gt;Region&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    &lt;tr *ngFor=\"let country of countries$ | async\"&gt;\n        &lt;td&gt;\n        &lt;ngb-highlight\n            [result]=\"country.name.common\"\n            [term]=\"tableHelper.searchTerm\"\n        &gt;&lt;/ngb-highlight&gt;\n        &lt;/td&gt;\n        &lt;td&gt;\n        &lt;ngb-highlight\n            [result]=\"country.region\"\n            [term]=\"tableHelper.searchTerm\"\n        &gt;&lt;/ngb-highlight&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;div class=\"d-flex justify-content-between p-2\"&gt;\n    &lt;ngb-pagination\n    [collectionSize]=\"(total$ | async)!\"\n    [(page)]=\"tableHelper!.page\"\n    [pageSize]=\"tableHelper!.pageSize\"\n    &gt;\n    &lt;/ngb-pagination&gt;\n\n    &lt;select\n    class=\"form-select\"\n    style=\"width: auto\"\n    name=\"pageSize\"\n    [(ngModel)]=\"tableHelper!.pageSize\"\n    &gt;\n    &lt;option [ngValue]=\"2\"&gt;2 items per page&lt;/option&gt;\n    &lt;option [ngValue]=\"4\"&gt;4 items per page&lt;/option&gt;\n    &lt;option [ngValue]=\"6\"&gt;6 items per page&lt;/option&gt;\n    &lt;/select&gt;\n&lt;/div&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"software-development/angular/ng-bootstrap/snippets/country-table.component.ts/","title":"Country table.component.ts","text":"<pre><code>@Component({\n    selector: 'app-country-table',\n    templateUrl: './country-table.component.html',\n    standalone: true,\n    imports: [ FormsModule, AsyncPipe, NgbHighlight, NgbdSortableHeader, NgbPaginationModule, NgIf, NgFor],\n})\nexport class CountryTableComponent implements OnInit {\n    countries$!: Observable&lt;Country[]&gt;;\n    total$!: Observable&lt;number&gt;;\n\n    @ViewChildren(NgbdSortableHeader) headers!: QueryList&lt;NgbdSortableHeader&gt;;\n\n    @Input() apiResults!: Country[];\n\n    public tableHelper!: CountryTableFilter;\n\n    constructor() {}\n\n    ngOnInit(): void {\n        console.log(`part table initialize with results ${this.apiResults}`);\n        this.tableHelper = new CountryTableFilter(this.apiResults);\n\n        this.countries$ = this.tableHelper.displayedResults$;\n        this.total$ = this.tableHelper.total$;\n    }\n\n    onSort({ column, direction }: SortEvent) {\n        // resetting other headers\n        this.headers.forEach((header) =&gt; {\n        if (header.sortable !== column) {\n            header.direction = '';\n        }\n        });\n\n        this.tableHelper!.sortColumn = column.toString();\n        this.tableHelper!.sortDirection = direction;\n    }\n\n    identify(index: number, item: Country) {\n        return item.name.official;\n    }\n}\n</code></pre>"},{"location":"software-development/angular/ng-bootstrap/snippets/filterable-table.ts/","title":"Filterable table.ts","text":"<pre><code>interface SearchResult&lt;T&gt; {\n    displayedResults: T[];\n    total: number;\n}\n\ninterface State {\n    page: number;\n    pageSize: number;\n    searchTerm: string;\n    sortColumn: string;\n    sortDirection: SortDirection;\n}\n\nfunction compare(v1: any, v2: any) {\n    return v1 &lt; v2 ? -1 : v1 &gt; v2 ? 1 : 0;\n}\n\nexport abstract class FilterableTable&lt;T&gt; {\n    private _loading$ = new BehaviorSubject&lt;boolean&gt;(true);\n    private _search$ = new Subject&lt;void&gt;();\n    private _displayedResults$ = new BehaviorSubject&lt;T[]&gt;([]);\n    private _total$ = new BehaviorSubject&lt;number&gt;(0);\n\n    // public allValues: T[] = [];\n\n    private _state: State = {\n        page: 1,\n        pageSize: 4,\n        searchTerm: '',\n        sortColumn: '',\n        sortDirection: '',\n    };\n\n    constructor(public allValues: T[]) {\n        // this.allValues = allValues;\n        this._search$\n        .pipe(\n            tap(() =&gt; this._loading$.next(true)),\n            debounceTime(200),\n            switchMap(() =&gt; this._search()),\n            delay(200),\n            tap(() =&gt; this._loading$.next(false))\n        )\n        .subscribe((result) =&gt; {\n            this._displayedResults$.next(result.displayedResults);\n            this._total$.next(result.total);\n        });\n\n        this._search$.next();\n    }\n\n    get displayedResults$() {\n        return this._displayedResults$.asObservable();\n    }\n    get total$() {\n        return this._total$.asObservable();\n    }\n    get loading$() {\n        return this._loading$.asObservable();\n    }\n    get page() {\n        return this._state.page;\n    }\n    get pageSize() {\n        return this._state.pageSize;\n    }\n    get searchTerm() {\n        return this._state.searchTerm;\n    }\n\n    set page(page: number) {\n        this._set({ page });\n    }\n    set pageSize(pageSize: number) {\n        this._set({ pageSize });\n    }\n    set searchTerm(searchTerm: string) {\n        this._set({ searchTerm });\n    }\n    set sortColumn(sortColumn: string) {\n        this._set({ sortColumn });\n    }\n    set sortDirection(sortDirection: SortDirection) {\n        this._set({ sortDirection });\n    }\n\n    private _set(patch: Partial&lt;State&gt;) {\n        Object.assign(this._state, patch);\n        this._search$.next();\n    }\n\n    sort(apiResp: T[], column: string, direction: string): T[] {\n        console.log(`sourting on column ${column}`);\n        if (direction === '') {\n        return apiResp;\n        } else {\n        return [...apiResp].sort((a: T, b: T) =&gt; {\n            const res = compare(\n            this.getProperty(a, column),\n            this.getProperty(b, column)\n            );\n            return direction === 'asc' ? res : -res;\n        });\n        }\n    }\n\n    /**\n        * Ability to get nested properties, i.e. `name.common`\n        */\n    getProperty(object: any, propertyName: string) {\n        var parts = propertyName.split('.'),\n        length = parts.length,\n        i,\n        property = object || this;\n\n        for (i = 0; i &lt; length; i++) {\n        property = property[parts[i]];\n        }\n\n        return property;\n    }\n\n    abstract matches(resp: T, term: string): boolean;\n\n    private _search(): Observable&lt;SearchResult&lt;T&gt;&gt; {\n        const { sortColumn, sortDirection, pageSize, page, searchTerm } =\n        this._state;\n\n        // console.log(`allValues size ${this.allValues.length}`)\n        // console.log(`searchTerm: ${searchTerm}`)\n\n        // 1. sort\n        let displayResults: T[] = this.sort(\n        this.allValues,\n        sortColumn,\n        sortDirection\n        );\n\n        // 2. filter\n        displayResults = displayResults.filter((country) =&gt;\n        this.matches(country, searchTerm)\n        );\n        const total = displayResults.length;\n\n        // 3. paginate\n        displayResults = displayResults.slice(\n        (page - 1) * pageSize,\n        (page - 1) * pageSize + pageSize\n        );\n\n        // console.log(`displayResults size ${displayResults.length}`)\n        return of({ displayedResults: displayResults, total });\n    }\n}\n</code></pre>"},{"location":"software-development/angular/ng-bootstrap/snippets/search-page-2.component.html/","title":"Search page 2.component.html","text":"Simple Changes to component<pre><code>&lt;!-- Using *ngIf (1) --&gt;\n&lt;div *ngIf=\"selectedOption === 'countries'\"&gt;\n    &lt;div *ngIf=\"countryResults$ | async as countryResults\"&gt;\n        &lt;app-country-table [apiResults]=\"countryResults\"&gt;&lt;/app-country-table&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;div *ngIf=\"selectedOption === 'journals'\"&gt;\n    &lt;div *ngIf=\"journals$ | async as journals\"&gt;\n        &lt;app-journal-table [apiResults]=\"journals\"&gt;&lt;/app-journal-table&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;!-- Using *ngSwitch (2) --&gt;\n&lt;div [ngSwitch]=\"selectedOption\"&gt;\n  &lt;div *ngSwitchCase=\"'countries'\"&gt;\n    &lt;div *ngIf=\"countryResults$ | async as countryResults\"&gt;\n      &lt;app-country-table [apiResults]=\"countryResults\"&gt;&lt;/app-country-table&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div *ngSwitchCase=\"'journals'\"&gt;\n    &lt;div *ngIf=\"journals$ | async as journals\"&gt;\n      &lt;app-journal-table [apiResults]=\"journals\"&gt;&lt;/app-journal-table&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre> <ol> <li>Simple methodology of selectively showing child components with ngIf statement.</li> <li>More optimized solution using ngSwitch</li> </ol>"},{"location":"software-development/angular/ng-bootstrap/snippets/search-page-2.component.ts/","title":"Search page 2.component.ts","text":"<pre><code>@Component({\n    selector: 'app-search-page',\n    templateUrl: './search-page.component.html',\n    standalone: true,\n    imports: [\n        FormsModule,\n        CountryTableComponent,\n        WikiTableComponent,\n        JournalTableComponent,\n        NgIf,\n        NgFor,\n        AsyncPipe,\n    ],\n})\nexport class SearchPageComponent implements OnInit {\n    selectedOption = 'countries';\n    searchTerm = '';\n\n    countryResults$?: Observable&lt;Country[]&gt;;\n    journals$?: Observable&lt;Journal[]&gt;;\n\n    constructor(\n        private countryApiService: CountryApiService,\n        private journalApiService: JournalApiService\n    ) {}\n\n    ngOnInit() {}\n\n    onSearch(): void {\n        console.log(`Searching ${this.searchTerm}`);\n\n        switch (this.selectedOption) {\n        case 'countries':\n            this.countryResults$ = this.countryApiService\n            .findByName(this.searchTerm)\n            .pipe(\n                tap((results) =&gt; {\n                console.log(`fetched: ${JSON.stringify(results)}`);\n                })\n            );\n            break;\n        case 'journals':\n            this.journals$ = this.journalApiService\n            .findByName(this.searchTerm)\n            .pipe(\n                map((journalApiResponse: JournalApiResponse) =&gt; {\n                return journalApiResponse.message.items;\n                })\n            );\n            break;\n        }\n    }\n}        \n</code></pre>"},{"location":"software-development/angular/ng-bootstrap/snippets/search-page.component.html/","title":"Search page.component.html","text":"<pre><code>&lt;div class=\"input-group mb-3\"&gt;\n    &lt;input\n        type=\"text\"\n        class=\"form-control\"\n        [(ngModel)]=\"searchTerm\"\n        placeholder=\"Search country names\"\n        (keydown.enter)=\"onSearch()\"\n    /&gt;\n    &lt;div class=\"input-group-append\"&gt;\n        &lt;button class=\"btn btn-primary\" (click)=\"onSearch()\"&gt;Search&lt;/button&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;div *ngIf=\"apiResults$ | async as apiResults\"&gt;\n    &lt;app-country-table [apiResults]=\"apiResults\"&gt;&lt;/app-country-table&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"software-development/angular/ng-bootstrap/snippets/search-page.component.ts/","title":"Search page.component.ts","text":"<pre><code>@Component({\n    selector: 'app-search-page',\n    templateUrl: './search-page.component.html',\n    standalone: true,\n    imports: [FormsModule, CountryTableComponent, NgIf, NgFor, AsyncPipe],\n})\nexport class SearchPageComponent implements OnInit {\n    searchTerm = '';\n\n    apiResults$?: Observable&lt;Country[]&gt;;\n\n    constructor(private apiService: CountryApiService) {}\n\n    ngOnInit() {}\n\n    onSearch(): void {\n        console.log(`Searching ${this.searchTerm}`);\n        this.apiResults$ = this.apiService.findByName(this.searchTerm);\n    }\n}\n</code></pre>"},{"location":"software-development/angular/ng-bootstrap/snippets/ngComponentOutlet/country-table.component.ts/","title":"Country table.component.ts","text":"Inputs changed to setters to explicitly invoke dynamic updates<pre><code>export class CountryTableComponent implements OnInit {\n  countries$!: Observable&lt;Country[]&gt;;\n  total$!: Observable&lt;number&gt;;\n\n  @ViewChildren(NgbdSortableHeader) headers!: QueryList&lt;NgbdSortableHeader&gt;;\n\n  @Input() set apiResults(value: Country[]) {\n    if (this.tableHelper) {\n      console.log('setting value to tableHelper');\n      this.tableHelper.updateValues(value);\n    }\n  }\n  @Input() set loading(loading: boolean) {\n    if (this.tableHelper) {\n      this.tableHelper.loading = loading;\n    }\n  }\n\n  public tableHelper!: CountryTableFilter;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.tableHelper = new CountryTableFilter([]);\n\n    this.countries$ = this.tableHelper.displayedResults$;\n    this.total$ = this.tableHelper.total$;\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.tableHelper &amp;&amp; changes['apiResults']) {\n      console.log('apiResults changed to:', changes['apiResults'].currentValue);\n    }\n  }\n\n  onSort({ column, direction }: SortEvent) {\n    // resetting other headers\n    this.headers.forEach((header) =&gt; {\n      if (header.sortable !== column) {\n        header.direction = '';\n      }\n    });\n\n    this.tableHelper!.sortColumn = column.toString();\n    this.tableHelper!.sortDirection = direction;\n  }\n\n  identify(index: number, item: Country) {\n    return item.name.official;\n  }\n}\n</code></pre>"},{"location":"software-development/angular/ng-bootstrap/snippets/ngComponentOutlet/filterable-table.ts/","title":"Filterable table.ts","text":"Added changes<pre><code>+ public updateValues(values: T[]){\n+     this.allValues = values;\n+     this._search$.next();\n+ }\n\n+ set loading(loading: boolean){\n+     this._loading$.next(loading);\n+ }\n</code></pre>"},{"location":"software-development/angular/ng-bootstrap/snippets/ngComponentOutlet/search-page-2.component.ts/","title":"Search page 2.component.ts","text":"Component variable instead of getter<pre><code>export class SearchPageComponent implements OnInit {\n  selectedOption = 'countries';\n  searchTerm = '';\n\n  results$: Observable&lt;any[]&gt; = of([]);\n  results: any[] = [];\n\n  loading: boolean = false;\n\n  selectedComponent?: Type&lt;any&gt;;\n\n  constructor(\n    private countryApiService: CountryApiService,\n    private journalApiService: JournalApiService\n  ) {}\n\n  ngOnInit() {}\n\n  onSearch(): void {\n    console.log(`Searching ${this.searchTerm}`);\n\n    switch (this.selectedOption) {\n      case 'countries':\n        this.searchCountries();\n        this.selectedComponent = CountryTableComponent;\n        break;\n      case 'journals':\n        this.searchJournals();\n        this.selectedComponent = JournalTableComponent;\n        break;\n    }\n  }\n\n  private searchCountries() {\n    this.results$ = this.countryApiService.findByName(this.searchTerm);\n    this.subscribe();\n  }\n\n  private searchJournals() {\n    this.results$ = this.journalApiService.findByName(this.searchTerm).pipe(\n      map((journalApiResponse: JournalApiResponse) =&gt; {\n        return journalApiResponse.message.items;\n      })\n    );\n    this.subscribe();\n  }\n\n  private subscribe(): void {\n    this.loading = true;\n    this.results$.pipe(take(1)).subscribe({\n      next: (data) =&gt; {\n        this.results = data;\n      },\n      complete: () =&gt; {\n        this.loading = false;\n      },\n    });\n  }\n\n  get componentInput() {\n    return {\n      apiResults: this.results,\n      loading: this.loading,\n    };\n  }\n}\n</code></pre>"},{"location":"software-development/angular/ng-bootstrap/snippets/ngComponentOutlet/search-page.component.html/","title":"Search page.component.html","text":"<pre><code>&lt;!-- Replacing ngSwitch with ng-container --&gt;\n&lt;div [ngSwitch]=\"selectedOption\"&gt;\n  &lt;div *ngSwitchCase=\"'countries'\"&gt;\n    &lt;div *ngIf=\"countryResults$ | async as countryResults\"&gt;\n      &lt;app-country-table [apiResults]=\"countryResults\"&gt;&lt;/app-country-table&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div *ngSwitchCase=\"'journals'\"&gt;\n    &lt;div *ngIf=\"journals$ | async as journals\"&gt;\n      &lt;app-journal-table [apiResults]=\"journals\"&gt;&lt;/app-journal-table&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;!-- Click here! (1) --&gt;\n&lt;ng-container\n  *ngComponentOutlet=\"selectedComponent; inputs: componentInput\"\n&gt;&lt;/ng-container&gt;\n</code></pre> <ol> <li>Instead of an infinite <code>ngSwitchCase</code>, we can choose to instead take a dynamic approach with <code>ngComponentOutlet</code> within an <code>ng-container</code></li> </ol>"},{"location":"software-development/angular/ng-bootstrap/snippets/ngComponentOutlet/search-page.component.ts/","title":"Search page.component.ts","text":"<pre><code>export class SearchPageComponent implements OnInit {\n  selectedOption = 'countries';\n  searchTerm = '';\n\n  results$: Observable&lt;any[]&gt; = of([]);\n  results: any[] = [];\n\n  loading: boolean = false;\n\n  constructor(\n    private countryApiService: CountryApiService,\n    private journalApiService: JournalApiService\n  ) {}\n\n  ngOnInit() {}\n\n  onSearch(): void {\n    console.log(`Searching ${this.searchTerm}`);\n\n    switch (this.selectedOption) {\n      case 'countries':\n        this.searchCountries();\n        break;\n      case 'journals':\n        this.searchJournals();\n        break;\n    }\n  }\n\n  private searchCountries() {\n    this.results$ = this.countryApiService.findByName(this.searchTerm);\n    this.subscribe();\n  }\n\n  private searchJournals() {\n    this.results$ = this.journalApiService.findByName(this.searchTerm)\n    .pipe(\n      map((journalApiResponse: JournalApiResponse) =&gt; {\n        return journalApiResponse.message.items;\n      })\n    );\n    this.subscribe();\n  }\n\n  private subscribe(): void {\n    this.loading = true;\n    this.results$.pipe(take(1)).subscribe({\n      next: (data) =&gt; {\n        this.results = data;\n      },\n      complete: () =&gt; {\n        this.loading = false;\n      },\n    });\n  }\n\n  get componentInput() {\n    return {\n      apiResults: this.results,\n      loading: this.loading,\n    };\n  }\n\n  get selectedComponent(): Type&lt;any&gt; {\n    switch (this.selectedOption) {\n      case 'countries':\n        return CountryTableComponent;\n      case 'journals':\n        return JournalTableComponent;\n      default:\n        return CountryTableComponent;\n    }\n  }\n}\n</code></pre>"},{"location":"software-development/angular/templates/ng-matero/","title":"Ng matero","text":"","tags":["Angular","ng-matero"]},{"location":"software-development/angular/templates/ng-matero/#getting-started","title":"Getting started","text":"<p>You'll just following along the instructions at the Github page (https://github.com/ng-matero/ng-matero).  Basically just starting a new angular project and adding ng-matero to it.</p> <pre><code>ng new &lt;project-name&gt;\ncd &lt;project-name&gt;\nng add ng-matero\n</code></pre>","tags":["Angular","ng-matero"]},{"location":"software-development/angular/templates/ng-matero/#login-service","title":"Login Service","text":"<p>In <code>app.config</code> you can see that the provider set for <code>LoginService</code> is <code>FakeLoginService</code>. You'll want to comment this out so that the real <code>LoginService</code> is used.</p> <pre><code>{ provide: LoginService, useClass: FakeLoginService },\n</code></pre> <p>In the actual <code>login.service.ts</code> file, unless you're ready to implement the <code>menu</code> function on the backend, I went ahead and copied the method from the fake login service to use the local menu.json file.  This is fine.</p>","tags":["Angular","ng-matero"]},{"location":"software-development/angular/templates/ng-matero/#baseurl","title":"BaseURL","text":"<p>You'll obviously want to change the baseUrl parameter in the <code>environtment.ts</code> file so that you are calling your api.</p> <pre><code>export const environment = {\n  production: false,\n  baseUrl: 'http://localhost:9095/api',\n  useHash: false,\n};\n</code></pre>","tags":["Angular","ng-matero"]},{"location":"software-development/angular/templates/ng-matero/#avatar","title":"Avatar","text":"<p>Because I'm not returning an avatar currently with the user interface, I changed it to show a basic material user icon in both <code>src/app/theme/sidebar/user-panel.component.ts</code> and <code>src/app/theme/widgets/user.component.ts</code></p>","tags":["Angular","ng-matero"]},{"location":"software-development/angular/templates/ng-matero/#login-page","title":"Login Page","text":"<p>Remove all references to <code>ng-matero</code></p>","tags":["Angular","ng-matero"]},{"location":"software-development/angular/templates/ng-matero/#header-modifications","title":"Header modifications","text":"<p>Remove unnecessary buttons in <code>header.component.html</code></p>","tags":["Angular","ng-matero"]},{"location":"software-development/angular/templates/templates-overview/","title":"Overview","text":"","tags":["Angular","Software Templates"]},{"location":"software-development/angular/templates/templates-overview/#component-libraries","title":"Component Libraries","text":"","tags":["Angular","Software Templates"]},{"location":"software-development/angular/templates/templates-overview/#angular-material","title":"Angular Material","text":"<ul> <li>Docs   (https://material.angular.io/)</li> <li>Github (https://github.com/angular/material.angular.io)</li> </ul>","tags":["Angular","Software Templates"]},{"location":"software-development/angular/templates/templates-overview/#bootstrap","title":"Bootstrap","text":"<ul> <li>Docs (https://getbootstrap.com/docs/4.1/layout/grid/)</li> </ul>","tags":["Angular","Software Templates"]},{"location":"software-development/angular/templates/templates-overview/#ng-bootstrap","title":"ng-bootstrap","text":"<ul> <li>Docs (https://ng-bootstrap.github.io)</li> </ul>","tags":["Angular","Software Templates"]},{"location":"software-development/angular/templates/templates-overview/#ngx-bootstrap","title":"ngx-bootstrap","text":"<ul> <li>Docs (https://valor-software.com/ngx-bootstrap)</li> </ul>","tags":["Angular","Software Templates"]},{"location":"software-development/angular/templates/templates-overview/#primeng","title":"PrimeNG","text":"<ul> <li>Docs (https://primeng.org/autocomplete)</li> </ul> <p>PrimeNG also has a free admin template.</p>","tags":["Angular","Software Templates"]},{"location":"software-development/angular/templates/templates-overview/#ng-select","title":"ng-select","text":"<ul> <li>Demo (https://ng-select.github.io/ng-select)</li> <li>Docs (https://github.com/ng-select/ng-select?tab=readme-ov-file#getting-started)</li> </ul>","tags":["Angular","Software Templates"]},{"location":"software-development/angular/templates/templates-overview/#coreui","title":"CoreUI","text":"<ul> <li>Docs                  (https://coreui.io/angular/docs/getting-started/introduction/)</li> <li>Admin Template Demo   (https://coreui.io/demos/angular/5.0/free/#/dashboard)</li> <li>Admin Template Github (https://github.com/coreui/coreui-free-angular-admin-template)</li> </ul> <p>CoreUI also has a free admin template</p>","tags":["Angular","Software Templates"]},{"location":"software-development/angular/templates/templates-overview/#ng-zorro","title":"NG-Zorro","text":"<ul> <li>Docs                (https://ng.ant.design/components/overview/en)</li> <li>Admin Template      (https://ng-alain.surge.sh/)</li> <li>Admin Template Repo (https://github.com/ng-alain/ng-alain)</li> </ul>","tags":["Angular","Software Templates"]},{"location":"software-development/angular/templates/templates-overview/#templates","title":"Templates","text":"","tags":["Angular","Software Templates"]},{"location":"software-development/angular/templates/templates-overview/#ng-matero","title":"Ng-Matero","text":"<ul> <li>Github    (https://github.com/ng-matero/ng-matero)</li> <li>Demo      (https://ng-matero.github.io/ng-matero/dashboard)</li> <li>Demo Repo (https://github.com/ng-matero/starter)</li> <li>Docs      (https://nzbin.gitbook.io/ng-matero)</li> </ul>","tags":["Angular","Software Templates"]},{"location":"software-development/angular/templates/templates-overview/#creative-tim-material-dashboard","title":"Creative Tim Material Dashboard","text":"<ul> <li>Demo   (https://demos.creative-tim.com/material-dashboard-angular2/#/dashboard)</li> <li>Github (https://github.com/creativetimofficial/material-dashboard-angular2)</li> </ul>","tags":["Angular","Software Templates"]},{"location":"software-development/docker/dockerizing-an-app/","title":"Dockerizing an application","text":"","tags":["Spring Boot","Docker","Angular","Database"]},{"location":"software-development/docker/dockerizing-an-app/#creating-a-docker-file","title":"Creating a Docker File","text":"<p>First thing you really need to do for your application is to create a <code>Dockerfile</code> which will essentially be a build script for the docker image.</p> Dockerfile<pre><code># Use Amazon Corretto 17 as the base image\nFROM amazoncorretto:17\n\n# Create app directory\nRUN mkdir -p /var/apps\n\n# Set the working directory\nWORKDIR /var/apps\n\n# Add the application's jar to the container\nADD build/libs/app.jar app.jar\n\n# Make port 9085 available to the world outside this container\nEXPOSE 9085\n\n# Run the jar file\nENTRYPOINT [\"java\",\"-Xmx512m\",\"-jar\",\"app.jar\"]\n</code></pre> <p>When it comes to deploying our app in a docker container on our server we have two strategies</p> <ol> <li> <p>Deploy our app.jar, Dockerfile, and a docker-compose.yml file which runs the docker command to build the image and run the container</p> </li> <li> <p>Build the image locally, deploy the image to a docker repository, like our self hosted nexus, then simply run a docker pull command on an already deployed docker-compose.yml file that specifies the docker repository, credentials, and image name.</p> </li> </ol>","tags":["Spring Boot","Docker","Angular","Database"]},{"location":"software-development/docker/dockerizing-an-app/#deploying-dockerfile-with-build-and-docker-compose","title":"Deploying Dockerfile with build and docker-compose","text":"<p>On the target server, we can go ahead and create a directory for our docker app in </p> <pre><code>/home/thomas/docker/springboot-app\n</code></pre> <p>Let's create a <code>docker-compose.yml</code> file in our app directory next to our <code>Dockerfile</code>.</p> docker-compose.yml<pre><code>version: '3.8'\n\nservices:\n  springboot-app:\n    build:\n      context: .  # This should be the directory where Dockerfile is located\n      dockerfile: Dockerfile\n    ports:\n      - \"9085:9085\"  # Maps the host port to the container's exposed port\n    environment:\n      - JAVA_OPTS=-Xmx512m\n    restart: always\n    volumes:\n      - ./logs:/var/opt/fantasydashboard/spring/logs\n</code></pre> <p>Note</p> <p>If you wanted to run this app using docker compose, use the <code>--build</code> flag to ensure it's building the image, particularly if you update the <code>app.jar</code> file.  So that would look like</p> <pre><code>docker compose up -d --build\n</code></pre>","tags":["Spring Boot","Docker","Angular","Database"]},{"location":"software-development/docker/dockerizing-an-app/#deploying-with-gradle","title":"Deploying with Gradle","text":"<p>In this SpringBoot example, we'll use the gradle plugin <code>id 'org.hidetake.ssh' version '2.11.2'</code> to ssh to our server, deploy each file, and run the docker up command.</p> build.gradle<pre><code>plugins {\n    id \"application\"\n    id 'java'\n    id 'org.springframework.boot' version '3.3.3'\n    id 'io.spring.dependency-management' version '1.0.11.RELEASE'\n    id 'org.hidetake.ssh' version '2.11.2' // SSH plugin\n}\n\nversion '1.0-SNAPSHOT'\n\ndependencies {\n...\n}\n\n/**\n * Make the you add the server as a known_host\n * To do this, connect to it in command prompt like\n * ssh -i \"C:\\Users\\Thomas\\path\\to\\private\\key\\file\" &lt;linux-user-name&gt;@&lt;server-ip-address\n */\nssh.settings {\n    knownHosts = file(\"${System.env.USERPROFILE}/.ssh/known_hosts\")\n}\n\n/**\n * These are properties in my user gradle.properties file located at C:\\Users\\Thomas\\.gradle\\gradle.properties\n*/\n\nremotes {\n    homeServer {\n        host = home_ip // Replace with your instance IP\n        user = home_user // Replace with your SSH username\n        identity = file(home_pk) // Replace with the path to your private SSH key\n    }\n}\n\nbootJar {\n    archiveFileName = 'app.jar'\n}\n\ntask deployHome(dependsOn: 'bootJar') {\n    doLast {\n        ssh.run {\n            session(remotes.homeServer) {\n                // Assuming your JAR is built to the build/libs directory\n                put from: project.file(\"build/libs/app.jar\"), into: '/home/thomas/docker/fantasy-microservices/' // Replace with remote path\n                put from: project.file(\"Dockerfile\"), into: '/home/thomas/docker/fantasy-microservices/' // Replace with remote path\n                put from: project.file(\"docker-compose.yml\"), into: '/home/thomas/docker/fantasy-microservices/' // Replace with remote path\n                // Restart the service on the remote server\n                execute 'docker compose -f /home/thomas/docker/fantasy-microservices/docker-compose.yml up -d --build' // Replace with your actual service name\n            }\n        }\n    }\n}\n</code></pre> <p>Now when we run the gradle task <code>deployHome</code>, we'll see our build <code>app.jar</code>, <code>Dockerfile</code>, and <code>docker-compose.yml</code> file get deployed to the server and the container is up and running.</p>","tags":["Spring Boot","Docker","Angular","Database"]},{"location":"software-development/github/workflows/deploy-to-github-pages/","title":"Deploy to GitHub Pages","text":"<p>Add the following <code>cicd.yml</code> file to <code>.github/workflows</code>.  </p> <p>Then in the Repository <code>Settings</code>, go to <code>Pages</code> and set the <code>Build and deployment</code> <code>Source</code> setting to <code>GitHub Actions</code>.  This way, when you push to <code>main</code>, GitHub will compile and deploy the site for you.</p> <p>You can navigate to the MkDocs demo repository which contains this file.  Make sure the watch the video!</p> cicd.yml<pre><code>name: Deploy MkDocs site to GitHub Pages\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      - name: Set up Python\n        uses: actions/setup-python@v4\n        with:\n          python-version: '3.x'\n\n      - name: Install dependencies\n        run: |\n          pip install mkdocs mkdocs-material\n\n      - name: Build MkDocs site\n        run: |\n          mkdocs build\n\n      - name: Setup Pages\n        uses: actions/configure-pages@v3\n\n      - name: Upload artifact\n        uses: actions/upload-pages-artifact@v1\n        with:\n          path: ./site\n\n  deploy:\n    if: github.ref == 'refs/heads/main'\n    runs-on: ubuntu-latest\n    needs: build\n\n    permissions:\n      pages: write\n      id-token: write\n\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v2\n</code></pre>","tags":["Github","CI/CD","MkDocs","Github Actions","Github Pages"]},{"location":"software-development/java/log4j2-config/","title":"Log4j2 config","text":"<p>An example Log4j2 configuration file, with custom colorization console output.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;Configuration status=\"error\" packages=\"com.thomaswilde.fact.application\"&gt;\n\n  &lt;Appenders&gt;\n    &lt;Console name=\"Console\" target=\"SYSTEM_OUT\"&gt;\n      &lt;PatternLayout disableAnsi=\"false\" pattern=\"%d %highlight{%-7level}{FATAL=red, ERROR=red, WARN=yellow, INFO=green, DEBUG=blue, TRACE=grey} %-60logger{36} Line %-5L %-20M - %highlight{%msg}{FATAL=red, ERROR=red, WARN=yellow, INFO=green, DEBUG=blue, TRACE=grey}%n\"/&gt;\n    &lt;/Console&gt;\n    &lt;File name=\"MyFile\" fileName=\"logs/app.log\" append=\"false\"&gt;\n&lt;!--      &lt;PatternLayout pattern=\"%d %-7level %logger{36} - %msg%n\"/&gt;--&gt;\n      &lt;PatternLayout pattern=\"%d %-7level %-60logger{36} Line %-5L %-20M - %msg%n\"/&gt;\n    &lt;/File&gt;\n    &lt;LogInterceptor name=\"CustomAppender\"&gt;\n      &lt;PatternLayout pattern=\"%d %-7level %-60logger{36} Line %-5L %-20M - %msg%n\"/&gt;\n    &lt;/LogInterceptor&gt;\n  &lt;/Appenders&gt;\n  &lt;Loggers&gt;\n    &lt;Logger name=\"com.thomaswilde.wildebeans.database.DbUtil2\" level=\"DEBUG\" /&gt;\n    &lt;Logger name=\"com.thomaswilde.fxcore.FXPropertyUtils\" level=\"DEBUG\" /&gt;\n    &lt;Logger name=\"com.thomaswilde.wildebeans.WildeBeanTable\" level=\"DEBUG\" /&gt;\n    &lt;Logger name=\"com.thomaswilde.wildebeans.WildePropertySheet3\" level=\"DEBUG\" /&gt;\n    &lt;Logger name=\"com.thomaswilde.fact.application.AppPreferences\" level=\"INFO\" /&gt;\n    &lt;Logger name=\"com.thomaswilde.fact.entities.data.Job\" level=\"DEBUG\" /&gt;\n    &lt;Logger name=\"com.thomaswilde.wildebeans.WildeBean\" level=\"DEBUG\" /&gt;\n    &lt;Logger name=\"org.apache.hc.client5.http\" level=\"INFO\" /&gt;\n    &lt;Root level=\"INFO\"&gt;\n      &lt;!-- Only events at DIAG level or more specific are sent to the console. --&gt;\n      &lt;AppenderRef ref=\"Console\" level=\"verbose\" /&gt;\n      &lt;AppenderRef ref=\"MyFile\" level=\"trace\" /&gt;\n      &lt;AppenderRef ref=\"CustomAppender\" level=\"trace\" /&gt;\n    &lt;/Root&gt;\n  &lt;/Loggers&gt;\n&lt;/Configuration&gt;\n</code></pre>","tags":["Log4j2","Java"]},{"location":"software-development/java/JavaFX/live-templates/vs-code/","title":"Vs code","text":"<p>Open the Command Palette (Ctrl+Shift+P or Cmd+Shift+P). Type \"Snippets: Configure User Snippets\" and select the option. Choose the language for which you want to create the snippet (e.g., \"java\"). This will create a file named java.json within the .vscode/snippets directory.</p> <p>Inside <code>java.json</code></p> <pre><code>{\n    \"fxprop-boolean\": {\n        \"prefix\": \"fxprop-boolean\",\n        \"body\": [\n            \"// ${1:propertyName}\",\n            \"private final BooleanProperty ${1:propertyName} = new SimpleBooleanProperty(this, \\\"${1:propertyName}\\\");\",\n            \"\",\n            \"public final BooleanProperty ${1:propertyName}Property() {\",\n            \"   return ${1:propertyName};\",\n            \"}\",\n            \"public final boolean is${1/(.*)/${1:/capitalize}/}() {\",\n            \"   return ${1:propertyName}Property().get();\",\n            \"}\",\n            \"public final void set${1/(.*)/${1:/capitalize}/}(boolean value) {\",\n            \"    ${1:propertyName}Property().set(value);\",\n            \"}\"\n        ],\n        \"description\": \"Generates a JavaFX boolean property with getters and setters\"\n    },\n    \"fxprop-boolean-readonly\": {\n        \"prefix\": \"fxprop-boolean-readonly\",\n        \"body\": [\n            \"// ${1:propertyName}\",\n            \"private final ReadOnlyBooleanWrapper ${1:propertyName} = new ReadOnlyBooleanWrapper(this, \\\"${1:propertyName}\\\");\",\n            \"\",\n            \"public final ReadOnlyBooleanWrapper ${1:propertyName}Property() {\",\n            \"   return ${1:propertyName}.getReadOnlyProperty();\",\n            \"}\",\n            \"public final boolean is${1/(.*)/${1:/capitalize}/}() {\",\n            \"   return ${1:propertyName}Property().get();\",\n            \"}\"\n        ],\n        \"description\": \"Generates a JavaFX boolean property with getters and setters\"\n    },\n    \"fxprop-double\": {\n        \"prefix\": \"fxprop-double\",\n        \"body\": [\n            \"// ${1:propertyName}\",\n            \"private final DoubleProperty ${1:propertyName} = new SimpleDoubleProperty(this, \\\"${1:propertyName}\\\");\",\n            \"\",\n            \"public final DoubleProperty ${1:propertyName}Property() {\",\n            \"   return ${1:propertyName};\",\n            \"}\",\n            \"public final double get${1/(.*)/${1:/capitalize}/}() {\",\n            \"   return ${1:propertyName}Property().get();\",\n            \"}\",\n            \"public final void set${1/(.*)/${1:/capitalize}/}(double value) {\",\n            \"    ${1:propertyName}Property().set(value);\",\n            \"}\"\n        ],\n        \"description\": \"Generates a JavaFX string property with getters and setters\"\n    },\n    \"fxprop-double-readonly\": {\n        \"prefix\": \"fxprop-double-readonly\",\n        \"body\": [\n            \"// ${1:propertyName}\",\n            \"private final ReadOnlyDoubleWrapper ${1:propertyName} = new ReadOnlyDoubleWrapper(this, \\\"${1:propertyName}\\\");\",\n            \"\",\n            \"public final ReadOnlyDoubleWrapper ${1:propertyName}Property() {\",\n            \"   return ${1:propertyName}.getReadOnlyProperty();\",\n            \"}\",\n            \"public final double get${1/(.*)/${1:/capitalize}/}() {\",\n            \"   return ${1:propertyName}Property().get();\",\n            \"}\"\n        ],\n        \"description\": \"Generates a JavaFX boolean property with getters and setters\"\n    },\n    \"fxprop-integer\": {\n        \"prefix\": \"fxprop-integer\",\n        \"body\": [\n            \"// ${1:propertyName}\",\n            \"private final IntegerProperty ${1:propertyName} = new SimpleIntegerProperty(this, \\\"${1:propertyName}\\\");\",\n            \"\",\n            \"public final IntegerProperty ${1:propertyName}Property() {\",\n            \"   return ${1:propertyName};\",\n            \"}\",\n            \"public final int get${1/(.*)/${1:/capitalize}/}() {\",\n            \"   return ${1:propertyName}Property().get();\",\n            \"}\",\n            \"public final void set${1/(.*)/${1:/capitalize}/}(int value) {\",\n            \"    ${1:propertyName}Property().set(value);\",\n            \"}\"\n        ],\n        \"description\": \"Generates a JavaFX string property with getters and setters\"\n    },\n    \"fxprop-integer-readonly\": {\n        \"prefix\": \"fxprop-integer-readonly\",\n        \"body\": [\n            \"// ${1:propertyName}\",\n            \"private final ReadOnlyIntegerWrapper ${1:propertyName} = new ReadOnlyIntegerWrapper(this, \\\"${1:propertyName}\\\");\",\n            \"\",\n            \"public final ReadOnlyIntegerWrapper ${1:propertyName}Property() {\",\n            \"   return ${1:propertyName}.getReadOnlyProperty();\",\n            \"}\",\n            \"public final int get${1/(.*)/${1:/capitalize}/}() {\",\n            \"   return ${1:propertyName}Property().get();\",\n            \"}\"\n        ],\n        \"description\": \"Generates a JavaFX boolean property with getters and setters\"\n    },\n    \"fxprop-long\": {\n        \"prefix\": \"fxprop-long\",\n        \"body\": [\n            \"// ${1:propertyName}\",\n            \"private final LongProperty ${1:propertyName} = new SimpleLongProperty(this, \\\"${1:propertyName}\\\");\",\n            \"\",\n            \"public final LongProperty ${1:propertyName}Property() {\",\n            \"   return ${1:propertyName};\",\n            \"}\",\n            \"public final long get${1/(.*)/${1:/capitalize}/}() {\",\n            \"   return ${1:propertyName}Property().get();\",\n            \"}\",\n            \"public final void set${1/(.*)/${1:/capitalize}/}(long value) {\",\n            \"    ${1:propertyName}Property().set(value);\",\n            \"}\"\n        ],\n        \"description\": \"Generates a JavaFX string property with getters and setters\"\n    },\n    \"fxprop-long-readonly\": {\n        \"prefix\": \"fxprop-long-readonly\",\n        \"body\": [\n            \"// ${1:propertyName}\",\n            \"private final ReadOnlyLongWrapper ${1:propertyName} = new ReadOnlyLongWrapper(this, \\\"${1:propertyName}\\\");\",\n            \"\",\n            \"public final ReadOnlyLongWrapper ${1:propertyName}Property() {\",\n            \"   return ${1:propertyName}.getReadOnlyProperty();\",\n            \"}\",\n            \"public final long get${1/(.*)/${1:/capitalize}/}() {\",\n            \"   return ${1:propertyName}Property().get();\",\n            \"}\"\n        ],\n        \"description\": \"Generates a JavaFX boolean property with getters and setters\"\n    },\n    \"fxprop-object\": {\n        \"prefix\": \"fxprop-object\",\n        \"body\": [\n            \"// ${1:propertyName}\",\n            \"private final ObjectProperty&lt;${2:propertyType}&gt; ${1:propertyName} = new SimpleObjectProperty&lt;&gt;(this, \\\"${1:propertyName}\\\");\",\n            \"\",\n            \"public final ObjectProperty&lt;${2:propertyType}&gt; ${1:propertyName}Property() {\",\n            \"   return ${1:propertyName};\",\n            \"}\",\n            \"public final ${2:propertyType} get${1/(.*)/${1:/capitalize}/}() {\",\n            \"   return ${1:propertyName}Property().get();\",\n            \"}\",\n            \"public final void set${1/(.*)/${1:/capitalize}/}(${2:propertyType} value) {\",\n            \"    ${1:propertyName}Property().set(value);\",\n            \"}\"\n        ],\n        \"description\": \"Generates a JavaFX string property with getters and setters\"\n    },\n    \"fxprop-object-readonly\": {\n        \"prefix\": \"fxprop-object-readonly\",\n        \"body\": [\n            \"// ${1:propertyName}\",\n            \"private final ReadOnlyObjectWrapper&lt;${2:propertyType}&gt; ${1:propertyName} = new ReadOnlyObjectWrapper(this, \\\"${1:propertyName}\\\");\",\n            \"\",\n            \"public final ReadOnlyObjectWrapper&lt;${2:propertyType}&gt; ${1:propertyName}Property() {\",\n            \"   return ${1:propertyName}.getReadOnlyProperty();\",\n            \"}\",\n            \"public final ${2:propertyType} get${1/(.*)/${1:/capitalize}/}() {\",\n            \"   return ${1:propertyName}Property().get();\",\n            \"}\"\n        ],\n        \"description\": \"Generates a JavaFX boolean property with getters and setters\"\n    },\n    \"fxprop-string\": {\n        \"prefix\": \"fxprop-string\",\n        \"body\": [\n            \"// ${1:propertyName}\",\n            \"private final StringProperty ${1:propertyName} = new SimpleStringProperty(this, \\\"${1:propertyName}\\\");\",\n            \"\",\n            \"public final StringProperty ${1:propertyName}Property() {\",\n            \"   return ${1:propertyName};\",\n            \"}\",\n            \"public final String get${1/(.*)/${1:/capitalize}/}() {\",\n            \"   return ${1:propertyName}Property().get();\",\n            \"}\",\n            \"public final void set${1/(.*)/${1:/capitalize}/}(String value) {\",\n            \"    ${1:propertyName}Property().set(value);\",\n            \"}\"\n        ],\n        \"description\": \"Generates a JavaFX string property with getters and setters\"\n    },\n    \"fxprop-string-readonly\": {\n        \"prefix\": \"fxprop-string-readonly\",\n        \"body\": [\n            \"// ${1:propertyName}\",\n            \"private final ReadOnlyStringWrapper ${1:propertyName} = new ReadOnlyStringWrapper(this, \\\"${1:propertyName}\\\");\",\n            \"\",\n            \"public final ReadOnlyStringWrapper ${1:propertyName}Property() {\",\n            \"   return ${1:propertyName}.getReadOnlyProperty();\",\n            \"}\",\n            \"public final String get${1/(.*)/${1:/capitalize}/}() {\",\n            \"   return ${1:propertyName}Property().get();\",\n            \"}\"\n        ],\n        \"description\": \"Generates a JavaFX boolean property with getters and setters\"\n    },\n    \"fxprop-list\": {\n        \"prefix\": \"fxprop-list\",\n        \"body\": [\n            \"// ${1:propertyName}\",\n            \"private final SimpleListProperty&lt;${2:propertyType}&gt; ${1:propertyName} = new SimpleListProperty(this, \\\"${1:propertyName}\\\", FXCollections.observableArrayList());\",\n            \"\",\n            \"public final SimpleListProperty&lt;${2:propertyType}&gt; get${1/(.*)/${1:/capitalize}/}() {\",\n            \"   return ${1:propertyName};\",\n            \"}\",\n            \"public final void set${1/(.*)/${1:/capitalize}/}(List&lt;${2:propertyType}&gt; value) {\",\n            \"    get${1/(.*)/${1:/capitalize}/}().setAll(value);\",\n            \"}\"\n        ],\n        \"description\": \"Generates a JavaFX string property with getters and setters\"\n    },\n    \"fxprop-list-lazy\": {\n        \"prefix\": \"fxprop-list-lazy\",\n        \"body\": [\n            \"// ${1:propertyName}\",\n            \"private final SimpleListProperty&lt;${2:propertyType}&gt; ${1:propertyName};\",\n            \"\",\n            \"public final SimpleListProperty&lt;${2:propertyType}&gt; get${1/(.*)/${1:/capitalize}/}() {\",\n            \"   if(${1:propertyName} == null){\",\n            \"       ${1:propertyName = new SimpleListProperty(this, \\\"${1:propertyName}\\\", FXCollections.observableArrayList());\"\n            \"   }\"\n            \"   return ${1:propertyName};\",\n            \"}\",\n            \"public final void set${1/(.*)/${1:/capitalize}/}(List&lt;${2:propertyType}&gt; value) {\",\n            \"    get${1/(.*)/${1:/capitalize}/}().setAll(value);\",\n            \"}\"\n        ],\n        \"description\": \"Generates a JavaFX string property with getters and setters\"\n    },\n    \"log\": {\n        \"prefix\": \"log\",\n        \"body\": [\n            \"private static final Logger log = LoggerFactory.getLogger(${1:className}.class);\"\n        ],\n        \"description\": \"Inserts a Logger declaration for the copied class name\"\n    }\n}\n</code></pre>","tags":["VS Code","JavaFX","Live Templates"]},{"location":"software-development/java/jdbc/meta-data/","title":"Meta data","text":"<pre><code>package com.thomasjwilde.WildeDB.Database;\n\nimport com.sun.istack.internal.NotNull;\nimport com.sun.istack.internal.Nullable;\nimport com.thomasjwilde.WildeDB.WildeBeans.WildeApplication;\nimport com.thomasjwilde.WildeDB.WildeBeans.WildeBean;\nimport com.thomasjwilde.WildeDB.WildeBeans.WildeBeanProperty;\nimport com.thomasjwilde.WildeDB.WildeBeans.WildeBeanUtils;\nimport org.apache.commons.lang3.StringUtils;\n\nimport java.sql.*;\nimport java.util.*;\n\npublic class Database {\n\n    private static Database database;\n    private Connection connection;\n    public enum DatabaseType{\n        SQLITE, MSSQL, OSQL, MYSQL\n    }\n\n    public static void main(String[] args) {\n        Database.init(DatabaseType.SQLITE, \"jdbc:sqlite:Test.db\");\n        Database database = Database.getInstance();\n        //Retrieving the meta data object\n//        database.initApplicationBeans();\n\n        WildeApplication.getInstance().printAllBeanProperties();\n\n    }\n\n    /**\n     * Method is called prior to any database methods called\n     * @param databaseType Enum for database type for the connection (SQLITE, MSSQL, OSQL, MYSQL)\n     * @param connectionString Connection string currently is only appropriate for SQLITE\n     * @see DatabaseType\n     */\n    public static void init(DatabaseType databaseType, String connectionString){\n        switch (databaseType) {\n            case SQLITE:\n                try {\n                    // Init Connection\n                    getInstance().connection = DriverManager.getConnection(connectionString);\n\n                    // Get database table meta data\n                    getInstance().initApplicationBeans();\n\n                    // Close database connection on app close\n                    Runtime current = Runtime.getRuntime();\n                    current.addShutdownHook(new Thread(){\n                        @Override\n                        public void run() {\n                            super.run();\n                            getInstance().onApplicationClose();\n                        }\n                    });\n                } catch (SQLException throwables) {\n                    throwables.printStackTrace();\n                }\n                break;\n        }\n    }\n\n    private Database(){\n//        if(connection == null){\n//            throw new NullPointerException(\"init must be called prior to getInstance()\");\n//        }\n    }\n\n    public static Database getInstance(){\n        if(database == null){\n            database = new Database();\n        }\n        return database;\n    }\n\n    /**\n     * This method creates wildebeans for all of the tables in the database, wildeproperties for each of those\n     * wildebeans, and all subbeans for foreign key references, and properties for those subbeans.  All of these\n     * beans are passed to the WildeApplication singleton and can then be used as templates when actual objects are\n     * created from those beans.  These templates show the been relationship and allow for automatic join statements in\n     * quereies.\n     */\n    private void initApplicationBeans(){\n\n        ResultSet databaseMetaRs = null;\n        ResultSet databaseHelperRs = null;\n        ResultSet rsPrimaryKey = null;\n        ResultSet rsForeignKey = null;\n        ResultSet rsTableColumns = null;\n\n        try {\n            DatabaseMetaData metaData = database.connection.getMetaData();\n\n            String[] types = {\"TABLE\"};\n            //Retrieving the columns in the database\n            databaseMetaRs = metaData.getTables(null, null, \"t_%\", types);\n            int iter = 1;\n            while (databaseMetaRs.next()) {\n\n                String tableName = databaseMetaRs.getString(\"TABLE_NAME\");\n                iter++;\n\n                // Create a unique wildebean\n                WildeBean wildeBean = new WildeBean();\n                wildeBean.setSqlTableName(tableName);\n\n                System.out.println(\"New Table: \" + tableName);\n                // Set the primary key\n                rsPrimaryKey = metaData.getPrimaryKeys(null, null, tableName);\n                // PrimaryKey resultSet will be closed if there is no primary key\n                // TODO Will need to be able to have multiple primary keys\n                if(!rsPrimaryKey.isClosed())\n                    wildeBean.setPrimaryKeyColumn(rsPrimaryKey.getString(\"COLUMN_NAME\"));\n\n                // Set the foreign keys\n                // Need to look into what would happen with composite foreign keys\n                // This is, a foreign key that has multiple columns which refer to compisite primary key of another table\n                // Reference https://sqlite.org/foreignkeys.html#fk_composite\n                rsForeignKey = metaData.getImportedKeys(null, null, tableName);\n                ResultSetMetaData rsmd = rsForeignKey.getMetaData();\n\n                while (rsForeignKey.next()) {\n\n                    ForeignKey foreignKey = new ForeignKey();\n                    foreignKey.setColumnName(rsForeignKey.getString(\"FKCOLUMN_NAME\"));\n                    foreignKey.setReferencedTable(rsForeignKey.getString(\"PKTABLE_NAME\"));\n                    foreignKey.setReferencedTablePK(rsForeignKey.getString(\"PKCOLUMN_NAME\"));\n\n                    if (!wildeBean.getForeignKeys().contains(foreignKey)) {\n                        wildeBean.getForeignKeys().add(foreignKey);\n                    }\n\n                    // Following commented code prints all the column names and values from the\n                        /*for (int i = 1; i &lt;= rsmd.getColumnCount() ; i++) {\n                            System.out.println(\"ImportKey column: \" + rsmd.getColumnName(i) + \"; value: \" + rsForeignKey.getObject(rsmd.getColumnName(i)));\n                        }\n                        System.out.println();*/\n                }\n\n                // Add the rest of the columns\n                // Get the result set for the columns\n                rsTableColumns = metaData.getColumns(null, null, tableName, null);\n                // ResultSetMetaData can be used to print all columns and values\n                ResultSetMetaData columnMd = rsTableColumns.getMetaData();\n\n                // Create the WildeBeanProperties for the WildeBean\n                createWildeBeanPropertiesForTableColumnRs(rsTableColumns, wildeBean);\n\n                // Add the bean to the application beans\n                WildeApplication.getInstance().getUniqueDatabaseBeans().add(wildeBean);\n\n            }\n\n            // get the helper table info to populate into bean\n            databaseHelperRs = metaData.getTables(null, null, \"h_%\", types);\n            while (databaseHelperRs.next()) {\n                String tableName = databaseHelperRs.getString(\"TABLE_NAME\");\n                switch (tableName) {\n                    case WildeApplication.TABLE_SUPPORT:\n                        // Get the table support columns and add them to the Application Wilde Beans\n\n                        // Create a unique wildebean\n                        WildeBean wildeBean = new WildeBean();\n                        wildeBean.setSqlTableName(tableName);\n\n                        System.out.println(\"New Table: \" + tableName);\n                        // Set the primary key\n                        rsPrimaryKey = metaData.getPrimaryKeys(null, null, tableName);\n                        // PrimaryKey resultSet will be closed if there is no primary key\n                        if(!rsPrimaryKey.isClosed())\n                            wildeBean.setPrimaryKeyColumn(rsPrimaryKey.getString(\"COLUMN_NAME\"));\n                        // There are no foreign key columns for the table support\n\n                        // Create the WildeBeanProperties for the WildeBean\n                        rsTableColumns = metaData.getColumns(null, null, tableName, null);\n                        ResultSetMetaData columnMd = rsTableColumns.getMetaData();\n\n                        // Create the WildeBeanProperties for the WildeBean\n                        createWildeBeanPropertiesForTableColumnRs(rsTableColumns, wildeBean);\n\n                        // Add the bean to the application beans\n                        WildeApplication.getInstance().getUniqueDatabaseBeans().add(wildeBean);\n\n                        break;\n                }\n\n            }\n\n            // Create sub beans for foreign key values\n            for (WildeBean wildeBean : WildeApplication.getInstance().getUniqueDatabaseBeans()) {\n                setSubBeans(wildeBean);\n            }\n\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        } finally {\n            close(databaseMetaRs);\n            close(rsPrimaryKey);\n            close(rsForeignKey);\n            close(rsTableColumns);\n        }\n    }\n\n    /**\n     * This is a recursive method called within initApplicationBeans() to set all sub-beans.  The sub beans are set\n     * to the property of the parent bean that owns them, and given a reference to the parent bean.  Parent beans have\n     * a method to retrieve their children beans.\n     * @param wildeBean WildeBean to check for subbeans.\n     */\n    private void setSubBeans(WildeBean wildeBean) {\n\n        foreignkeyloop:\n        for (ForeignKey foreignKey : wildeBean.getForeignKeys()) {\n            WildeBeanProperty wildeBeanProperty = wildeBean.getWildeBeanProperty(foreignKey.getColumnName());\n            WildeBean subBean = WildeApplication.getInstance().getWildeBean(foreignKey.getReferencedTable()).newInstance();\n\n            // Go ahead and check the bean name to make sure there is not a circular reference which would cause a stackoverflow\n            String subBeanName = WildeBeanUtils.createBeanName(wildeBeanProperty);\n            if (subBeanName.contains(\"$\")) {\n                // check to make sure there's not a circular reference to the latest bnea\n                String[] individualBeanNames = subBeanName.split(\"\\\\$\");\n\n                for (int i = 0; i &lt; individualBeanNames.length-1; i++) {\n                    /*System.out.println(\"Checking bean name \" + individualBeanNames[individualBeanNames.length-1] + \" for to ensure it's not equal to the latest bean name \" + individualBeanNames[i]);*/\n                    if(Objects.equals(individualBeanNames[individualBeanNames.length-1], individualBeanNames[i])){\n                        System.out.println(\"ERROR -- LOOP DETECTED, NOT CREATING SUB BEAN\");\n                        continue foreignkeyloop;\n                    }\n                }\n            }\n            System.out.println(\"creating sub bean name: \" + subBeanName);\n            wildeBeanProperty.setSubWildeBean(subBean);\n            setSubBeans(subBean);\n        }\n    }\n\n\n    /**\n     * Method used to print column names of a table\n     * @param rsmd ResultSetMetaData collected from rs.getMetaData()\n     * @throws SQLException\n     */\n    private void printAllColumnNames(ResultSetMetaData rsmd) throws SQLException{\n        List&lt;String&gt; columns = new ArrayList&lt;&gt;();\n        for (int i = 0; i &lt; rsmd.getColumnCount(); i++) {\n            columns.add(rsmd.getColumnName(i));\n        }\n        System.out.println(StringUtils.join(columns, \", \"));\n    }\n\n    /**\n     * This method takes the resultSet from metaData.getColumns for a particular table\n     * and populates a wildeBean with WildeBeanProperties for each of the columns\n     * @param rsTableColumns ResultSet taken from metaData.getColumns(null, null, tableName, null);\n     * @param wildeBean WildeBean whose WildeBeanProperties are going to be populated\n     * @throws SQLException\n     */\n    private void createWildeBeanPropertiesForTableColumnRs(ResultSet rsTableColumns, WildeBean wildeBean) throws SQLException{\n        while (rsTableColumns.next()) {\n            /*printAllColumnNamesAndValues(rsTableColumns, columnMd);*/\n\n            WildeBeanProperty wildeBeanProperty = new WildeBeanProperty(wildeBean);\n            String tableName = wildeBean.getSqlTableName();\n\n            wildeBeanProperty.setSqlTableName(tableName);\n            wildeBeanProperty.setSqlColumnName(rsTableColumns.getString(\"COLUMN_NAME\"));\n            wildeBeanProperty.setSqlDataType(rsTableColumns.getString(\"TYPE_NAME\"));\n            wildeBeanProperty.setColumnLimit(rsTableColumns.getInt(\"COLUMN_SIZE\"));\n            wildeBeanProperty.setNullable(Objects.equals(rsTableColumns.getString(\"IS_NULLABLE\"), \"YES\"));\n            wildeBeanProperty.setAutoIncrement(Objects.equals(rsTableColumns.getString(\"IS_AUTOINCREMENT\"), \"YES\"));\n            wildeBeanProperty.setGeneratedColumn(Objects.equals(rsTableColumns.getString(\"IS_GENERATEDCOLUMN\"), \"YES\"));\n            WildeBeanUtils.createDisplayNameFromSqlColumn(wildeBeanProperty);\n            wildeBeanProperty.setPrimaryKey(Objects.equals(wildeBean.getPrimaryKeyColumn(), wildeBeanProperty.getSqlColumnName()));\n            if (wildeBean.getForeignKeys().isEmpty()) {\n                wildeBeanProperty.setForeignKey(false);\n            } else {\n                // See if there is any match to the column name\n                wildeBeanProperty.setForeignKey(\n                        wildeBean.getForeignKeys().stream()\n                                .anyMatch(foreignKey -&gt; Objects.equals(foreignKey.getColumnName(), wildeBeanProperty.getSqlColumnName())));\n            }\n\n            wildeBean.getBeanProperties().add(wildeBeanProperty);\n        }\n    }\n\n    /**\n     * Method used for printing all database table column and values for a particular ResultSet row\n     * Should be called within a while(rs.next()) loop\n     * @param rs The ResultSet or row whose column and values are being printed\n     * @param resultSetMetaData The ResultSetMetaData which should be collected prior to the while loop by rs.getMetaData()\n     */\n    private void printAllColumnNamesAndValues(ResultSet rs, ResultSetMetaData resultSetMetaData) {\n        try {\n            for (int i = 1; i &lt;= resultSetMetaData.getColumnCount() ; i++) {\n                System.out.println(\"Table column: \" + resultSetMetaData.getColumnName(i) + \"; value: \" + rs.getObject(resultSetMetaData.getColumnName(i)));\n            }\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n    }\n\n    /**\n     * Standard query call for a table and an\n     * @param tableName The name of the table to prefer the query\n     * @param where A where clause similar to Sql Developer. Should not contain the word \"Where\".\n     * @return\n     */\n    public ArrayList&lt;WildeBean&gt; query(@NotNull String tableName, @Nullable String where){\n        return DBUtil.query(connection, tableName, where);\n    }\n\n    public void close(PreparedStatement preparedStatement) {\n        if(preparedStatement != null){\n            try {\n                preparedStatement.close();\n            } catch (SQLException throwables) {\n                throwables.printStackTrace();\n            }\n        }\n    }\n\n    public void close(ResultSet rs) {\n        if(rs != null){\n            try {\n                rs.close();\n            } catch (SQLException throwables) {\n                throwables.printStackTrace();\n            }\n        }\n    }\n\n    public void close(ResultSet rs, PreparedStatement preparedStatement) {\n        if (rs != null) {\n            try {\n                rs.close();\n            } catch (SQLException throwables) {\n                throwables.printStackTrace();\n            }\n        }\n        if(preparedStatement != null){\n            try {\n                preparedStatement.close();\n            } catch (SQLException throwables) {\n                throwables.printStackTrace();\n            }\n        }\n    }\n\n    public void onApplicationClose(){\n        if (connection != null) {\n            try {\n                connection.close();\n            } catch (SQLException throwables) {\n                throwables.printStackTrace();\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"software-development/nodejs/basics/","title":"Keeping Node up to date","text":"<p>```ps title=\"Check Version node -v <pre><code>Download nvm (Node version manager) for easy updates to node.js.\n\nTo update Node.js to latest version\n\n```ps\nnvm install node\n</code></pre></p>"},{"location":"software-development/spring/authorization/","title":"Authorization","text":"","tags":["Spring Boot","Authorization"]},{"location":"software-development/spring/authorization/#permission-check-within-method-for-custom-logic","title":"Permission Check within method for custom logic","text":"<p>Permissions can be check for customization within a method by getting the <code>Context</code>:</p> <pre><code>UserDetails userDetails = (UserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();\n\nuserDetails.getAuthorities().forEach(grantedAuthority -&gt; {\n  log.debug(\"Granted Authority: {}\", grantedAuthority.getAuthority());\n});\n</code></pre>","tags":["Spring Boot","Authorization"]},{"location":"software-development/spring/controllers/","title":"Controllers","text":"<p>date: 2024-03-18 authors: [wilde] description: &gt;   Controllers tags:   - Spring Boot   - Controllers comments: true</p>"},{"location":"software-development/spring/entities/","title":"Entity Properties","text":"Player Entity Player.java<pre><code>    @Entity // (1)\n    @Table(name = \"lu_player\", // (2)\n        indexes = {\n            @Index(columnList = \"firstName, lastName\", name = \"idx_lu_player_first_name\"),\n            @Index(columnList = \"lastName, firstName\", name = \"idx_lu_player_last_name\"),\n            @Index(columnList = \"position_id\", name = \"idx_lu_player_position\"),\n            @Index(columnList = \"team_id\", name = \"idx_lu_player_team\"),\n        }\n    )\n    public class Player {\n\n        @Id // (3)\n        @GeneratedValue(strategy = GenerationType.IDENTITY) // (4)\n        private Long id; // (5)\n\n        @Column(length = 50) // (6)\n        private String firstName;\n\n        @Column(length = 50)\n        private String lastName;\n\n        @ManyToOne(fetch = FetchType.EAGER) // (7)\n        @JoinColumn(name = \"position_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TO_POSITION\")) // (8)\n        private Position position;\n\n        @ManyToOne\n        @JoinColumn(name = \"team_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TO_TEAM\"))\n        @JsonIgnoreProperties(\"roster\")\n        private Team team;\n\n        @OneToMany(mappedBy = \"player\"\n                , cascade = {CascadeType.PERSIST, CascadeType.MERGE}\n        )\n        // Ensure at the database level that if a player is deleted, all of their awards are also deleted\n        @OnDelete(action = OnDeleteAction.CASCADE)\n        @JsonIgnoreProperties(\"player\")\n        private List&lt;AwardReceived&gt; receivedAwards;\n\n        @ManyToMany(\n                cascade = {CascadeType.PERSIST, CascadeType.MERGE}\n        )\n        @JoinTable(\n                name = \"j_player_team\",\n                joinColumns = @JoinColumn(name = \"player_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TEAM_TO_PLAYER\")),\n                inverseJoinColumns = @JoinColumn(name = \"team_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TEAM_TO_TEAM\"))\n        )\n        // Spring knows to delete the join table records when a player is deleted\n        // However, without an OnDelete Cascade, you cannot delete a player from the database because you will get a FK constrain violation\n        @OnDelete(action = OnDeleteAction.CASCADE)\n        private List&lt;Team&gt; teamsPlayedFor;\n\n        private Boolean franchiseTagged;\n\n        @Transient\n        @JsonIgnore\n        private String someTempVariable;\n        // Getters and Setters\n    }\n</code></pre> <ol> <li> <code>@Entity</code> designates this POJO as a database table mapping</li> <li> <code>@Table</code> allows us to specify properties of the table, such as the name, indexes, and unique contraints</li> <li> Primary Key for the database table</li> <li> Will use the database auto-increment feature to populate the id value on insertions</li> <li> We use nullable <code>Long</code> instead of <code>long</code> so that it's easy for Spring to know if any entity has been persisted or not</li> <li> <code>@Column allows us to customize the column, like it's name, length, nullability, as well as a custom definition</code></li> <li> <code>@ManyToOne</code> means that this entity references an entity of another table.  The other entity may referene \"Many\" of this entity.  Default fetching is \"Eager\"</li> <li> <code>@JoinColumn</code> or <code>@JoinColumns</code> specifies the name of the column(s) in this table, and which columns they reference from the other entity.  A foreign key constrain will automatically be applied and can be named.</li> </ol> <p><code>@Entity</code> dictates that this class maps to a database table</p>","tags":["Spring Boot","Entites"]},{"location":"software-development/spring/entity-back-references/","title":"Entity back references","text":"<pre><code>@JsonIdentityInfo(\n        generator = ObjectIdGenerators.PropertyGenerator.class,\n        property = \"id\",\n        scope = Material.class)\n</code></pre>","tags":["Spring Boot","JsonIdentityInfo","JsonIgnoreProperties"]},{"location":"software-development/spring/entity-graph/","title":"Entity graph","text":"<pre><code>@NamedEntityGraphs(\n        @NamedEntityGraph(name=\"allJoins\",\n                attributeNodes = {\n                    @NamedAttributeNode(value = \"lead\", subgraph = \"allJoins.lead.section\"),\n                    @NamedAttributeNode(\"reviewer\"),\n                    @NamedAttributeNode(\"loginLocation\"),\n                    @NamedAttributeNode(\"departmentSection\"),\n                    @NamedAttributeNode(\"customer\"),\n                    @NamedAttributeNode(\"workType\"),\n                        // This actually seems to slow it down, when querying just one at least.\n//                  @NamedAttributeNode(\"parts\"),\n                },\n                subgraphs = {\n                        @NamedSubgraph(name = \"allJoins.lead.section\",\n                            attributeNodes = {\n                                @NamedAttributeNode(\"section\")\n                            }\n                            ),\n                        @NamedSubgraph(name = \"allJoins.reviewer.section\",\n                                attributeNodes = {\n                                        @NamedAttributeNode(\"section\")\n                                }\n                        )\n                }\n        )\n)\n</code></pre>","tags":["Spring Boot","Entity Graph","Repository"]},{"location":"software-development/spring/file-upload-download/","title":"File upload download","text":"","tags":["Spring Boot","Files","File Upload","File Download"]},{"location":"software-development/spring/file-upload-download/#download-local","title":"Download Local","text":"<pre><code>@GetMapping(\"/download-local\")\n    public ResponseEntity&lt;Resource&gt; downloadFile() {\n\n        // Load file as Resource\n        Resource resource;\n\n        String file = \"C:\\\\temp\\\\Wilde Six Sigma draft 3.pptx\";\n        try {\n            Path filePath = Paths.get(file).normalize();\n            resource = new UrlResource(filePath.toUri());\n        } catch (MalformedURLException e) {\n            // Handle file not found or other exceptions\n            e.printStackTrace();\n            return ResponseEntity.notFound().build();\n        }\n\n        // Check if file exists and is readable\n        if (!resource.exists() || !resource.isReadable()) {\n            return ResponseEntity.notFound().build();\n        }\n\n        // Set Content-Disposition header to force download\n        HttpHeaders headers = new HttpHeaders();\n        headers.add(HttpHeaders.CONTENT_DISPOSITION, \"attachment; filename=\\\"\" + resource.getFilename() + \"\\\"\");\n\n        // Set Content-Type header based on file type\n        MediaType mediaType;\n        try {\n            mediaType = MediaType.parseMediaType(resource.getFile().toURI().toURL().openConnection().getContentType());\n        } catch (IOException e) {\n            e.printStackTrace();\n            mediaType = MediaType.APPLICATION_OCTET_STREAM;\n        }\n\n        return ResponseEntity.ok()\n                .contentType(mediaType)\n                .headers(headers)\n                .body(resource);\n    }\n</code></pre>","tags":["Spring Boot","Files","File Upload","File Download"]},{"location":"software-development/spring/file-upload-download/#download-from-remote-api","title":"Download from remote api","text":"<pre><code>@GetMapping(\"/download\")\n    public ResponseEntity&lt;Resource&gt; downloadFile(@RequestParam(name = \"remoteFilePath\") String remoteFilePath) {\n\n        log.info(\"Request received for file ({})\", remoteFilePath);\n\n        return sharePointService.downloadFileFromEndPoint(sharePointUrl, Paths.get(remoteFilePath), token);\n    }\n</code></pre> <pre><code>public ResponseEntity&lt;Resource&gt; downloadFileFromEndPoint(String url, Path remoteFilePath, String token) {\n        // Create HttpHeaders with appropriate authentication, if needed\n        HttpHeaders headers = new HttpHeaders();\n        headers.add(\"Authorization\", \"Bearer \" + token);\n\n        String endPoint = url + UrlUtils.encodeURLPathComponent(String.format(\n                \"/_api/web/GetFolderByServerRelativeUrl('%s')/Files('%s')/$value\",\n                remoteFilePath.getParent().toString(),\n                remoteFilePath.getFileName().toString()\n        ));\n\n        log.info(\"Fetching from URL: {}\", endPoint);\n        // Make a request to SharePoint API to get the file as a Resource\n        RestTemplate restTemplate = new RestTemplate();\n        ResponseEntity&lt;Resource&gt; responseEntity = restTemplate.exchange(\n                endPoint,\n                HttpMethod.GET,\n                new HttpEntity&lt;&gt;(headers),\n                Resource.class);\n\n        // Check if the request was successful\n        if (responseEntity.getStatusCode() == HttpStatus.OK) {\n            // Set appropriate headers for file download\n            HttpHeaders responseHeaders = new HttpHeaders();\n            responseHeaders.add(HttpHeaders.CONTENT_DISPOSITION, \"attachment; filename=\\\"\" + remoteFilePath.getFileName().toString() + \"\\\"\");\n\n            // Set Content-Type header based on file type, if known\n            responseHeaders.setContentType(responseEntity.getHeaders().getContentType());\n\n            // Return ResponseEntity with Resource and headers\n            return ResponseEntity.ok()\n                    .headers(responseHeaders)\n                    .body(responseEntity.getBody());\n        } else {\n            // Handle error responses from SharePoint API\n            // You can return an appropriate error ResponseEntity\n            return ResponseEntity.status(responseEntity.getStatusCode()).build();\n        }\n    }\n</code></pre>","tags":["Spring Boot","Files","File Upload","File Download"]},{"location":"software-development/spring/file-upload-download/#upload-to-local","title":"Upload to local","text":"<pre><code>@PostMapping(\"/upload-local\")\n    public String handleFileUploadToLocal(@RequestParam(\"file\") MultipartFile file) {\n        if (!file.isEmpty()) {\n            try {\n                file.transferTo(new File(\"C:/temp/\" + file.getOriginalFilename()));\n                return \"File uploaded successfully!\";\n            } catch (IOException e) {\n                e.printStackTrace();\n                return \"Failed to upload file!\";\n            }\n        } else {\n            return \"File is empty!\";\n        }\n    }\n</code></pre>","tags":["Spring Boot","Files","File Upload","File Download"]},{"location":"software-development/spring/file-upload-download/#upload-to-external-api","title":"Upload to external api","text":"<pre><code>@PostMapping(\"/upload\")\n    public ResponseEntity&lt;String&gt; handleFileUpload(@RequestParam(\"file\") MultipartFile file, @RequestParam(\"directory\") String directory) {\n        try {\n            return sharePointService.uploadFileToEndpoint(file, sharePointUrl, directory, token);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();\n    }\n</code></pre> <pre><code>public ResponseEntity&lt;String&gt; uploadFileToEndpoint(MultipartFile file, String url, String folder, String token) throws IOException {\n\n\n        String endpointUrl = url + UrlUtils.encodeURLPathComponent(String.format(\"/_api/web/GetFolderByServerRelativeUrl('%s')/Files/add(url='%s',overwrite=true)\", folder, file.getOriginalFilename()));\n\n        log.info(\"Uploading file to {}\", endpointUrl);\n\n        HttpHeaders headers = new HttpHeaders();\n        headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);\n        headers.setContentLength(file.getSize());\n        headers.add(\"Authorization\", \"Bearer \" + token);\n\n\n        // Get the bytes of the file content\n//            byte[] fileBytes = file.getBytes();\n//            ByteArrayResource resource = new ByteArrayResource(fileBytes);\n\n        // Open an input stream from the file\n        InputStream inputStream = file.getInputStream();\n        InputStreamResource resource = new InputStreamResource(inputStream);\n\n\n//            HttpEntity&lt;ByteArrayResource&gt; requestEntity = new HttpEntity&lt;&gt;(resource, headers);\n        HttpEntity&lt;InputStreamResource&gt; requestEntity = new HttpEntity&lt;&gt;(resource, headers);\n\n        ResponseEntity&lt;String&gt; response = restTemplate.exchange(endpointUrl, HttpMethod.POST, requestEntity, String.class);\n\n        // Handle response as needed\n        if (response.getStatusCode() == HttpStatus.OK) {\n            log.info(\"File uploaded successfully\");\n        } else {\n            log.debug(\"Error uploading file: \" + response.getStatusCode());\n        }\n\n\n        return response;\n    }\n</code></pre>","tags":["Spring Boot","Files","File Upload","File Download"]},{"location":"software-development/spring/files/","title":"Files","text":"<p>The following method returns the entire file to the client.  The client application has to indicate its own indeterminate loading status, as the client browser will not be aware of the progress of the download.</p> <pre><code>@GetMapping(\"/attachment/{id}\")\n    @ResponseBody\n    public ResponseEntity&lt;Resource&gt; downloadAttachmentOld(@PathVariable Long id) throws IOException {\n        log.debug(\"Download report called for id {}\", id);\n\n        Optional&lt;Attachment&gt; attachment = attachmentRepository.findById(id);\n\n        if(attachment.isPresent()){\n\n            Resource resource = new UrlResource(Paths.get(attachment.get().getPath()).toUri());\n\n            if (resource.exists() &amp;&amp; resource.isReadable()) {\n                String contentDisposition = String.format(\"attachment; filename=\\\"%s\\\"\", resource.getFile().getName());\n\n\n                String mimeType = mimeDetectionService.getMimeType(resource.getFile());\n\n                return ResponseEntity.ok()\n                        .header(HttpHeaders.CONTENT_DISPOSITION, contentDisposition)\n                        .header(HttpHeaders.CONTENT_TYPE, mimeType)\n                        .body(resource);\n            }\n        }\n\n        log.warn(\"Returning report not found\");\n        return ResponseEntity.notFound().build();\n    }\n</code></pre> <p><code>mimeDectionService</code> is simply a service that invokes a method from <code>Apache Tika</code></p> <pre><code>@Service\npublic class MimeDetectionService {\n\n    private final Tika tika = new Tika();\n\n    public String getMimeType(File file) {\n        try {\n            return tika.detect(file);\n        } catch (IOException e) {\n            return \"application/octet-stream\";\n        }\n    }\n}\n</code></pre>","tags":["Spring Boot","Files","File Upload","File Download"]},{"location":"software-development/spring/repositories/","title":"Repositories","text":"<p>date: 2024-03-18 authors: [wilde] description: &gt;   Repositories tags:   - Spring Boot   - Repositories   - JPA comments: true</p>"},{"location":"software-development/spring/sb-project-structure/","title":"Project Structure","text":"<p>Getting a preview of the structure of a typical spring boot is a great way to get a head start on developing a project.  Before you begin your first project, it's helpful to know where you will be creating classes, and a workflow for your development.</p>","tags":["Spring Boot","Project Structure"]},{"location":"software-development/spring/sb-project-structure/#file-structure","title":"File Structure","text":"<pre><code>\u251c\u2500\u2500 [Project Name]\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 .gradle\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 build\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 main\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u251c\u2500\u2500 java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u251c\u2500\u2500 com.thomaswildetech.structure\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 models\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 ErrorResponse.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 security\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 InitializeDbData.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 JsonConfig.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 RestExceptionHandler.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 SchedulingConfig.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u251c\u2500\u2500 controllers\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 league\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502       \u2514\u2500\u2500 PlayerController.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u251c\u2500\u2500 entities\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 awards\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 Award.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 AwardReceived.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 league\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 Coach.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 Player.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 Position.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 Team.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 schedule\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502       \u2514\u2500\u2500 Match.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u251c\u2500\u2500 repositories\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 league\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502       \u2514\u2500\u2500 PlayerRepository.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u251c\u2500\u2500 scheduled\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u251c\u2500\u2500 services\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 league\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502       \u2514\u2500\u2500 PlayerRepository.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2514\u2500\u2500 StructureApplication.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2514\u2500\u2500 resources\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 application.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 application-api.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 application-local.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 application-scheduling.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 data.sql\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 test\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 .gitignore\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 build.gradle\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 settings.json\n\u2514\u2500\u2500\n</code></pre>","tags":["Spring Boot","Project Structure"]},{"location":"software-development/spring/sb-project-structure/#entities","title":"Entities","text":"<p>Entity classes which have the are POJOs (plain old java objects) that map to database tables and whose properties map to the columns of that table.  It is the basis for what is considered an ORM (object relational mapping), in which programmatic instances of these classes map directly to and entry in the table and whose changes to their properties get reflected in the database.</p> <pre><code>erDiagram\n    PLAYER ||--|| PlayerTable : maps\n    PLAYER {\n        Long id\n        String firstName\n        String lastName\n        Team team\n        Position position\n        Boolean frachiseTagged\n    }\n    PlayerTable {\n        bigint id\n        String first_name\n        String last_name\n        bigint team_id\n        String position_id\n        bit franchise_tagged\n    }</code></pre> Player Entity Player.java<pre><code>    @Entity // (1)\n    @Table(name = \"lu_player\", // (2)\n        indexes = {\n            @Index(columnList = \"firstName, lastName\", name = \"idx_lu_player_first_name\"),\n            @Index(columnList = \"lastName, firstName\", name = \"idx_lu_player_last_name\"),\n            @Index(columnList = \"position_id\", name = \"idx_lu_player_position\"),\n            @Index(columnList = \"team_id\", name = \"idx_lu_player_team\"),\n        }\n    )\n    public class Player {\n\n        @Id // (3)\n        @GeneratedValue(strategy = GenerationType.IDENTITY) // (4)\n        private Long id; // (5)\n\n        @Column(length = 50) // (6)\n        private String firstName;\n\n        @Column(length = 50)\n        private String lastName;\n\n        @ManyToOne(fetch = FetchType.EAGER) // (7)\n        @JoinColumn(name = \"position_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TO_POSITION\")) // (8)\n        private Position position;\n\n        @ManyToOne\n        @JoinColumn(name = \"team_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TO_TEAM\"))\n        @JsonIgnoreProperties(\"roster\")\n        private Team team;\n\n        @OneToMany(mappedBy = \"player\"\n                , cascade = {CascadeType.PERSIST, CascadeType.MERGE}\n        )\n        // Ensure at the database level that if a player is deleted, all of their awards are also deleted\n        @OnDelete(action = OnDeleteAction.CASCADE)\n        @JsonIgnoreProperties(\"player\")\n        private List&lt;AwardReceived&gt; receivedAwards;\n\n        @ManyToMany(\n                cascade = {CascadeType.PERSIST, CascadeType.MERGE}\n        )\n        @JoinTable(\n                name = \"j_player_team\",\n                joinColumns = @JoinColumn(name = \"player_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TEAM_TO_PLAYER\")),\n                inverseJoinColumns = @JoinColumn(name = \"team_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TEAM_TO_TEAM\"))\n        )\n        // Spring knows to delete the join table records when a player is deleted\n        // However, without an OnDelete Cascade, you cannot delete a player from the database because you will get a FK constrain violation\n        @OnDelete(action = OnDeleteAction.CASCADE)\n        private List&lt;Team&gt; teamsPlayedFor;\n\n        private Boolean franchiseTagged;\n\n        @Transient\n        @JsonIgnore\n        private String someTempVariable;\n        // Getters and Setters\n    }\n</code></pre> <ol> <li> <code>@Entity</code> designates this POJO as a database table mapping</li> <li> <code>@Table</code> allows us to specify properties of the table, such as the name, indexes, and unique contraints</li> <li> Primary Key for the database table</li> <li> Will use the database auto-increment feature to populate the id value on insertions</li> <li> We use nullable <code>Long</code> instead of <code>long</code> so that it's easy for Spring to know if any entity has been persisted or not</li> <li> <code>@Column allows us to customize the column, like it's name, length, nullability, as well as a custom definition</code></li> <li> <code>@ManyToOne</code> means that this entity references an entity of another table.  The other entity may referene \"Many\" of this entity.  Default fetching is \"Eager\"</li> <li> <code>@JoinColumn</code> or <code>@JoinColumns</code> specifies the name of the column(s) in this table, and which columns they reference from the other entity.  A foreign key constrain will automatically be applied and can be named.</li> </ol> <p>Major Topics</p> <ul> <li>Primary key and generated value </li> <li> <p>Relationships to other tables (foreign keys)</p> <ul> <li><code>@OneToOne</code></li> <li><code>@ManyToOne</code></li> <li><code>@OneToMany</code></li> <li><code>@ManyToMany</code></li> </ul> </li> <li> <p>Cascading actions taken by Spring</p> </li> <li><code>@OnDelete</code> foreign key constraint actions</li> </ul>","tags":["Spring Boot","Project Structure"]},{"location":"software-development/spring/sb-project-structure/#repositories","title":"Repositories","text":"<p>Repositories are typed interfaces which are responsible for all database transactions for a particular entity.  So if you want to be able to make changes to a <code>Player</code> entity, you would want to have a repository dedicated to <code>Player</code>, likely called <code>PlayerRepository</code>.  Spring Boot already have default implementations for methods such as <code>findById(ID id)</code>, <code>findAll()</code> <code>save(T entity)</code>, and <code>delete()</code>.  SpringBoot also makes it very easy to create custom repository methods.</p> Player Repository <pre><code>@Repository\npublic interface PlayerRepository extends JpaRepository&lt;Player, Long&gt; {\n\n    @Override\n    @EntityGraph(attributePaths = {\"team\", \"position\"})  // Can't fetch mutliple \"bags\" (lists) with EntityGraph\n    List&lt;Player&gt; findAll();\n\n    @Override\n    @EntityGraph(attributePaths = {\"team\", \"position\", \"teamsPlayedFor\", \"receivedAwards\", \"receivedAwards.award\"}) // Can fetch multiple \"bags\" when returning only 1 result\n    Optional&lt;Player&gt; findById(Long id);\n}\n</code></pre> <p>Major Topics</p> <ul> <li>Usage of <code>@EntityGraph</code> to dictate fetching of properties that relate to other tables.</li> <li>Custom methods using method naming convention.</li> <li>Custom methods using <code>@Query</code>.</li> <li>Option to use JDBC instead</li> </ul>","tags":["Spring Boot","Project Structure"]},{"location":"software-development/spring/sb-project-structure/#services","title":"Services","text":"<p>Services are where all \"business logic\" will reside.  This is where data should be extracted from repositories and any further data manipulation should be made.  Generally, you will likely repeat any methods created in a repository here in Services, and allowing you perform additional logic which is usually necessary in JPA transactions as it is.</p> Player Service <pre><code>@Service\npublic class PlayerService {\n\n    private final PlayerRepository playerRepository;\n\n    private final AwardRepository awardRepository;\n\n    private final TeamRepository teamRepository;\n\n    @Autowired\n    public PlayerService(PlayerRepository playerRepository, AwardRepository awardRepository, TeamRepository teamRepository) {\n        this.playerRepository = playerRepository;\n        this.awardRepository = awardRepository;\n        this.teamRepository = teamRepository;\n    }\n\n    public List&lt;Player&gt; findAll() {\n        return playerRepository.findAll();\n    }\n\n    public Optional&lt;Player&gt; findById(Long id){\n        return playerRepository.findById(id);\n    }\n\n    public Player save(Player player) {\n\n        // If we are cascading/persisting new received awards, we need to fetch the award from the database\n        if(player.getReceivedAwards() != null){\n            player.getReceivedAwards().forEach(awardReceived -&gt; {\n                Optional&lt;Award&gt; award = awardRepository.findById(awardReceived.getAward().getId());\n                award.ifPresent(awardReceived::setAward);\n                awardReceived.setPlayer(player);\n            });\n        }\n\n        // If we are cascading/persisting teams played for, we need to fetch the teams from the database\n        if(player.getTeamsPlayedFor() != null){\n            for(int i = 0; i &lt; player.getTeamsPlayedFor().size(); i++){\n                Team team = player.getTeamsPlayedFor().get(i);\n                Optional&lt;Team&gt; teamFromDb = teamRepository.findById(team.getId());\n\n                int finalI = i;\n                teamFromDb.ifPresent(fetchedTeam -&gt; player.getTeamsPlayedFor().set(finalI, fetchedTeam));\n            }\n        }\n\n        return playerRepository.save(player);\n    }\n\n    public Player patch(Player existingPlayer, Map&lt;String, Object&gt; updates){\n        for (Map.Entry&lt;String, Object&gt; entry : updates.entrySet()) {\n            switch (entry.getKey()) {\n                case \"firstName\":\n                    existingPlayer.setFirstName((String) entry.getValue());\n                    break;\n                case \"lastName\":\n                    existingPlayer.setLastName((String) entry.getValue());\n                    break;\n                case \"position\":\n                    existingPlayer.setPosition((Position) entry.getValue());\n                    break;\n                case \"team\":\n                    existingPlayer.setTeam((Team) entry.getValue());\n                    break;\n                case \"franchiseTagged\":\n                    existingPlayer.setFranchiseTagged((Boolean) entry.getValue());\n                    break;\n            }\n        }\n\n        return playerRepository.save(existingPlayer);\n    }\n\n    public void deleteById(Long id){\n        playerRepository.deleteById(id);\n    }\n}\n</code></pre> <p>Major Topics</p> <ul> <li>Utilizing services for database transactions.</li> <li>Handling of cascading relationships</li> <li>Usage of transient data transfer objects (DTOs)</li> </ul>","tags":["Spring Boot","Project Structure"]},{"location":"software-development/spring/sb-project-structure/#controllers","title":"Controllers","text":"<p>Controllers are responsible for handling REST requests and responding to them.  Methods should be relatively simple and should invoke service calls rather than implementing any business logic themselves.</p> Player Controller <pre><code>@RestController\n@RequestMapping(\"/player\")\n@Profile(\"api\")\npublic class PlayerController{\n\n    private static final Logger log = LoggerFactory.getLogger(PlayerController.class);\n\n    private final PlayerService playerService;\n\n    @Autowired\n    public PlayerController(PlayerService playerService) {\n        this.playerService = playerService;\n    }\n\n    @GetMapping\n    public ResponseEntity&lt;List&lt;Player&gt;&gt; findAll() {\n        return ResponseEntity.ok(playerService.findAll());\n    }\n\n    @GetMapping(\"/{id}\")\n    public ResponseEntity&lt;Player&gt; findById(@PathVariable(\"id\") Long id) {\n        log.debug(\"Finding player by id: {}\", id);\n        return playerService.findById(id)\n                .map(ResponseEntity::ok)\n                .orElseThrow(() -&gt; new ResponseStatusException(\n                        HttpStatus.NOT_FOUND,\n                        \"Player not found with id: \" + id\n                ));\n    }\n\n    @PostMapping\n    public ResponseEntity&lt;Player&gt; create(@RequestBody Player player) {\n        return ResponseEntity.ok(playerService.save(player));\n    }\n\n    @PutMapping(\"/{id}\")\n    public ResponseEntity&lt;Player&gt; update(@PathVariable(\"id\") Long id, @RequestBody Player player) {\n        player.setId(id);\n        return ResponseEntity.ok(playerService.save(player));\n    }\n\n    @PatchMapping(\"/{id}\")\n    public ResponseEntity&lt;Player&gt; patchPlayer(Long id, Map&lt;String, Object&gt; updates) {\n        Player existingPlayer = playerService.findById(id)\n                .orElseThrow(() -&gt; new ResponseStatusException(\n                        HttpStatus.NOT_FOUND,\n                        \"Player not found with id: \" + id\n                ));\n\n        return ResponseEntity.ok(playerService.patch(existingPlayer, updates));\n\n    }\n\n    @DeleteMapping(\"/{id}\")\n    public ResponseEntity&lt;Void&gt; delete(@PathVariable(\"id\") Long id) {\n        playerService.deleteById(id);\n        return ResponseEntity.ok(null);\n    }\n\n}\n</code></pre> <p>Major Topics</p> <ul> <li>Implementing HTTP methods (GET, POST, PUT, PATCH, DELETE)</li> <li>Error handling</li> </ul>","tags":["Spring Boot","Project Structure"]},{"location":"software-development/spring/sb-project-structure/#scheduled","title":"Scheduled","text":"<p>If your application has scheduled tasks, I like having a dedicated package for classes with scheduled methods.  Similar to controllers, all the logic should reside in services and the methods here should be very simple.</p> <p>Major Topics</p> <ul> <li>Enabling</li> <li>Scheduling options</li> </ul>","tags":["Spring Boot","Project Structure"]},{"location":"software-development/spring/sb-project-structure/#config","title":"Config","text":"<p>This is where we would see json serialization configuation, scheduling configuration, and most importantly, security configuration, where we apply custom request filters and parse JWTs for example.</p> <p>Major Topics</p> <ul> <li>Json Configuration</li> <li>Customization from application.properties</li> <li>Security</li> <li>Exception Handling</li> <li>Data Initialization</li> </ul>","tags":["Spring Boot","Project Structure"]},{"location":"software-development/spring/sb-project-structure/#application-properties","title":"Application Properties","text":"<p>Major Topics</p> <ul> <li> <p> application.properties</p> <ul> <li>Important Properties to define</li> <li>Profiles</li> </ul> </li> <li> <p> build.gradle</p> </li> <li> settings.gradle</li> </ul> Property Files application.propertiesapplication-api.propertiesapplication-local.propertiesapplication-scheduling.properties <pre><code># Profiles (1)\nspring.profiles.active=local,api\n\n# Initialize Sql Statements (2)\nspring.datasource.initialization-mode=NEVER\n#spring.datasource.data=data.sql\n\n# Scheduling Config (default setting: will be overridden by scheduling profile) (3)\nscheduling.enabled=false\n\n# Web Application Type (default setting: will be overridden by api profile) (4)\nspring.main.web-application-type=none\nserver.port=-1\n</code></pre> <ol> <li>Profiles can be used to trigger additional property files and can be used in Beans with <code>@Profile()</code> so that Spring only loads the Bean when the profile is activated.  This can be very useful if you want multiple builds for different microservices.  <code>local</code> and <code>api</code> will load both <code>application-api.properties</code> and <code>application-local.properties</code></li> <li>Used if you want to execute a sql script at the start of the program.</li> <li>This is a custom property for enabling the conditional config <code>SchedulingConfig</code></li> <li>The default setting is <code>servlet</code>, but we may want a microservice config that isn't a web application.</li> </ol> <pre><code># API Details (1)\nserver.address=127.0.0.1\nserver.port=8080\nserver.servlet.context-path=/api\nspring.main.web-application-type=servlet\n\n# Used By Executor Service Config (2)\nthread.pool.size=5 \n</code></pre> <ol> <li>These settings configure the application using the profile to be a web server running on local host, port 8080, with a path of <code>/api</code>.</li> <li>If we configure a global Executor Service for background threads it will be initialized with this number.</li> </ol> <pre><code># Database Configuration (1)\nspring.datasource.url= jdbc:mysql://localhost:3306/tutorials?useSSL=false&amp;allowPublicKeyRetrieval=true\nspring.datasource.username=tutorial_master\nspring.datasource.password=tutorial\n\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect\n\n# SQL Printing\nspring.jpa.show-sql=true # (2)\nspring.jpa.properties.hibernate.format_sql=true # (3)\nlogging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE # (4)\n\n# Max database connections (5)\nspring.datasource.maxActive=10\n\n# Allow for batch inserts (6)\nspring.jpa.properties.hibernate.jdbc.batch_size=500\nspring.jpa.properties.hibernate.order_inserts=true\nspring.jpa.properties.hibernate.order_updates=true\n\n# DDL: none, validate, update, create, create-drop (7)\nspring.jpa.hibernate.ddl-auto=create-drop\n\n# Logging Levels (8)\nlogging.level.com.thomaswildetech=TRACE\n\n# Logging Pattern\nlogging.pattern.console=%clr(%d %-7level %-60logger{36} Line %-5L %-40M - %msg%n)\n\n# Allows for color logging\nspring.output.ansi.enabled=always\n</code></pre> <ol> <li>Database URL, username, and password are defined here.  Note, for production, we can simply use a different profile.</li> <li>Shows hibernates SQL calls.  Great for ensuring hibernate is performing as expected.</li> <li>Formats the SQL ouput in a readable format.</li> <li>Shows the inputs into the SQL prepared statements.</li> <li>Max database connections depending on frequency of user calls.</li> <li>Mostly for doing batch inserts through a job.</li> <li> <ul> <li><code>create-drop</code>: Drops all tables before recreating them</li> <li><code>create</code>: Create new tables based on new entities created</li> <li><code>update</code>: Update statements based on new properties within entities</li> <li><code>none</code>: Fastest, no DDL executed</li> </ul> </li> <li>Set logging levels for your any packages.</li> </ol> <pre><code>scheduling.enabled=true\nspring.task.scheduling.pool.size=5\n</code></pre>","tags":["Spring Boot","Project Structure"]},{"location":"software-development/spring/sb-project-structure/#sample-code","title":"Sample Code","text":"Entity/Repository/Service/Controller Code Player.javaPlayerRepository.javaPlayerService.javaPlayerController.java Player.java<pre><code>    @Entity // (1)\n    @Table(name = \"lu_player\", // (2)\n        indexes = {\n            @Index(columnList = \"firstName, lastName\", name = \"idx_lu_player_first_name\"),\n            @Index(columnList = \"lastName, firstName\", name = \"idx_lu_player_last_name\"),\n            @Index(columnList = \"position_id\", name = \"idx_lu_player_position\"),\n            @Index(columnList = \"team_id\", name = \"idx_lu_player_team\"),\n        }\n    )\n    public class Player {\n\n        @Id // (3)\n        @GeneratedValue(strategy = GenerationType.IDENTITY) // (4)\n        private Long id; // (5)\n\n        @Column(length = 50) // (6)\n        private String firstName;\n\n        @Column(length = 50)\n        private String lastName;\n\n        @ManyToOne(fetch = FetchType.EAGER) // (7)\n        @JoinColumn(name = \"position_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TO_POSITION\")) // (8)\n        private Position position;\n\n        @ManyToOne\n        @JoinColumn(name = \"team_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TO_TEAM\"))\n        @JsonIgnoreProperties(\"roster\")\n        private Team team;\n\n        @OneToMany(mappedBy = \"player\"\n                , cascade = {CascadeType.PERSIST, CascadeType.MERGE}\n        )\n        // Ensure at the database level that if a player is deleted, all of their awards are also deleted\n        @OnDelete(action = OnDeleteAction.CASCADE)\n        @JsonIgnoreProperties(\"player\")\n        private List&lt;AwardReceived&gt; receivedAwards;\n\n        @ManyToMany(\n                cascade = {CascadeType.PERSIST, CascadeType.MERGE}\n        )\n        @JoinTable(\n                name = \"j_player_team\",\n                joinColumns = @JoinColumn(name = \"player_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TEAM_TO_PLAYER\")),\n                inverseJoinColumns = @JoinColumn(name = \"team_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TEAM_TO_TEAM\"))\n        )\n        // Spring knows to delete the join table records when a player is deleted\n        // However, without an OnDelete Cascade, you cannot delete a player from the database because you will get a FK constrain violation\n        @OnDelete(action = OnDeleteAction.CASCADE)\n        private List&lt;Team&gt; teamsPlayedFor;\n\n        private Boolean franchiseTagged;\n\n        @Transient\n        @JsonIgnore\n        private String someTempVariable;\n        // Getters and Setters\n    }\n</code></pre> <ol> <li> <code>@Entity</code> designates this POJO as a database table mapping</li> <li> <code>@Table</code> allows us to specify properties of the table, such as the name, indexes, and unique contraints</li> <li> Primary Key for the database table</li> <li> Will use the database auto-increment feature to populate the id value on insertions</li> <li> We use nullable <code>Long</code> instead of <code>long</code> so that it's easy for Spring to know if any entity has been persisted or not</li> <li> <code>@Column allows us to customize the column, like it's name, length, nullability, as well as a custom definition</code></li> <li> <code>@ManyToOne</code> means that this entity references an entity of another table.  The other entity may referene \"Many\" of this entity.  Default fetching is \"Eager\"</li> <li> <code>@JoinColumn</code> or <code>@JoinColumns</code> specifies the name of the column(s) in this table, and which columns they reference from the other entity.  A foreign key constrain will automatically be applied and can be named.</li> </ol> <pre><code>@Repository\npublic interface PlayerRepository extends JpaRepository&lt;Player, Long&gt; {\n\n    @Override\n    @EntityGraph(attributePaths = {\"team\", \"position\"})  // Can't fetch mutliple \"bags\" (lists) with EntityGraph\n    List&lt;Player&gt; findAll();\n\n    @Override\n    @EntityGraph(attributePaths = {\"team\", \"position\", \"teamsPlayedFor\", \"receivedAwards\", \"receivedAwards.award\"}) // Can fetch multiple \"bags\" when returning only 1 result\n    Optional&lt;Player&gt; findById(Long id);\n}\n</code></pre> <pre><code>@Service\npublic class PlayerService {\n\n    private final PlayerRepository playerRepository;\n\n    private final AwardRepository awardRepository;\n\n    private final TeamRepository teamRepository;\n\n    @Autowired\n    public PlayerService(PlayerRepository playerRepository, AwardRepository awardRepository, TeamRepository teamRepository) {\n        this.playerRepository = playerRepository;\n        this.awardRepository = awardRepository;\n        this.teamRepository = teamRepository;\n    }\n\n    public List&lt;Player&gt; findAll() {\n        return playerRepository.findAll();\n    }\n\n    public Optional&lt;Player&gt; findById(Long id){\n        return playerRepository.findById(id);\n    }\n\n    public Player save(Player player) {\n\n        // If we are cascading/persisting new received awards, we need to fetch the award from the database\n        if(player.getReceivedAwards() != null){\n            player.getReceivedAwards().forEach(awardReceived -&gt; {\n                Optional&lt;Award&gt; award = awardRepository.findById(awardReceived.getAward().getId());\n                award.ifPresent(awardReceived::setAward);\n                awardReceived.setPlayer(player);\n            });\n        }\n\n        // If we are cascading/persisting teams played for, we need to fetch the teams from the database\n        if(player.getTeamsPlayedFor() != null){\n            for(int i = 0; i &lt; player.getTeamsPlayedFor().size(); i++){\n                Team team = player.getTeamsPlayedFor().get(i);\n                Optional&lt;Team&gt; teamFromDb = teamRepository.findById(team.getId());\n\n                int finalI = i;\n                teamFromDb.ifPresent(fetchedTeam -&gt; player.getTeamsPlayedFor().set(finalI, fetchedTeam));\n            }\n        }\n\n        return playerRepository.save(player);\n    }\n\n    public Player patch(Player existingPlayer, Map&lt;String, Object&gt; updates){\n        for (Map.Entry&lt;String, Object&gt; entry : updates.entrySet()) {\n            switch (entry.getKey()) {\n                case \"firstName\":\n                    existingPlayer.setFirstName((String) entry.getValue());\n                    break;\n                case \"lastName\":\n                    existingPlayer.setLastName((String) entry.getValue());\n                    break;\n                case \"position\":\n                    existingPlayer.setPosition((Position) entry.getValue());\n                    break;\n                case \"team\":\n                    existingPlayer.setTeam((Team) entry.getValue());\n                    break;\n                case \"franchiseTagged\":\n                    existingPlayer.setFranchiseTagged((Boolean) entry.getValue());\n                    break;\n            }\n        }\n\n        return playerRepository.save(existingPlayer);\n    }\n\n    public void deleteById(Long id){\n        playerRepository.deleteById(id);\n    }\n}\n</code></pre> <pre><code>@RestController\n@RequestMapping(\"/player\")\n@Profile(\"api\")\npublic class PlayerController{\n\n    private static final Logger log = LoggerFactory.getLogger(PlayerController.class);\n\n    private final PlayerService playerService;\n\n    @Autowired\n    public PlayerController(PlayerService playerService) {\n        this.playerService = playerService;\n    }\n\n    @GetMapping\n    public ResponseEntity&lt;List&lt;Player&gt;&gt; findAll() {\n        return ResponseEntity.ok(playerService.findAll());\n    }\n\n    @GetMapping(\"/{id}\")\n    public ResponseEntity&lt;Player&gt; findById(@PathVariable(\"id\") Long id) {\n        log.debug(\"Finding player by id: {}\", id);\n        return playerService.findById(id)\n                .map(ResponseEntity::ok)\n                .orElseThrow(() -&gt; new ResponseStatusException(\n                        HttpStatus.NOT_FOUND,\n                        \"Player not found with id: \" + id\n                ));\n    }\n\n    @PostMapping\n    public ResponseEntity&lt;Player&gt; create(@RequestBody Player player) {\n        return ResponseEntity.ok(playerService.save(player));\n    }\n\n    @PutMapping(\"/{id}\")\n    public ResponseEntity&lt;Player&gt; update(@PathVariable(\"id\") Long id, @RequestBody Player player) {\n        player.setId(id);\n        return ResponseEntity.ok(playerService.save(player));\n    }\n\n    @PatchMapping(\"/{id}\")\n    public ResponseEntity&lt;Player&gt; patchPlayer(Long id, Map&lt;String, Object&gt; updates) {\n        Player existingPlayer = playerService.findById(id)\n                .orElseThrow(() -&gt; new ResponseStatusException(\n                        HttpStatus.NOT_FOUND,\n                        \"Player not found with id: \" + id\n                ));\n\n        return ResponseEntity.ok(playerService.patch(existingPlayer, updates));\n\n    }\n\n    @DeleteMapping(\"/{id}\")\n    public ResponseEntity&lt;Void&gt; delete(@PathVariable(\"id\") Long id) {\n        playerService.deleteById(id);\n        return ResponseEntity.ok(null);\n    }\n\n}\n</code></pre>","tags":["Spring Boot","Project Structure"]},{"location":"software-development/spring/sb-project-structure/#database-structure","title":"Database Structure","text":"<pre><code>classDiagram\n\n  lu_player \"1\" -- \"N\" j_award_received : has\n  lu_player \"1\" -- \"N\" j_player_team : has\n  lu_player \"1\" -- \"N\" j_coach_favorite_player : has\n  lu_award \"1\" -- \"N\" j_award_received : has  \n  lu_team \"1\" -- \"N\" d_match : has\n  lu_team \"1\" -- \"N\" lu_coach : has\n  lu_position \"1\" -- \"N\" lu_player : has\n  lu_team \"1\" -- \"N\" lu_player : belongs to\n  lu_player \"0..1\" -- \"1\" lu_coach : has\n  lu_team \"1\" -- \"N\" j_player_team : has\n  lu_player \"1\" -- \"N\" j_player_team : has\n  lu_coach \"1\" -- \"N\" j_coach_favorite_player : has\n  lu_player \"1\" -- \"N\" j_coach_favorite_player : has\n  d_match \"1\" -- \"N\" j_player_team : involves\n  d_match \"1\" -- \"N\" lu_team : home team\n  d_match \"1\" -- \"N\" lu_team : away team\n\n\n\n  class lu_award{\n    +bigint id\n    +String name\n    +String description\n  }\n\n  class j_award_received{\n    +int season\n    +bigint award_id\n    +bigint player_id\n    +String notes\n  }\n\n  class lu_coach{\n    +bigint id\n    +bigint team_id\n    +String first_name\n    +String last_name\n  }\n\n  class lu_player{\n    +bit franchise_tagged\n    +bigint id\n    +bigint team_id\n    +String first_name\n    +String last_name\n    +String position_id\n  }\n\n  class lu_position{\n    String id\n    String name\n  }\n\n  class lu_team{\n    +BOOLEAN active\n    +String abbreviation\n    +bigint id\n    +String color\n    +String city\n    +String display_name\n    +String name\n  }\n\n  class d_match{\n    +int away_score\n    +int home_score\n    +int season\n    +int week\n    +bigint away_team_id\n    +bigint home_team_id\n    +bigint id\n  }\n\n  class j_player_team{\n    +bigint player_id\n    +bigint team_id\n  }\n\n  class j_coach_favorite_player{\n    +bigint coach_id\n    +bigint player_id\n  }\n</code></pre>","tags":["Spring Boot","Project Structure"]},{"location":"software-development/spring/services/","title":"Services","text":"<p>date: 2024-03-18 authors: [wilde] description: &gt;   Services tags:   - Spring Boot   - Services comments: true</p>"},{"location":"software-development/spring/live-templates/intellij/","title":"Intellij","text":"RepositoryServiceControllerMapper <pre><code>import com.thomasjwilde.dynamic_spring.DynamicRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface ${EntityName}Repository extends DynamicRepository&lt;${EntityName}, ${IdType}&gt; {\n\n}\n</code></pre> <pre><code>import com.thomasjwilde.dynamic_spring.services.DynamicSearchService;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ${EntityName}Service  extends DynamicSearchService&lt;${EntityName}, ${IdType}, ${EntityName}Repository&gt; {\n\n}\n</code></pre> <pre><code>import com.thomasjwilde.dynamic_spring.BaseController;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping(\"/${EntityName}\")\npublic class ${EntityName}Controller extends BaseController&lt;${EntityName}, Long, ${EntityName}Service&gt; {\n\n}\n</code></pre> <pre><code>import org.mapstruct.Mapper;\nimport org.mapstruct.factory.Mappers;\n\nimport java.util.List;\n\n@Mapper\npublic interface ${EntityName}Mapper {\n\n    ${EntityName}Mapper INSTANCE = Mappers.getMapper(${EntityName}Mapper.class);\n\n    ${EntityName} toEntity(${EntityName}DTO dto);\n    List&lt;${EntityName}&gt; toEntityList(List&lt;${EntityName}DTO&gt; dtoList);\n\n}\n</code></pre>","tags":["Spring Boot","Live Templates","IntelliJ"]},{"location":"software-development/spring/snippets/application-api.properties/","title":"Application api.properties","text":"<pre><code># API Details (1)\nserver.address=127.0.0.1\nserver.port=8080\nserver.servlet.context-path=/api\nspring.main.web-application-type=servlet\n\n# Used By Executor Service Config (2)\nthread.pool.size=5 \n</code></pre> <ol> <li>These settings configure the application using the profile to be a web server running on local host, port 8080, with a path of <code>/api</code>.</li> <li>If we configure a global Executor Service for background threads it will be initialized with this number.</li> </ol>"},{"location":"software-development/spring/snippets/application-local.properties/","title":"Application local.properties","text":"<pre><code># Database Configuration (1)\nspring.datasource.url= jdbc:mysql://localhost:3306/tutorials?useSSL=false&amp;allowPublicKeyRetrieval=true\nspring.datasource.username=tutorial_master\nspring.datasource.password=tutorial\n\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect\n\n# SQL Printing\nspring.jpa.show-sql=true # (2)\nspring.jpa.properties.hibernate.format_sql=true # (3)\nlogging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE # (4)\n\n# Max database connections (5)\nspring.datasource.maxActive=10\n\n# Allow for batch inserts (6)\nspring.jpa.properties.hibernate.jdbc.batch_size=500\nspring.jpa.properties.hibernate.order_inserts=true\nspring.jpa.properties.hibernate.order_updates=true\n\n# DDL: none, validate, update, create, create-drop (7)\nspring.jpa.hibernate.ddl-auto=create-drop\n\n# Logging Levels (8)\nlogging.level.com.thomaswildetech=TRACE\n\n# Logging Pattern\nlogging.pattern.console=%clr(%d %-7level %-60logger{36} Line %-5L %-40M - %msg%n)\n\n# Allows for color logging\nspring.output.ansi.enabled=always\n</code></pre> <ol> <li>Database URL, username, and password are defined here.  Note, for production, we can simply use a different profile.</li> <li>Shows hibernates SQL calls.  Great for ensuring hibernate is performing as expected.</li> <li>Formats the SQL ouput in a readable format.</li> <li>Shows the inputs into the SQL prepared statements.</li> <li>Max database connections depending on frequency of user calls.</li> <li>Mostly for doing batch inserts through a job.</li> <li> <ul> <li><code>create-drop</code>: Drops all tables before recreating them</li> <li><code>create</code>: Create new tables based on new entities created</li> <li><code>update</code>: Update statements based on new properties within entities</li> <li><code>none</code>: Fastest, no DDL executed</li> </ul> </li> <li>Set logging levels for your any packages.</li> </ol>"},{"location":"software-development/spring/snippets/application-scheduling.properties/","title":"Application scheduling.properties","text":"<pre><code>scheduling.enabled=true\nspring.task.scheduling.pool.size=5\n</code></pre>"},{"location":"software-development/spring/snippets/application.properties/","title":"Application.properties","text":"<pre><code># Profiles (1)\nspring.profiles.active=local,api\n\n# Initialize Sql Statements (2)\nspring.datasource.initialization-mode=NEVER\n#spring.datasource.data=data.sql\n\n# Scheduling Config (default setting: will be overridden by scheduling profile) (3)\nscheduling.enabled=false\n\n# Web Application Type (default setting: will be overridden by api profile) (4)\nspring.main.web-application-type=none\nserver.port=-1\n</code></pre> <ol> <li>Profiles can be used to trigger additional property files and can be used in Beans with <code>@Profile()</code> so that Spring only loads the Bean when the profile is activated.  This can be very useful if you want multiple builds for different microservices.  <code>local</code> and <code>api</code> will load both <code>application-api.properties</code> and <code>application-local.properties</code></li> <li>Used if you want to execute a sql script at the start of the program.</li> <li>This is a custom property for enabling the conditional config <code>SchedulingConfig</code></li> <li>The default setting is <code>servlet</code>, but we may want a microservice config that isn't a web application.</li> </ol>"},{"location":"software-development/spring/snippets/controller-example/","title":"Controller example","text":"<pre><code>@RestController\n@RequestMapping(\"/player\")\n@Profile(\"api\")\npublic class PlayerController{\n\n    private static final Logger log = LoggerFactory.getLogger(PlayerController.class);\n\n    private final PlayerService playerService;\n\n    @Autowired\n    public PlayerController(PlayerService playerService) {\n        this.playerService = playerService;\n    }\n\n    @GetMapping\n    public ResponseEntity&lt;List&lt;Player&gt;&gt; findAll() {\n        return ResponseEntity.ok(playerService.findAll());\n    }\n\n    @GetMapping(\"/{id}\")\n    public ResponseEntity&lt;Player&gt; findById(@PathVariable(\"id\") Long id) {\n        log.debug(\"Finding player by id: {}\", id);\n        return playerService.findById(id)\n                .map(ResponseEntity::ok)\n                .orElseThrow(() -&gt; new ResponseStatusException(\n                        HttpStatus.NOT_FOUND,\n                        \"Player not found with id: \" + id\n                ));\n    }\n\n    @PostMapping\n    public ResponseEntity&lt;Player&gt; create(@RequestBody Player player) {\n        return ResponseEntity.ok(playerService.save(player));\n    }\n\n    @PutMapping(\"/{id}\")\n    public ResponseEntity&lt;Player&gt; update(@PathVariable(\"id\") Long id, @RequestBody Player player) {\n        player.setId(id);\n        return ResponseEntity.ok(playerService.save(player));\n    }\n\n    @PatchMapping(\"/{id}\")\n    public ResponseEntity&lt;Player&gt; patchPlayer(Long id, Map&lt;String, Object&gt; updates) {\n        Player existingPlayer = playerService.findById(id)\n                .orElseThrow(() -&gt; new ResponseStatusException(\n                        HttpStatus.NOT_FOUND,\n                        \"Player not found with id: \" + id\n                ));\n\n        return ResponseEntity.ok(playerService.patch(existingPlayer, updates));\n\n    }\n\n    @DeleteMapping(\"/{id}\")\n    public ResponseEntity&lt;Void&gt; delete(@PathVariable(\"id\") Long id) {\n        playerService.deleteById(id);\n        return ResponseEntity.ok(null);\n    }\n\n}\n</code></pre>"},{"location":"software-development/spring/snippets/entity-example/","title":"Entity example","text":"Player.java<pre><code>    @Entity // (1)\n    @Table(name = \"lu_player\", // (2)\n        indexes = {\n            @Index(columnList = \"firstName, lastName\", name = \"idx_lu_player_first_name\"),\n            @Index(columnList = \"lastName, firstName\", name = \"idx_lu_player_last_name\"),\n            @Index(columnList = \"position_id\", name = \"idx_lu_player_position\"),\n            @Index(columnList = \"team_id\", name = \"idx_lu_player_team\"),\n        }\n    )\n    public class Player {\n\n        @Id // (3)\n        @GeneratedValue(strategy = GenerationType.IDENTITY) // (4)\n        private Long id; // (5)\n\n        @Column(length = 50) // (6)\n        private String firstName;\n\n        @Column(length = 50)\n        private String lastName;\n\n        @ManyToOne(fetch = FetchType.EAGER) // (7)\n        @JoinColumn(name = \"position_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TO_POSITION\")) // (8)\n        private Position position;\n\n        @ManyToOne\n        @JoinColumn(name = \"team_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TO_TEAM\"))\n        @JsonIgnoreProperties(\"roster\")\n        private Team team;\n\n        @OneToMany(mappedBy = \"player\"\n                , cascade = {CascadeType.PERSIST, CascadeType.MERGE}\n        )\n        // Ensure at the database level that if a player is deleted, all of their awards are also deleted\n        @OnDelete(action = OnDeleteAction.CASCADE)\n        @JsonIgnoreProperties(\"player\")\n        private List&lt;AwardReceived&gt; receivedAwards;\n\n        @ManyToMany(\n                cascade = {CascadeType.PERSIST, CascadeType.MERGE}\n        )\n        @JoinTable(\n                name = \"j_player_team\",\n                joinColumns = @JoinColumn(name = \"player_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TEAM_TO_PLAYER\")),\n                inverseJoinColumns = @JoinColumn(name = \"team_id\", referencedColumnName = \"id\", foreignKey = @ForeignKey(name = \"FK_PLAYER_TEAM_TO_TEAM\"))\n        )\n        // Spring knows to delete the join table records when a player is deleted\n        // However, without an OnDelete Cascade, you cannot delete a player from the database because you will get a FK constrain violation\n        @OnDelete(action = OnDeleteAction.CASCADE)\n        private List&lt;Team&gt; teamsPlayedFor;\n\n        private Boolean franchiseTagged;\n\n        @Transient\n        @JsonIgnore\n        private String someTempVariable;\n        // Getters and Setters\n    }\n</code></pre> <ol> <li> <code>@Entity</code> designates this POJO as a database table mapping</li> <li> <code>@Table</code> allows us to specify properties of the table, such as the name, indexes, and unique contraints</li> <li> Primary Key for the database table</li> <li> Will use the database auto-increment feature to populate the id value on insertions</li> <li> We use nullable <code>Long</code> instead of <code>long</code> so that it's easy for Spring to know if any entity has been persisted or not</li> <li> <code>@Column allows us to customize the column, like it's name, length, nullability, as well as a custom definition</code></li> <li> <code>@ManyToOne</code> means that this entity references an entity of another table.  The other entity may referene \"Many\" of this entity.  Default fetching is \"Eager\"</li> <li> <code>@JoinColumn</code> or <code>@JoinColumns</code> specifies the name of the column(s) in this table, and which columns they reference from the other entity.  A foreign key constrain will automatically be applied and can be named.</li> </ol>"},{"location":"software-development/spring/snippets/nfl-database-mermaid/","title":"Nfl database mermaid","text":"<pre><code>classDiagram\n\n  lu_player \"1\" -- \"N\" j_award_received : has\n  lu_player \"1\" -- \"N\" j_player_team : has\n  lu_player \"1\" -- \"N\" j_coach_favorite_player : has\n  lu_award \"1\" -- \"N\" j_award_received : has  \n  lu_team \"1\" -- \"N\" d_match : has\n  lu_team \"1\" -- \"N\" lu_coach : has\n  lu_position \"1\" -- \"N\" lu_player : has\n  lu_team \"1\" -- \"N\" lu_player : belongs to\n  lu_player \"0..1\" -- \"1\" lu_coach : has\n  lu_team \"1\" -- \"N\" j_player_team : has\n  lu_player \"1\" -- \"N\" j_player_team : has\n  lu_coach \"1\" -- \"N\" j_coach_favorite_player : has\n  lu_player \"1\" -- \"N\" j_coach_favorite_player : has\n  d_match \"1\" -- \"N\" j_player_team : involves\n  d_match \"1\" -- \"N\" lu_team : home team\n  d_match \"1\" -- \"N\" lu_team : away team\n\n\n\n  class lu_award{\n    +bigint id\n    +String name\n    +String description\n  }\n\n  class j_award_received{\n    +int season\n    +bigint award_id\n    +bigint player_id\n    +String notes\n  }\n\n  class lu_coach{\n    +bigint id\n    +bigint team_id\n    +String first_name\n    +String last_name\n  }\n\n  class lu_player{\n    +bit franchise_tagged\n    +bigint id\n    +bigint team_id\n    +String first_name\n    +String last_name\n    +String position_id\n  }\n\n  class lu_position{\n    String id\n    String name\n  }\n\n  class lu_team{\n    +BOOLEAN active\n    +String abbreviation\n    +bigint id\n    +String color\n    +String city\n    +String display_name\n    +String name\n  }\n\n  class d_match{\n    +int away_score\n    +int home_score\n    +int season\n    +int week\n    +bigint away_team_id\n    +bigint home_team_id\n    +bigint id\n  }\n\n  class j_player_team{\n    +bigint player_id\n    +bigint team_id\n  }\n\n  class j_coach_favorite_player{\n    +bigint coach_id\n    +bigint player_id\n  }\n</code></pre>"},{"location":"software-development/spring/snippets/repository-example/","title":"Repository example","text":"<pre><code>@Repository\npublic interface PlayerRepository extends JpaRepository&lt;Player, Long&gt; {\n\n    @Override\n    @EntityGraph(attributePaths = {\"team\", \"position\"})  // Can't fetch mutliple \"bags\" (lists) with EntityGraph\n    List&lt;Player&gt; findAll();\n\n    @Override\n    @EntityGraph(attributePaths = {\"team\", \"position\", \"teamsPlayedFor\", \"receivedAwards\", \"receivedAwards.award\"}) // Can fetch multiple \"bags\" when returning only 1 result\n    Optional&lt;Player&gt; findById(Long id);\n}\n</code></pre>"},{"location":"software-development/spring/snippets/service-example/","title":"Service example","text":"<pre><code>@Service\npublic class PlayerService {\n\n    private final PlayerRepository playerRepository;\n\n    private final AwardRepository awardRepository;\n\n    private final TeamRepository teamRepository;\n\n    @Autowired\n    public PlayerService(PlayerRepository playerRepository, AwardRepository awardRepository, TeamRepository teamRepository) {\n        this.playerRepository = playerRepository;\n        this.awardRepository = awardRepository;\n        this.teamRepository = teamRepository;\n    }\n\n    public List&lt;Player&gt; findAll() {\n        return playerRepository.findAll();\n    }\n\n    public Optional&lt;Player&gt; findById(Long id){\n        return playerRepository.findById(id);\n    }\n\n    public Player save(Player player) {\n\n        // If we are cascading/persisting new received awards, we need to fetch the award from the database\n        if(player.getReceivedAwards() != null){\n            player.getReceivedAwards().forEach(awardReceived -&gt; {\n                Optional&lt;Award&gt; award = awardRepository.findById(awardReceived.getAward().getId());\n                award.ifPresent(awardReceived::setAward);\n                awardReceived.setPlayer(player);\n            });\n        }\n\n        // If we are cascading/persisting teams played for, we need to fetch the teams from the database\n        if(player.getTeamsPlayedFor() != null){\n            for(int i = 0; i &lt; player.getTeamsPlayedFor().size(); i++){\n                Team team = player.getTeamsPlayedFor().get(i);\n                Optional&lt;Team&gt; teamFromDb = teamRepository.findById(team.getId());\n\n                int finalI = i;\n                teamFromDb.ifPresent(fetchedTeam -&gt; player.getTeamsPlayedFor().set(finalI, fetchedTeam));\n            }\n        }\n\n        return playerRepository.save(player);\n    }\n\n    public Player patch(Player existingPlayer, Map&lt;String, Object&gt; updates){\n        for (Map.Entry&lt;String, Object&gt; entry : updates.entrySet()) {\n            switch (entry.getKey()) {\n                case \"firstName\":\n                    existingPlayer.setFirstName((String) entry.getValue());\n                    break;\n                case \"lastName\":\n                    existingPlayer.setLastName((String) entry.getValue());\n                    break;\n                case \"position\":\n                    existingPlayer.setPosition((Position) entry.getValue());\n                    break;\n                case \"team\":\n                    existingPlayer.setTeam((Team) entry.getValue());\n                    break;\n                case \"franchiseTagged\":\n                    existingPlayer.setFranchiseTagged((Boolean) entry.getValue());\n                    break;\n            }\n        }\n\n        return playerRepository.save(existingPlayer);\n    }\n\n    public void deleteById(Long id){\n        playerRepository.deleteById(id);\n    }\n}\n</code></pre>"},{"location":"software-development/spring/snippets/spring-boot-file-structure/","title":"Spring boot file structure","text":"<pre><code>\u251c\u2500\u2500 [Project Name]\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 .gradle\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 build\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 main\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u251c\u2500\u2500 java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u251c\u2500\u2500 com.thomaswildetech.structure\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 models\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 ErrorResponse.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 security\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 InitializeDbData.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 JsonConfig.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 RestExceptionHandler.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 SchedulingConfig.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u251c\u2500\u2500 controllers\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 league\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502       \u2514\u2500\u2500 PlayerController.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u251c\u2500\u2500 entities\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 awards\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 Award.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 AwardReceived.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 league\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 Coach.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 Player.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 Position.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 Team.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 schedule\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502       \u2514\u2500\u2500 Match.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u251c\u2500\u2500 repositories\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 league\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502       \u2514\u2500\u2500 PlayerRepository.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u251c\u2500\u2500 scheduled\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u251c\u2500\u2500 services\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 league\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2502       \u2514\u2500\u2500 PlayerRepository.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2502   \u2502   \u2514\u2500\u2500 StructureApplication.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2514\u2500\u2500 resources\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 application.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 application-api.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 application-local.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 application-scheduling.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 data.sql\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 test\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 .gitignore\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 build.gradle\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 settings.json\n\u2514\u2500\u2500\n</code></pre>"},{"location":"software-development/sql/aggregate-view-one-to-many/","title":"Aggregate view one to many","text":"<p>see my chatgpt conversionation: https://chatgpt.com/c/37ef7af1-07ed-4e6b-860f-b234fb106eeb <pre><code>CREATE OR REPLACE v_core_plan_summary AS\nSELECT cs_job AS ps_job, PS_ACTIVE_OPS, PS_ACTIVE_ANALYSTS, PS_SUM_HRS\nFROM core_summary\n\nLEFT JOIN (\n   SELECT ps_job, \n    LISTAGG(DISTINCT o.O_NAME, ', ') WITHIN GROUP (ORDER BY ps.ps_job) AS PS_ACTIVE_OPS,\n    LISTAGG(DISTINCT p_active.P_FULLNAME, ', ') WITHIN GROUP (ORDER BY p_active.P_FULLNAME) AS PS_ACTIVE_ANALYSTS,\n    SUM(cp.CP_HRS) AS PS_SUM_HRS\n    FROM CORE_PLAN_PARENT ps\n    LEFT JOIN CX_OP o ON (o.O_ID = ps.PS_ID_OP) AND (ps.PS_dt_start IS NOT NULL) AND (ps.PS_dt_complete IS NULL)\n    LEFT JOIN CORE_PLAN cp ON ps.PS_ID = cp.CP_ID_PARENT\n    LEFT JOIN CX_PERSON p_active ON (p_active.P_ID = cp.CP_ID_PERSON) AND (ps.PS_dt_start IS NOT NULL) AND (ps.PS_dt_complete IS NULL)\n   GROUP  BY ps_job   \n   ) ps_summary ON ps_job = cs_job;\n</code></pre></p> <p>For MySQL or SQLlite use <code>GROUP_CONCAT</code> <pre><code>GROUP_CONCAT(DISTINCT o.O_NAME ORDER BY ps.ps_job SEPARATOR ', ') AS PS_ACTIVE_OPS,\n</code></pre></p> <p>For SQL Server 2017 and Postgres, use <code>STRING_AGG</code> <pre><code>STRING_AGG(DISTINCT o.O_NAME, ', ') WITHIN GROUP (ORDER BY ps.ps_job) AS PS_ACTIVE_OPS,\n</code></pre></p>"},{"location":"software-development/sql/database-size/","title":"Database size","text":"<pre><code>SELECT table_schema AS 'Database', \n       ROUND(SUM(data_length + index_length) / 1024 / 1024, 2) AS 'Size (MB)' \nFROM information_schema.tables \nWHERE table_schema = 'espn_fantasy_football'\nGROUP BY table_schema;\n</code></pre>"},{"location":"software-development/sql/lead-lag/","title":"Lead lag","text":""},{"location":"software-development/sql/lead-lag/#selecting-all-and-the-previous-lag-or-next-lead-ordered-by-certain-columns","title":"Selecting all and the previous (LAG) or next (LEAD) ordered by certain columns","text":"<pre><code>SELECT id,\nLAG(id, 1, 0) OVER (ORDER BY filter, date, id) AS previous_entity\nFROM table\n</code></pre>"},{"location":"software-development/sql/lead-lag/#selecting-all-of-the-previouus-entity-provided-the-current-id","title":"Selecting all of the previouus entity provided the current ID","text":"<p>``` SELECT * FROM table WHERE id =   (     SELECT previous_entity FROM       (         SELECT             id,             LAG(id, 1, 0) OVER (ORDER BY filter, date, id) AS previous_entity         FROM table       )     WHERE id = ?   )</p>"},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/archive/2023/","title":"2023","text":""},{"location":"blog/category/self-hosted/","title":"Self Hosted","text":""},{"location":"blog/category/linux/","title":"Linux","text":""},{"location":"blog/category/spring-boot/","title":"Spring Boot","text":""},{"location":"blog/category/sql/","title":"SQL","text":""},{"location":"blog/category/stripe/","title":"Stripe","text":""},{"location":"blog/category/flutter/","title":"Flutter","text":""},{"location":"blog/category/casaos/","title":"CasaOS","text":""},{"location":"blog/category/immich/","title":"Immich","text":""},{"location":"blog/category/umbrel/","title":"Umbrel","text":""},{"location":"blog/category/youtube/","title":"YouTube","text":""},{"location":"blog/category/serverless/","title":"Serverless","text":""},{"location":"blog/category/jpro/","title":"JPro","text":""},{"location":"blog/category/javafx/","title":"JavaFX","text":""},{"location":"blog/category/espn-fantasy-football-api/","title":"ESPN Fantasy Football API","text":""},{"location":"blog/category/linux-desktop/","title":"Linux Desktop","text":""},{"location":"blog/category/home-server/","title":"Home Server","text":""},{"location":"blog/category/angular/","title":"Angular","text":""},{"location":"blog/category/gradle/","title":"Gradle","text":""},{"location":"blog/category/artifact-repository/","title":"Artifact Repository","text":""},{"location":"blog/page/2/","title":"Blog","text":""},{"location":"blog/page/3/","title":"Blog","text":""},{"location":"blog/page/4/","title":"Blog","text":""},{"location":"blog/archive/2024/page/2/","title":"2024","text":""},{"location":"blog/archive/2024/page/3/","title":"2024","text":""},{"location":"tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"tags/#2fa","title":"2FA","text":"<ul> <li>Sudo Two-Factor Authentication</li> </ul>"},{"location":"tags/#entitylisteners","title":"@EntityListeners","text":"<ul> <li>Listening to events in SpringBoot</li> </ul>"},{"location":"tags/#repositoryeventhandler","title":"@RepositoryEventHandler","text":"<ul> <li>Listening to events in SpringBoot</li> </ul>"},{"location":"tags/#angular","title":"Angular","text":"<ul> <li>Communicating between components</li> <li>Environment Configuration</li> <li>Project Structure</li> <li>Setup</li> <li>Alerts</li> <li>Communication</li> <li>Chart.js</li> <li>Table</li> <li>Table</li> <li>Ng matero</li> <li>Overview</li> <li>Dockerizing an application</li> </ul>"},{"location":"tags/#artifact-repository","title":"Artifact Repository","text":"<ul> <li>Sonatype Nexus</li> </ul>"},{"location":"tags/#aspects","title":"Aspects","text":"<ul> <li>Listening to events in SpringBoot</li> </ul>"},{"location":"tags/#auditing","title":"Auditing","text":"<ul> <li>Listening to events in SpringBoot</li> </ul>"},{"location":"tags/#authentication","title":"Authentication","text":"<ul> <li>How to use a FireBase as a Auth provider (untested)</li> </ul>"},{"location":"tags/#authorization","title":"Authorization","text":"<ul> <li>Authorization</li> </ul>"},{"location":"tags/#cicd","title":"CI/CD","text":"<ul> <li>Deploy to GitHub Pages</li> </ul>"},{"location":"tags/#caddy","title":"Caddy","text":"<ul> <li>Hosting local https app</li> <li>Hosting local https with trusted cert from Cloudflare with Caddy</li> </ul>"},{"location":"tags/#casaos","title":"CasaOS","text":"<ul> <li>Using Ubuntu Snap Store</li> <li>Using Umbrel</li> <li>What is Immich?</li> </ul>"},{"location":"tags/#cloudflare","title":"CloudFlare","text":"<ul> <li>What is Immich?</li> </ul>"},{"location":"tags/#cloudflare_1","title":"Cloudflare","text":"<ul> <li>CloudFlare Tunnel</li> </ul>"},{"location":"tags/#cloudron","title":"Cloudron","text":"<ul> <li>What is Immich?</li> </ul>"},{"location":"tags/#component-communication","title":"Component Communication","text":"<ul> <li>Communicating between components</li> <li>Communication</li> </ul>"},{"location":"tags/#components","title":"Components","text":"<ul> <li>Communicating between components</li> <li>Communication</li> </ul>"},{"location":"tags/#configuration","title":"Configuration","text":"<ul> <li>Environment Configuration</li> </ul>"},{"location":"tags/#database","title":"Database","text":"<ul> <li>Dockerizing an application</li> </ul>"},{"location":"tags/#datbase","title":"Datbase","text":"<ul> <li>Serverless Relational Databases</li> </ul>"},{"location":"tags/#docker","title":"Docker","text":"<ul> <li>Setting up your own private Docker Hub Repository</li> <li>What is Immich?</li> <li>Docker</li> <li>Dockerizing an application</li> </ul>"},{"location":"tags/#elk","title":"ELK","text":"<ul> <li>ELK Stack</li> </ul>"},{"location":"tags/#entites","title":"Entites","text":"<ul> <li>Entity Properties</li> </ul>"},{"location":"tags/#entity-graph","title":"Entity Graph","text":"<ul> <li>Entity graph</li> </ul>"},{"location":"tags/#file-download","title":"File Download","text":"<ul> <li>File upload download</li> <li>Files</li> </ul>"},{"location":"tags/#file-upload","title":"File Upload","text":"<ul> <li>File upload download</li> <li>Files</li> </ul>"},{"location":"tags/#files","title":"Files","text":"<ul> <li>File upload download</li> <li>Files</li> </ul>"},{"location":"tags/#firebase","title":"Firebase","text":"<ul> <li>How to use a FireBase as a Auth provider (untested)</li> </ul>"},{"location":"tags/#flutter","title":"Flutter","text":"<ul> <li>2024 07 27 Flutter</li> <li>Flutter Docs Android</li> <li>Flutter Firebase Tutorial</li> <li>Fireship.io tutorial</li> </ul>"},{"location":"tags/#github","title":"Github","text":"<ul> <li>Deploy to GitHub Pages</li> </ul>"},{"location":"tags/#github-actions","title":"Github Actions","text":"<ul> <li>Deploy to GitHub Pages</li> </ul>"},{"location":"tags/#github-pages","title":"Github Pages","text":"<ul> <li>Deploy to GitHub Pages</li> </ul>"},{"location":"tags/#goaccess","title":"GoAccess","text":"<ul> <li>Using GoAccess with Nginx Proxy Manager (NPM) to visuallize logs.</li> </ul>"},{"location":"tags/#gradle","title":"Gradle","text":"<ul> <li>Organizing different repositories and environmental variables</li> <li>Understanding the Structure of a Spring Boot Application</li> </ul>"},{"location":"tags/#home-server","title":"Home Server","text":"<ul> <li>Sonatype Nexus</li> </ul>"},{"location":"tags/#honojs","title":"Hono.js","text":"<ul> <li>Stripe Fireship Demo</li> </ul>"},{"location":"tags/#immich","title":"Immich","text":"<ul> <li>Setting up a Free, Self Hosted, Photo Storage Alternative</li> <li>Using Umbrel</li> <li>What is Immich?</li> <li>Hosting local https app</li> <li>Hosting local https with trusted cert from Cloudflare with NPM</li> <li>Hosting local https with trusted cert from Cloudflare with Caddy</li> <li>Using Kopia to setup snapshot backups</li> <li>Immich</li> </ul>"},{"location":"tags/#intellij","title":"IntelliJ","text":"<ul> <li>Intellij</li> </ul>"},{"location":"tags/#jpro","title":"JPro","text":"<ul> <li>Creating a working JavaFX demo in the web</li> </ul>"},{"location":"tags/#java","title":"Java","text":"<ul> <li>Organizing different repositories and environmental variables</li> <li>Understanding the Structure of a Spring Boot Application</li> <li>Log4j2 config</li> </ul>"},{"location":"tags/#javafx","title":"JavaFX","text":"<ul> <li>Creating a working JavaFX demo in the web</li> <li>Vs code</li> </ul>"},{"location":"tags/#jsonidentityinfo","title":"JsonIdentityInfo","text":"<ul> <li>Entity back references</li> </ul>"},{"location":"tags/#jsonignoreproperties","title":"JsonIgnoreProperties","text":"<ul> <li>Entity back references</li> </ul>"},{"location":"tags/#kibana","title":"Kibana","text":"<ul> <li>ELK Stack</li> </ul>"},{"location":"tags/#kopia","title":"Kopia","text":"<ul> <li>Using Kopia to setup snapshot backups</li> </ul>"},{"location":"tags/#lets-encrypt","title":"Let's Encrypt","text":"<ul> <li>Nginx Web Server</li> </ul>"},{"location":"tags/#linux","title":"Linux","text":"<ul> <li>Sudo Two-Factor Authentication</li> <li>Hosting local https app</li> <li>Hosting local https with trusted cert from Cloudflare with NPM</li> <li>Hosting local https with trusted cert from Cloudflare with Caddy</li> <li>Using GoAccess with Nginx Proxy Manager (NPM) to visuallize logs.</li> <li>Using Kopia to setup snapshot backups</li> </ul>"},{"location":"tags/#linux-desktop","title":"Linux Desktop","text":"<ul> <li>Installing Office 2013 with Wine</li> </ul>"},{"location":"tags/#linux-mint","title":"Linux Mint","text":"<ul> <li>Installing Office 2013 with Wine</li> </ul>"},{"location":"tags/#live-templates","title":"Live Templates","text":"<ul> <li>Vs code</li> <li>Intellij</li> </ul>"},{"location":"tags/#log4j2","title":"Log4j2","text":"<ul> <li>Log4j2 config</li> </ul>"},{"location":"tags/#logs","title":"Logs","text":"<ul> <li>Using GoAccess with Nginx Proxy Manager (NPM) to visuallize logs.</li> </ul>"},{"location":"tags/#logstash","title":"Logstash","text":"<ul> <li>ELK Stack</li> </ul>"},{"location":"tags/#mfa","title":"MFA","text":"<ul> <li>Sudo Two-Factor Authentication</li> </ul>"},{"location":"tags/#mssql","title":"MSSQL","text":"<ul> <li>MS SQL Installation</li> </ul>"},{"location":"tags/#material","title":"Material","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#mkdocs","title":"MkDocs","text":"<ul> <li>Deploy to GitHub Pages</li> </ul>"},{"location":"tags/#nextcloud","title":"NextCloud","text":"<ul> <li>NextCloud</li> </ul>"},{"location":"tags/#nexus","title":"Nexus","text":"<ul> <li>Setting up your own private Docker Hub Repository</li> </ul>"},{"location":"tags/#nginx","title":"Nginx","text":"<ul> <li>Nginx Web Server</li> </ul>"},{"location":"tags/#nginx-proxy-manager","title":"Nginx Proxy Manager","text":"<ul> <li>Hosting local https with trusted cert from Cloudflare with NPM</li> <li>Using GoAccess with Nginx Proxy Manager (NPM) to visuallize logs.</li> </ul>"},{"location":"tags/#no-ip","title":"No-IP","text":"<ul> <li>DDNS</li> </ul>"},{"location":"tags/#photo-storage-solution","title":"Photo Storage Solution","text":"<ul> <li>Setting up a Free, Self Hosted, Photo Storage Alternative</li> </ul>"},{"location":"tags/#portainer","title":"Portainer","text":"<ul> <li>What is Immich?</li> <li>Portainer</li> </ul>"},{"location":"tags/#project-structure","title":"Project Structure","text":"<ul> <li>Project Structure</li> <li>Project Structure</li> </ul>"},{"location":"tags/#raid","title":"RAID","text":"<ul> <li>Setting up RAID 1 on my Ubuntu Desktop</li> </ul>"},{"location":"tags/#record","title":"Record","text":"<ul> <li>2023 10 08 ESPN Fantasy Football SpringBoot</li> </ul>"},{"location":"tags/#remote-desktop","title":"Remote Desktop","text":"<ul> <li>Remote Desktop</li> </ul>"},{"location":"tags/#repository","title":"Repository","text":"<ul> <li>Entity graph</li> </ul>"},{"location":"tags/#roster","title":"Roster","text":"<ul> <li>2023 10 07 ESPN Fantasy Football SpringBoot</li> </ul>"},{"location":"tags/#sql","title":"SQL","text":"<ul> <li>MS SQL Installation</li> </ul>"},{"location":"tags/#ssh","title":"SSH","text":"<ul> <li>SSH</li> </ul>"},{"location":"tags/#ssl","title":"SSL","text":"<ul> <li>Nginx Web Server</li> </ul>"},{"location":"tags/#seafile","title":"Seafile","text":"<ul> <li>Seafile</li> </ul>"},{"location":"tags/#self-host","title":"Self Host","text":"<ul> <li>Setting up your own private Docker Hub Repository</li> </ul>"},{"location":"tags/#self-hosted","title":"Self Hosted","text":"<ul> <li>Using Ubuntu Snap Store</li> <li>Using Umbrel</li> <li>Using Umbrel</li> <li>What is Immich?</li> </ul>"},{"location":"tags/#software-templates","title":"Software Templates","text":"<ul> <li>Overview</li> </ul>"},{"location":"tags/#sonatype-nexus","title":"Sonatype Nexus","text":"<ul> <li>Organizing different repositories and environmental variables</li> <li>Sonatype Nexus</li> </ul>"},{"location":"tags/#spring-boot","title":"Spring Boot","text":"<ul> <li>2023 10 07 ESPN Fantasy Football SpringBoot</li> <li>2023 10 08 ESPN Fantasy Football SpringBoot</li> <li>Understanding the Structure of a Spring Boot Application</li> <li>2024 08 26 ESPN Fantasy Football SpringBoot</li> <li>2024 10 06 ESPN Fantasy Football SpringBoot</li> <li>How to use a FireBase as a Auth provider (untested)</li> <li>Listening to events in SpringBoot</li> <li>Dockerizing an application</li> <li>Authorization</li> <li>Entity Properties</li> <li>Entity back references</li> <li>Entity graph</li> <li>File upload download</li> <li>Files</li> <li>Project Structure</li> <li>Intellij</li> </ul>"},{"location":"tags/#stripe","title":"Stripe","text":"<ul> <li>Stripe Fireship Demo</li> </ul>"},{"location":"tags/#supabase","title":"Supabase","text":"<ul> <li>Stripe Fireship Demo</li> </ul>"},{"location":"tags/#ubuntu","title":"Ubuntu","text":"<ul> <li>DDNS</li> <li>Docker</li> <li>ELK Stack</li> <li>Immich</li> <li>Mapped Network drive</li> <li>NextCloud</li> <li>Portainer</li> <li>Remote Desktop</li> <li>Seafile</li> <li>SSH</li> <li>Nginx Web Server</li> <li>VPN with WireGuard</li> </ul>"},{"location":"tags/#ubuntu-desktop","title":"Ubuntu Desktop","text":"<ul> <li>Building a Home Server with an old PC</li> <li>Setting up a Free and Open Source VPN Server</li> <li>Setting up a Free, Self Hosted, Photo Storage Alternative</li> <li>Setting up RAID 1 on my Ubuntu Desktop</li> </ul>"},{"location":"tags/#umbrel","title":"Umbrel","text":"<ul> <li>Using Ubuntu Snap Store</li> <li>Using Umbrel</li> <li>What is Immich?</li> </ul>"},{"location":"tags/#vpn","title":"VPN","text":"<ul> <li>Setting up a Free and Open Source VPN Server</li> <li>VPN with WireGuard</li> </ul>"},{"location":"tags/#vs-code","title":"VS Code","text":"<ul> <li>Vs code</li> </ul>"},{"location":"tags/#web-server","title":"Web Server","text":"<ul> <li>Nginx Web Server</li> </ul>"},{"location":"tags/#wine","title":"Wine","text":"<ul> <li>Installing Office 2013 with Wine</li> </ul>"},{"location":"tags/#wireguard","title":"WireGuard","text":"<ul> <li>Setting up a Free and Open Source VPN Server</li> <li>VPN with WireGuard</li> </ul>"},{"location":"tags/#youtube","title":"YouTube","text":"<ul> <li>What is Immich?</li> </ul>"},{"location":"tags/#zero-trust","title":"Zero Trust","text":"<ul> <li>CloudFlare Tunnel</li> </ul>"},{"location":"tags/#alerts","title":"alerts","text":"<ul> <li>Alerts</li> </ul>"},{"location":"tags/#api","title":"api","text":"<ul> <li>Table</li> <li>Table</li> </ul>"},{"location":"tags/#chartjs","title":"chart.js","text":"<ul> <li>Chart.js</li> </ul>"},{"location":"tags/#charts","title":"charts","text":"<ul> <li>Chart.js</li> </ul>"},{"location":"tags/#github-api","title":"github api","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#https","title":"https","text":"<ul> <li>Hosting local https app</li> <li>Hosting local https with trusted cert from Cloudflare with NPM</li> <li>Hosting local https with trusted cert from Cloudflare with Caddy</li> </ul>"},{"location":"tags/#local-https","title":"local https","text":"<ul> <li>Hosting local https app</li> <li>Hosting local https with trusted cert from Cloudflare with NPM</li> <li>Hosting local https with trusted cert from Cloudflare with Caddy</li> </ul>"},{"location":"tags/#mat-card","title":"mat-card","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#mat-table","title":"mat-table","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#material_1","title":"material","text":"<ul> <li>Alerts</li> </ul>"},{"location":"tags/#ng-bootstrap","title":"ng-bootstrap","text":"<ul> <li>Alerts</li> <li>Table</li> </ul>"},{"location":"tags/#ng-container","title":"ng-container","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#ng-matero","title":"ng-matero","text":"<ul> <li>Ng matero</li> </ul>"},{"location":"tags/#ngcomponentoutlet","title":"ngComponentOutlet","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#ngif","title":"ngIf","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#ngswitch","title":"ngSwitch","text":"<ul> <li>Table</li> </ul>"},{"location":"tags/#notifications","title":"notifications","text":"<ul> <li>Alerts</li> </ul>"},{"location":"tags/#samba","title":"samba","text":"<ul> <li>Mapped Network drive</li> </ul>"},{"location":"tags/#table","title":"table","text":"<ul> <li>Table</li> <li>Table</li> </ul>"}]}